[{"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/index.js":"1","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/App.js":"2","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/reportWebVitals.js":"3","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Context/LivingPlaceRegistrationContext.js":"4","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/Registration/index.js":"5","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/Home.js":"6","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/Registration/index.js":"7","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/FloorplanInformations.js":"8","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/LivingPlaceRegistrationTimeline.js":"9","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/RoomInformations.js":"10","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/Nav.js":"11","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/Header.js":"12","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/LivingPlaceInformations.js":"13","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/InformationsSent.js":"14","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/SomeQuestions.js":"15","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/ResidenceInformations.js":"16","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/RoomsInformations.js":"17","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/ComplexInformations.js":"18","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/LivingPlacesInformations.js":"19","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/Images.js":"20","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/Header.js":"21","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/footer/Footer.js":"22","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/FloorplanInformations.js":"23","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/HomeSection.js":"24","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/ExploreSection.js":"25","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/003_pre_selection/PreSelectionSection.js":"26","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/004_interlude/InterludeSection.js":"27","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/MapSection.js":"28","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Context/LivingPlaceRegistrationTimelineState.js":"29","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/footer/ContactUs.js":"30","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/Nav.js":"31","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/footer/FooterNav.js":"32","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/RoomFacilities.js":"33","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ComplexNames.js":"34","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/RoomTypes.js":"35","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/PhoneNumberLandcode.js":"36","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/StatusAtPointOfRegestering.js":"37","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/MaximumStayDuration.js":"38","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/Countries.js":"39","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/LivingPlaceTypes.js":"40","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ResidenceTypes.js":"41","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ResidenceFacilities.js":"42","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ServiceCostTerm.js":"43","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/LivingPlaceFacilities.js":"44","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ComplexFacilities.js":"45","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/HomeIntroduction.js":"46","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/ArcHome.js":"47","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Assets/SVG/Registration/index.js":"48","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/HomeSearch.js":"49","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/WhatOurCustomerAreSaying.js":"50","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/MapResult.js":"51","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/social_networks/SocialNetworks.js":"52","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/logo/LogoSVG.js":"53","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/004_interlude/ArcSection004.js":"54","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/map/GoogleMap.js":"55","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/004_interlude/Quote.js":"56","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/003_pre_selection/PreSelectionIntroduction.js":"57","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/ExploreRentOut.js":"58","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/ExploreRent.js":"59","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/003_pre_selection/PreSelectionVhes.js":"60","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/Statistics.js":"61","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/AboutUs.js":"62","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/LogIn.js":"63","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/logo/LogoBlackSVG.js":"64","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/SignUp.js":"65","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/Menu.js":"66","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/SelectForm.js":"67","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Assets/SVG/Logo.js":"68","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/SearchForm.js":"69","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/buttons/RoundedButton.js":"70","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/MapSearchForm.js":"71","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/arc/Arc001SVG.js":"72","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/map/CustomMarker.js":"73","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/vhes/VhesManager.js":"74","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/map/css/MapStyle.js":"75","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/LinkedInSVG.js":"76","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/TwitterSVG.js":"77","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/FacebookSVG.js":"78","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/InstagramSVG.js":"79","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/vhes/Vhes.js":"80","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Context/GlobalVariablesContext.js":"81","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/vhes/VHE.js":"82","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/arrows/Arrow002.js":"83","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/vhes/AreaSVG.js":"84","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/vhes/BedroomSVG.js":"85","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/vhes/BathroomSVG.js":"86"},{"size":470,"mtime":1639389487619,"results":"87","hashOfConfig":"88"},{"size":2391,"mtime":1639389487556,"results":"89","hashOfConfig":"88"},{"size":354,"mtime":1639389487619,"results":"90","hashOfConfig":"88"},{"size":2068,"mtime":1639389487574,"results":"91","hashOfConfig":"88"},{"size":460,"mtime":1639389487571,"results":"92","hashOfConfig":"88"},{"size":739,"mtime":1639389487602,"results":"93","hashOfConfig":"88"},{"size":621,"mtime":1639389487576,"results":"94","hashOfConfig":"88"},{"size":3096,"mtime":1639389487566,"results":"95","hashOfConfig":"88"},{"size":6360,"mtime":1639389487568,"results":"96","hashOfConfig":"88"},{"size":5607,"mtime":1639389487573,"results":"97","hashOfConfig":"88"},{"size":2359,"mtime":1639389487571,"results":"98","hashOfConfig":"88"},{"size":432,"mtime":1639389487566,"results":"99","hashOfConfig":"88"},{"size":15068,"mtime":1639389487566,"results":"100","hashOfConfig":"88"},{"size":1305,"mtime":1639389487575,"results":"101","hashOfConfig":"88"},{"size":9326,"mtime":1639396214412,"results":"102","hashOfConfig":"88"},{"size":14054,"mtime":1639403233289,"results":"103","hashOfConfig":"88"},{"size":16240,"mtime":1639407285706,"results":"104","hashOfConfig":"88"},{"size":13537,"mtime":1639396339082,"results":"105","hashOfConfig":"88"},{"size":23316,"mtime":1639407516383,"results":"106","hashOfConfig":"88"},{"size":854,"mtime":1639389487575,"results":"107","hashOfConfig":"88"},{"size":390,"mtime":1639389487580,"results":"108","hashOfConfig":"88"},{"size":784,"mtime":1639389487579,"results":"109","hashOfConfig":"88"},{"size":6912,"mtime":1639406665465,"results":"110","hashOfConfig":"88"},{"size":1198,"mtime":1639389487602,"results":"111","hashOfConfig":"88"},{"size":1394,"mtime":1639389487603,"results":"112","hashOfConfig":"88"},{"size":631,"mtime":1639389487604,"results":"113","hashOfConfig":"88"},{"size":5722,"mtime":1639389487604,"results":"114","hashOfConfig":"88"},{"size":1613,"mtime":1639389487605,"results":"115","hashOfConfig":"88"},{"size":168,"mtime":1639389487574,"results":"116","hashOfConfig":"88"},{"size":861,"mtime":1639389487579,"results":"117","hashOfConfig":"88"},{"size":1363,"mtime":1639389487580,"results":"118","hashOfConfig":"88"},{"size":1305,"mtime":1639389487580,"results":"119","hashOfConfig":"88"},{"size":402,"mtime":1639389487575,"results":"120","hashOfConfig":"88"},{"size":109,"mtime":1639389487574,"results":"121","hashOfConfig":"88"},{"size":258,"mtime":1639389487575,"results":"122","hashOfConfig":"88"},{"size":3156,"mtime":1639389487574,"results":"123","hashOfConfig":"88"},{"size":796,"mtime":1639389487575,"results":"124","hashOfConfig":"88"},{"size":204,"mtime":1639389487574,"results":"125","hashOfConfig":"88"},{"size":2867,"mtime":1639389487574,"results":"126","hashOfConfig":"88"},{"size":223,"mtime":1639389487574,"results":"127","hashOfConfig":"88"},{"size":282,"mtime":1639389487575,"results":"128","hashOfConfig":"88"},{"size":352,"mtime":1639389487575,"results":"129","hashOfConfig":"88"},{"size":403,"mtime":1639389487575,"results":"130","hashOfConfig":"88"},{"size":714,"mtime":1639389487574,"results":"131","hashOfConfig":"88"},{"size":608,"mtime":1639389487574,"results":"132","hashOfConfig":"88"},{"size":723,"mtime":1639389487602,"results":"133","hashOfConfig":"88"},{"size":381,"mtime":1639389487602,"results":"134","hashOfConfig":"88"},{"size":43,"mtime":1639389487566,"results":"135","hashOfConfig":"88"},{"size":374,"mtime":1639389487602,"results":"136","hashOfConfig":"88"},{"size":1927,"mtime":1639389487605,"results":"137","hashOfConfig":"88"},{"size":656,"mtime":1639389487605,"results":"138","hashOfConfig":"88"},{"size":1490,"mtime":1639389487616,"results":"139","hashOfConfig":"88"},{"size":2925,"mtime":1639389487616,"results":"140","hashOfConfig":"88"},{"size":943,"mtime":1639389487604,"results":"141","hashOfConfig":"88"},{"size":2976,"mtime":1639389487606,"results":"142","hashOfConfig":"88"},{"size":401,"mtime":1639389487604,"results":"143","hashOfConfig":"88"},{"size":657,"mtime":1639389487604,"results":"144","hashOfConfig":"88"},{"size":1833,"mtime":1639389487603,"results":"145","hashOfConfig":"88"},{"size":1826,"mtime":1639389487603,"results":"146","hashOfConfig":"88"},{"size":445,"mtime":1639389487604,"results":"147","hashOfConfig":"88"},{"size":1831,"mtime":1639389487603,"results":"148","hashOfConfig":"88"},{"size":248,"mtime":1639389487580,"results":"149","hashOfConfig":"88"},{"size":262,"mtime":1639389487580,"results":"150","hashOfConfig":"88"},{"size":5578,"mtime":1639389487616,"results":"151","hashOfConfig":"88"},{"size":265,"mtime":1639389487580,"results":"152","hashOfConfig":"88"},{"size":610,"mtime":1639389487580,"results":"153","hashOfConfig":"88"},{"size":1072,"mtime":1639389487602,"results":"154","hashOfConfig":"88"},{"size":3138,"mtime":1639389487565,"results":"155","hashOfConfig":"88"},{"size":3121,"mtime":1639389487602,"results":"156","hashOfConfig":"88"},{"size":1810,"mtime":1639389487611,"results":"157","hashOfConfig":"88"},{"size":2193,"mtime":1639389487605,"results":"158","hashOfConfig":"88"},{"size":827,"mtime":1639389487611,"results":"159","hashOfConfig":"88"},{"size":257,"mtime":1639389487606,"results":"160","hashOfConfig":"88"},{"size":1966,"mtime":1639389487619,"results":"161","hashOfConfig":"88"},{"size":6930,"mtime":1639389487606,"results":"162","hashOfConfig":"88"},{"size":1064,"mtime":1639389487615,"results":"163","hashOfConfig":"88"},{"size":1741,"mtime":1639389487615,"results":"164","hashOfConfig":"88"},{"size":710,"mtime":1639389487615,"results":"165","hashOfConfig":"88"},{"size":1569,"mtime":1639389487615,"results":"166","hashOfConfig":"88"},{"size":610,"mtime":1639389487619,"results":"167","hashOfConfig":"88"},{"size":94,"mtime":1639389487574,"results":"168","hashOfConfig":"88"},{"size":2497,"mtime":1639389487617,"results":"169","hashOfConfig":"88"},{"size":856,"mtime":1639389487615,"results":"170","hashOfConfig":"88"},{"size":1505,"mtime":1639389487616,"results":"171","hashOfConfig":"88"},{"size":1703,"mtime":1639389487616,"results":"172","hashOfConfig":"88"},{"size":3853,"mtime":1639389487616,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},"r9dmae",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"177"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"177"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"177"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"177"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"177"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/index.js",["353"],"import React, { createContext } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport{ LivingPlaceRegistrationProvider } from './Context/LivingPlaceRegistrationContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <LivingPlaceRegistrationProvider>\n      <App />\n    </LivingPlaceRegistrationProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()",["354","355"],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/App.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/reportWebVitals.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Context/LivingPlaceRegistrationContext.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/Registration/index.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/Home.js",["356"],"import React from 'react'\n\nimport Header from '../header/Header'\nimport HomeSection from './sections/001_home/HomeSection'\nimport ExploreSection from './sections/002_explore/ExploreSection'\nimport PreSelectionSection from './sections/003_pre_selection/PreSelectionSection'\nimport InterludeSection from './sections/004_interlude/InterludeSection'\nimport MapSection from './sections/005_map/MapSection'\nimport Footer from '../footer/Footer'\n\nconst Home = (props) => {\n    return (\n        <>\n            {/* <Header /> */}\n            <HomeSection />\n            <ExploreSection />\n            <PreSelectionSection />\n            <InterludeSection />\n            <MapSection />\n            <Footer />\n        </>\n    )\n}\n\nexport default Home","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/Registration/index.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/FloorplanInformations.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/LivingPlaceRegistrationTimeline.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/RoomInformations.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/Nav.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/Header.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Components/LivingPlaceInformations.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/InformationsSent.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/SomeQuestions.js",["357","358","359","360"],"import React, { useState, useEffect } from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport { Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, MenuItem, Select } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport complexNames from '../../Json/ComplexNames'\nimport residenceTypes from '../../Json/ResidenceTypes'\nimport livingPlaceTypes from '../../Json/LivingPlaceTypes'\n\nimport '../../Styles/Pages/LivingPlaceRegistration.scss'\n\nconst validationSchema = Yup.object({\n    introduction: Yup.object({\n        part_of_complex: Yup.boolean(),\n        is_existing_complex: Yup.boolean().when('part_of_complex', {\n            is: true,\n            then: Yup.boolean().required('test')\n        }),\n        existing_complex_name: Yup.number().when('is_existing_complex', {\n            is: true,\n            then: Yup.number().required('test')\n        }),\n        residence_type: Yup.number().required('A living place type is madatory'),\n        vhe_type: Yup.number().required('A living place type is madatory')\n    })\n})\n\nconst SomeQuestions = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 1\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const formik = useFormik({\n        initialValues: data,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            setValues(data)\n            navigate('/living_place_registration/complex_informations')\n            console.log(data)\n        }\n    })\n\n    /* const[complexNames, setComplexNames] = useState([])\n      \n    const fetchComplexNames = () => {\n        axios.get(process.env.REACT_APP_URL + 'vhe/complexname').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setComplexNames(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    useEffect(() => {\n        fetchComplexNames()\n    }, [])\n\n    if(!complexNames) return null */\n\n    return (\n        <div className='container_form'>\n            \n            <LivingPlaceRegistrationTimeline />\n            \n            <h5>Questions about the residence</h5>\n\n            <form onSubmit={formik.handleSubmit} className='form_living_place_register one_row'>\n                \n         \n\n                {/* PART OF A COMPLEX */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>Is the residence part of a complex?</FormLabel>\n                    <RadioGroup\n                        row\n                        name='introduction.part_of_complex'\n                        value={formik.values.introduction.part_of_complex}\n                        onChange={formik.handleChange}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='True'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='False'\n                        />\n                    </RadioGroup>\n                </FormControl>\n\n                {/* EXISTING COMPLEX */}\n                {formik.values.introduction.part_of_complex === 'true' && (\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Does it already exist in the platform?</FormLabel>\n                        <RadioGroup\n                            row\n                            name='introduction.is_existing_complex'\n                            value={formik.values.introduction.is_existing_complex}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'introduction.is_existing_complex') && Boolean(getIn(formik.errors, 'introduction.is_existing_complex'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='True'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='False'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'introduction.is_existing_complex') && (\n                            <div>\n                                {getIn(formik.errors, 'introduction.is_existing_complex')}\n                            </div>\n                        )}\n                    </FormControl>\n                )}\n            \n                {/* EXISTING COMPLEX NAME */}\n                {formik.values.introduction.part_of_complex === 'true' && formik.values.introduction.is_existing_complex === 'true' && (\n                    <FormControl size='small'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Choose a complex</FormLabel>\n                        <Select\n                            name='introduction.existing_complex_name'\n                            value={formik.values.introduction.existing_complex_name}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'introduction.existing_complex_name') && Boolean(getIn(formik.errors, 'introduction.existing_complex_name'))}\n                        >\n                            <MenuItem value=''>Choose a complex name</MenuItem>\n                            {complexNames.map((item, index) => (\n                                <MenuItem key={index} value={item.id}>{item.complex_name}</MenuItem>\n                            ))}\n                        </Select>\n                        {getIn(formik.touched, 'introduction.existing_complex_name') && (\n                            <div>\n                                {getIn(formik.errors, 'introduction.existing_complex_name')}\n                            </div>\n                        )}\n                    </FormControl>\n                )}\n            \n                {/* RESIDENCE TYPE */}\n                <FormControl size='small'>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Residence type</FormLabel>\n                    <Select\n                        name='introduction.residence_type'\n                        value={formik.values.introduction.residence_type}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'introduction.residence_type') && Boolean(getIn(formik.errors, 'introduction.residence_type'))}\n                    >\n                        <MenuItem value=''>Choose a residence type</MenuItem>\n                        {residenceTypes.map((item, index) => (\n                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n                    {getIn(formik.touched, 'introduction.residence_type') && (\n                        <div>\n                            {getIn(formik.errors, 'introduction.residence_type')}\n                        </div>\n                    )}\n                </FormControl >\n            \n                {/* LIVING PLACE TYPE */}\n                <FormControl size='small'>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type</FormLabel>\n                    <Select\n                        name='introduction.vhe_type'\n                        value={formik.values.introduction.vhe_type}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'introduction.vhe_type') && Boolean(getIn(formik.errors, 'introduction.vhe_type'))}\n                    >\n                        <MenuItem value=''>Choose a living place type</MenuItem>\n                        {livingPlaceTypes.map((item, index) => (\n                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n                    {getIn(formik.touched, 'introduction.vhe_type') && (\n                        <div>\n                            {getIn(formik.errors, 'introduction.vhe_type')}\n                        </div>\n                    )}\n                </FormControl>\n\n            \n                <div className='button_wrapper right'>\n                    {/* NEXT */}\n                    <Button color='primary' variant='contained' type='submit'>\n                        Next\n                    </Button>\n                </div>\n                \n            \n            </form>\n        </div>\n    )\n}\n\nexport default SomeQuestions\n","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/ResidenceInformations.js",["361"],"import React from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup} from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport residenceFacilities from '../../Json/ResidenceFacilities'\n\nimport '../../Styles/Pages/LivingPlaceRegistration.scss'\n\nconst validationSchema = Yup.object({\n    residence: Yup.object({\n        house_number: Yup.number().integer().required('test'),\n        floor: Yup.number().integer().required('test'),\n        rental_permit: Yup.boolean().required('test'),\n        visible_on_platform: Yup.boolean().required('test'),\n        snf_certificate_approved: Yup.boolean().required('test'),\n        akf_certificate_approved: Yup.boolean().required('test'),\n        number_rooms: Yup.number().integer().required('test'),\n        number_rooms_with_vhes: Yup.number().integer().required('test')\n    })\n})\n\nconst ResidenceInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 3\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const formik = useFormik({\n        initialValues: data,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            setValues(data)\n            LivingPlaceRegistrationTimelineState.step = 4\n            navigate('/living_place_registration/floorplan_informations')\n            console.log(data)\n        }\n    })\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 2\n        navigate('/living_place_registration/complex_informations')\n    }\n\n    return (\n        <div className='container_form'>\n        <LivingPlaceRegistrationTimeline />\n\n        <h5>Residence informations</h5>\n\n            <form onSubmit={formik.handleSubmit} className='form_living_place_register two_rows'>\n\n                <div id='complexInfos__div' className='formgroup-fullwidth'>\n                    <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                    <p className='p-medium' style={{marginTop: '-10px'}}>\n                        {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                        {data.complex.street}\n                        {' '}\n                        {data.complex.complex_house_number}\n                        {', '}\n                        {data.complex.postal_code}\n                        {' '}\n                        {data.complex.city}\n                        {' ('}\n                        {data.complex.country}\n                        {')'}\n                    </p>\n                </div>\n\n                <FormControl >\n                    {/* HOUSE NUMBER */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                    <TextField\n                        size='small'\n                        name='residence.house_number'\n                        value={formik.values.residence.house_number}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number'))}\n                        helperText={getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')}\n                    />\n                </FormControl>\n\n                     <FormGroup className='formgroup-1fr-1fr'>\n                    {/* RENTAL PERMIT */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Rental permit?</FormLabel>\n                        <RadioGroup\n                            row\n                            name='residence.rental_permit'\n                            value={formik.values.residence.rental_permit}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.rental_permit') && Boolean(getIn(formik.errors, 'residence.rental_permit'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.rental_permit') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.rental_permit')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                    {/* ALWAYS VISIBLE */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Always visible?</FormLabel>\n                        <RadioGroup\n                            row\n                            name='residence.visible_on_platform'\n                            value={formik.values.residence.visible_on_platform}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.visible_on_platform') && Boolean(getIn(formik.errors, 'residence.visible_on_platform'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.visible_on_platform') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.visible_on_platform')}\n                            </div>\n                        )}\n                    </FormControl>\n                 </FormGroup>\n\n                 <FormControl >\n                    {/* HOUSE NUMBER EXTENSION */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                    <TextField\n                        size='small'\n                        name='residence.house_number_extension'\n                        value={formik.values.residence.house_number_extension}\n                        onChange={formik.handleChange}\n                    />\n                 </FormControl>\n\n\n                 <FormGroup className='formgroup-1fr-1fr'>\n                    {/* SNF CERTIFICATE */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                        <RadioGroup\n                            row\n                            name='residence.snf_certificate_approved'\n                            value={formik.values.residence.snf_certificate_approved}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.snf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.snf_certificate_approved'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.snf_certificate_approved') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.snf_certificate_approved')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                    {/* AKF CERTIFICATE */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>AKF certificate</FormLabel>\n                        <RadioGroup\n                            row\n                            name='residence.akf_certificate_approved'\n                            value={formik.values.residence.akf_certificate_approved}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.akf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.akf_certificate_approved'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.akf_certificate_approved') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.akf_certificate_approved')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                 </FormGroup>\n\n                 <FormControl >\n                    {/* FLOOR */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                    <TextField\n                        size='small'\n                        name='residence.floor'\n                        value={formik.values.residence.floor}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.floor') && Boolean(getIn(formik.errors, 'residence.floor'))}\n                        helperText={getIn(formik.touched, 'residence.floor') && getIn(formik.errors, 'residence.floor')}\n                    />\n                 </FormControl>\n    \n                <FormControl >\n                    {/* NUMBER OF ROOMS */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of rooms</FormLabel>\n                    <TextField\n                        size='small'\n                        name='residence.number_rooms'\n                        value={formik.values.residence.number_rooms}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.number_rooms') && Boolean(getIn(formik.errors, 'residence.number_rooms'))}\n                        helperText={getIn(formik.touched, 'residence.number_rooms') && getIn(formik.errors, 'residence.number_rooms')}\n                    />\n                </FormControl>\n\n                <FormGroup>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                    <FormGroup>\n                        {residenceFacilities.map((item, index) => (\n                            <FormControlLabel key={index}\n                                control={\n                                    <Checkbox\n                                        onChange={(e) => {\n                                            formik.setFieldValue(`residence.complex_facility_type.${item.value}`, e.target.checked)\n                                        }}\n                                        name={`complex.complex_facility_type.${item.value}`}\n                                    />}\n                                label={item.label}\n                            />\n                        ))}\n                    </FormGroup>\n                </FormGroup>\n\n                <FormControl >\n                    {/* NUMBER OF ROOMS WITH LIVING PLACES */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>... with living place</FormLabel>\n                    <TextField\n                        size='small'\n                        name='residence.number_rooms_with_vhes'\n                        value={formik.values.residence.number_rooms_with_vhes}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.number_rooms_with_vhes') && Boolean(getIn(formik.errors, 'residence.number_rooms_with_vhes'))}\n                        helperText={getIn(formik.touched, 'residence.number_rooms_with_vhes') && getIn(formik.errors, 'residence.number_rooms_with_vhes')}\n                    />\n                </FormControl>\n\n              \n\n\n                <div className='button_wrapper'>\n                    {/* PREVIEW */}\n                    <Button variant='contained' type='submit' onClick={previewStep}>\n                        Previous\n                    </Button>\n\n                    {/* NEXT */}\n                    <Button color='primary' variant='contained' type='submit'>\n                        Next\n                    </Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ResidenceInformations\n","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/RoomsInformations.js",["362"],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/ComplexInformations.js",["363"],"import React from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField, FormControl, MenuItem, Select, FormGroup, FormControlLabel, Checkbox } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport countries from '../../Json/Countries'\nimport phoneNumberLandcode from '../../Json/PhoneNumberLandcode'\nimport complexFacilities from '../../Json/ComplexFacilities'\n\nimport '../../Styles/Pages/LivingPlaceRegistration.scss'\n\nconst validationSchema = Yup.object({\n    complex: Yup.object({\n        complex_name: Yup.string().required('test'),\n        house_number: Yup.number().integer().required('test'),\n        city: Yup.string().required('test'),\n        postal_code: Yup.string().required('test'),\n        phone_number: Yup.number().required('test'),\n        email_address: Yup.string().email().required('test'),\n        street: Yup.string().required('test'),\n        country: Yup.string().required('test'),\n        phone_number_landcode: Yup.string().required('test')\n    })\n})\n\nconst ComplexInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 2\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const formik = useFormik({\n        initialValues: data,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            setValues(data)\n            LivingPlaceRegistrationTimelineState.step = 3\n            navigate('/living_place_registration/residence_informations')\n            console.log(data)\n        }\n    })\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 1\n        navigate('/living_place_registration/some_questions')\n    }\n\n    return (\n        <div className='container_form'>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Complex informations</h5>\n\n            <form onSubmit={formik.handleSubmit} className='form_living_place_register two_rows'>\n\n                <FormControl >\n                    {/* COMPLEX NAME */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Complex name</FormLabel>\n                    <TextField\n                        size='small'\n                        name='complex.complex_name'\n                        value={formik.values.complex.complex_name}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')}\n                    />\n                </FormControl>\n              \n                <FormControl>\n                    {/* STREET */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Street</FormLabel>\n                    <TextField\n                        size='small'\n                        name='complex.street'\n                        value={formik.values.complex.street}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.street') && Boolean(getIn(formik.errors, 'complex.street'))}\n                        helperText={getIn(formik.touched, 'complex.street') && getIn(formik.errors, 'complex.street')}\n                    />\n                </FormControl>\n\n                <FormGroup className=\"formgroup-1fr-1fr\">       \n                    <FormControl >        \n                        {/* HOUSE NUMBER */}\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                        <TextField\n                            size='small'\n                            name='complex.house_number'\n                            value={formik.values.complex.house_number}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'complex.house_number') && Boolean(getIn(formik.errors, 'complex.house_number'))}\n                            helperText={getIn(formik.touched, 'complex.house_number') && getIn(formik.errors, 'complex.house_number')}\n                        />\n                    </FormControl>\n\n                    <FormControl >\n                        {/* HOUSE NUMBER EXTENSION */}\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Extension</FormLabel>\n                        <TextField\n                            size='small'\n                            name='complex.house_number_extension'\n                            value={formik.values.house_number_extension}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'complex.house_number_extension') && Boolean(getIn(formik.errors, 'complex.house_number_extension'))}\n                            helperText={getIn(formik.touched, 'complex.house_number_extension') && getIn(formik.errors, 'complex.house_number_extension')}\n                        />\n                    </FormControl>   \n                </FormGroup>\n \n                <FormGroup className=\"formgroup-2fr-1fr\">\n                    <FormControl>\n                        {/* CITY */}\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>City</FormLabel>\n                        <TextField\n                            size='small'\n                            name='complex.city'\n                            value={formik.values.complex.city}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'complex.city') && Boolean(getIn(formik.errors, 'complex.city'))}\n                            helperText={getIn(formik.touched, 'complex.city') && getIn(formik.errors, 'complex.city')}\n                        />\n\n                    </FormControl>\n\n                    <FormControl>\n                        {/* POSTAL CODE */}\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Postal code</FormLabel>\n                        <TextField\n                            size='small'\n                            name='complex.postal_code'\n                            value={formik.values.complex.postal_code}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'complex.postal_code') && Boolean(getIn(formik.errors, 'complex.postal_code'))}\n                            helperText={getIn(formik.touched, 'complex.postal_code') && getIn(formik.errors, 'complex.postal_code')}\n                        />\n                    </FormControl>\n                </FormGroup>\n                \n\n               \n\n                 {/* COUNTRY */}\n                <FormControl size='small'>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Country</FormLabel>\n                    <Select\n                        name='complex.country'\n                        value={formik.values.complex.country}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.country') && Boolean(getIn(formik.errors, 'complex.country'))}\n                    >\n                        <MenuItem value=''>Choose a country</MenuItem>\n                        {countries.map((item, index) => (\n                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n                    {getIn(formik.touched, 'complex.country') && (\n                        <div>\n                            {getIn(formik.errors, 'complex.country')}\n                        </div>\n                    )}\n                </FormControl>\n\n                <FormGroup className=\"formgroup-1fr-4fr\">\n                    {/* PHONE NUMBER LANDCODE */}\n                    <FormControl size='small'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Landcode</FormLabel>\n                        <Select\n                            name='complex.phone_number_landcode'\n                            value={formik.values.complex.phone_number_landcode}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'complex.phone_number_landcode') && Boolean(getIn(formik.errors, 'complex.phone_number_landcode'))}\n                        >\n                            <MenuItem value=''>Choose a phone number landcode</MenuItem>\n                            {phoneNumberLandcode.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                        </Select>\n                        {getIn(formik.touched, 'complex.phone_number_landcode') && (\n                            <div>\n                                {getIn(formik.errors, 'complex.phone_number_landcode')}\n                            </div>\n                        )}\n                    </FormControl>\n                    {/* PHONE NUMBER */}\n                    <FormControl >\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Phone number</FormLabel>\n                        <TextField\n                            size='small'\n                            name='complex.phone_number'\n                            value={formik.values.complex.phone_number}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'complex.phone_number') && Boolean(getIn(formik.errors, 'complex.phone_number'))}\n                            helperText={getIn(formik.touched, 'complex.phone_number') && getIn(formik.errors, 'complex.phone_number')}\n                        />\n                    </FormControl>\n                </FormGroup>\n\n                <FormControl >     \n                    {/* EMAIL */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Email address</FormLabel>\n                    <TextField\n                        size='small'\n                        name='complex.email_address'\n                        value={formik.values.complex.email_address}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.email_address') && Boolean(getIn(formik.errors, 'complex.email_address'))}\n                        helperText={getIn(formik.touched, 'complex.email_address') && getIn(formik.errors, 'complex.email_address')}\n                    />\n                </FormControl>\n\n\n                <FormControl >\n                    {/* OPENING HOURS */}\n                    <FormLabel id='complex_opening_hours' component='legend' style={{ color: 'black', marginBottom: '10px'}}>Openings hours</FormLabel>\n                    <TextField\n                        size='small'\n                        id='complex_opening_hours'\n                        name='complex.opening_hours'\n                        value={formik.values.opening_hours}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.opening_hours') && Boolean(getIn(formik.errors, 'complex.opening_hours'))}\n                        helperText={getIn(formik.touched, 'complex.opening_hours') && getIn(formik.errors, 'complex.opening_hours')}\n                    />\n                </FormControl>\n\n                <FormGroup className=\"formgroup-fullwidth\">\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                    <FormGroup className=\"formgroup-1fr-1fr-1fr\">\n                        {complexFacilities.map((item, index) => (\n                            <FormControlLabel key={index}\n                                control={\n                                    <Checkbox\n                                        onChange={(e) => {\n                                            formik.setFieldValue(`complex.complex_facility_types.${item.value}`, e.target.checked)\n                                        }}\n                                        name={`complex.complex_facility_types.${item.value}`}\n                                    />}\n                                label={item.label}\n                            />\n                        ))}\n                    </FormGroup>\n                </FormGroup>\n\n                  <div className='button_wrapper'>\n                    {/* PREVIEW */}\n                    <Button variant='contained' type='submit' onClick={previewStep}>\n                        Previous\n                    </Button>\n\n                    {/* NEXT */}\n                    <Button color='primary' variant='contained' type='submit'>\n                        Next\n                    </Button>\n                </div>\n\n\n              \n\n                \n            </form>\n        </div>\n    )\n}\n\nexport default ComplexInformations\n","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/LivingPlacesInformations.js",["364"],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/Images.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/Header.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/footer/Footer.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/FloorplanInformations.js",["365","366"],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/HomeSection.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/ExploreSection.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/003_pre_selection/PreSelectionSection.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/004_interlude/InterludeSection.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/MapSection.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Context/LivingPlaceRegistrationTimelineState.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/footer/ContactUs.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/Nav.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/footer/FooterNav.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/RoomFacilities.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ComplexNames.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/RoomTypes.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/PhoneNumberLandcode.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/StatusAtPointOfRegestering.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/MaximumStayDuration.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/Countries.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/LivingPlaceTypes.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ResidenceTypes.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ResidenceFacilities.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ServiceCostTerm.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/LivingPlaceFacilities.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Json/ComplexFacilities.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/HomeIntroduction.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/ArcHome.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Assets/SVG/Registration/index.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/HomeSearch.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/WhatOurCustomerAreSaying.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/MapResult.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/social_networks/SocialNetworks.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/logo/LogoSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/004_interlude/ArcSection004.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/map/GoogleMap.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/004_interlude/Quote.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/003_pre_selection/PreSelectionIntroduction.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/ExploreRentOut.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/ExploreRent.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/003_pre_selection/PreSelectionVhes.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/002_explore/Statistics.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/AboutUs.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/LogIn.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/logo/LogoBlackSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/SignUp.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/header/Menu.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/SelectForm.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Assets/SVG/Logo.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/001_home/SearchForm.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/buttons/RoundedButton.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/home_page/sections/005_map/MapSearchForm.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/arc/Arc001SVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/map/CustomMarker.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/vhes/VhesManager.js",["367","368"],"import React, { useContext, useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport { GlobalVariablesContext } from '../../Context/GlobalVariablesContext'\n\n/* import ScrollBarForMore from '../home/sections/003/ScrollBarForMore' */\nimport Vhes from './Vhes'\n\nimport './css/VhesManager.scss'\n\nconst VhesManager = (props) => {\n\n    const { REACT_APP_URL } = useContext(GlobalVariablesContext)\n    \n    const[allData, setAllData] = useState([])\n    const[filteredData, setFilteredData] = useState([])\n      \n    const fetchVhes = () => {\n        axios.get(process.env.REACT_APP_URL + 'vhe/vhe/?limit=10&offset=10').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setAllData(response)\n            setFilteredData(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    const handleSearch = (e) => {\n        let search_value = e.target.value.toLowerCase()\n        console.log(search_value)\n        let filtered_result = []\n        filtered_result = allData.filter((data) => {\n            console.log(data.vheName.search(search_value))\n            return data.vheName.search(search_value) !== -1\n        })\n        setFilteredData(filtered_result)\n        console.log(filteredData)\n    }\n  \n    useEffect(() => {\n      fetchVhes()\n    }, [])\n\n    if(!allData) return null\n\n    return (\n        <>\n            {/* <label>Search: </label>\n            <input type='text' onChange={(e) => handleSearch(e)} /> */}\n            <div id='vhesManager_DIV'>\n                {/* <ScrollBarForMore /> */}\n                <Vhes\n                    data={filteredData}\n                    card_CLASSNAME={props.card_CLASSNAME}\n                    rounded_card_BOOLEAN={props.rounded_card_BOOLEAN}\n                    display_list_CLASSNAME={props.display_list_CLASSNAME}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default VhesManager\n","/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/map/css/MapStyle.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/LinkedInSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/TwitterSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/FacebookSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/social_networks/InstagramSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/vhes/Vhes.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Context/GlobalVariablesContext.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/vhes/VHE.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/arrows/Arrow002.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/vhes/AreaSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/vhes/BedroomSVG.js",[],"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/html/ui/icons/vhes/BathroomSVG.js",[],{"ruleId":"369","severity":1,"message":"370","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":30},{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","replacedBy":"376"},{"ruleId":"369","severity":1,"message":"377","line":3,"column":8,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"378","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"379","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"380","line":8,"column":8,"nodeType":"371","messageId":"372","endLine":8,"endColumn":13},{"ruleId":"369","severity":1,"message":"381","line":23,"column":7,"nodeType":"371","messageId":"372","endLine":23,"endColumn":23},{"ruleId":"369","severity":1,"message":"381","line":19,"column":7,"nodeType":"371","messageId":"372","endLine":19,"endColumn":23},{"ruleId":"369","severity":1,"message":"381","line":44,"column":7,"nodeType":"371","messageId":"372","endLine":44,"endColumn":23},{"ruleId":"369","severity":1,"message":"381","line":21,"column":7,"nodeType":"371","messageId":"372","endLine":21,"endColumn":23},{"ruleId":"369","severity":1,"message":"381","line":53,"column":7,"nodeType":"371","messageId":"372","endLine":53,"endColumn":23},{"ruleId":"369","severity":1,"message":"382","line":18,"column":10,"nodeType":"371","messageId":"372","endLine":18,"endColumn":19},{"ruleId":"369","severity":1,"message":"381","line":20,"column":7,"nodeType":"371","messageId":"372","endLine":20,"endColumn":23},{"ruleId":"369","severity":1,"message":"383","line":14,"column":13,"nodeType":"371","messageId":"372","endLine":14,"endColumn":26},{"ruleId":"369","severity":1,"message":"384","line":30,"column":11,"nodeType":"371","messageId":"372","endLine":30,"endColumn":23},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["385"],"no-negated-in-lhs",["386"],"'Header' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'validationSchema' is assigned a value but never used.","'positions' is defined but never used.","'REACT_APP_URL' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]