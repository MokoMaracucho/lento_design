[{"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/index.js":"1","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/reportWebVitals.js":"2","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/App.js":"3","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/DataContext.js":"4","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/search_result/SearchResult.js":"5","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/Registration/index.js":"6","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhe_details/VheDetails.js":"7","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/Registration/index.js":"8","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/Home.js":"9","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Validations/Registration/index.js":"10","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/search_result/Result.js":"11","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/Nav.js":"12","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/Header.js":"13","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhe_details/VheDetailsSection.js":"14","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/Header.js":"15","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/footer/Footer.js":"16","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/003_pre_selection/PreSelectionSection.js":"17","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/MapSection.js":"18","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/HomeSection.js":"19","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/004_interlude/InterludeSection.js":"20","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/ExploreSection.js":"21","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/search_result/ListResult.js":"22","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/map/GoogleMap.js":"23","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/footer/FooterNav.js":"24","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/footer/ContactUs.js":"25","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Assets/SVG/Registration/index.js":"26","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/Statistics.js":"27","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/ExploreRentOut.js":"28","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/ExploreRent.js":"29","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/vhes/BedroomSVG.js":"30","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/vhes/BathroomSVG.js":"31","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/vhes/AreaSVG.js":"32","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/004_interlude/ArcSection004.js":"33","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/004_interlude/Quote.js":"34","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/HomeSearch.js":"35","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/ArcHome.js":"36","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/MapResult.js":"37","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/HomeIntroduction.js":"38","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/WhatOurCustomerAreSaying.js":"39","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/003_pre_selection/PreSelectionVhes.js":"40","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/003_pre_selection/PreSelectionIntroduction.js":"41","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/Nav.js":"42","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/social_networks/SocialNetworks.js":"43","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/logo/LogoSVG.js":"44","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhes/VhesManager.js":"45","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/map/CustomMarker.js":"46","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/logo/LogoBlackSVG.js":"47","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/map/css/MapStyle.js":"48","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Assets/SVG/Logo.js":"49","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/buttons/RoundedButton.js":"50","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/SelectForm.js":"51","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/SearchForm.js":"52","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/MapSearchForm.js":"53","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/SignUp.js":"54","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/Menu.js":"55","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/AboutUs.js":"56","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/LogIn.js":"57","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/arc/Arc001SVG.js":"58","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/TwitterSVG.js":"59","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/FacebookSVG.js":"60","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/InstagramSVG.js":"61","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/LinkedInSVG.js":"62","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhes/Vhes.js":"63","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/arrows/Arrow002.js":"64","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/vhes/VHE.js":"65","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationSomeQuestions.js":"66","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/LivingPlaceRegistrationTimelineState.js":"67","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationComplexInformations.js":"68","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationResidenceInformations.js":"69","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationFloorplanInformations.js":"70","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationRoomsInformations.js":"71","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationLivingPlacesInformations.js":"72","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Functions/UpdateAction.js":"73","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik1.js":"74","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik2.js":"75","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/TextInput.js":"76","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration.js":"77","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/InviteFriends.js":"78","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/GlobalVariablesContext.js":"79","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/Registration/index.js":"80","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/MaximumStayDuration.js":"81","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ComplexFacilities.js":"82","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/PhoneNumberLandcode.js":"83","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/Countries.js":"84","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/StatusAtPointOfRegestering.js":"85","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ServiceCostTerm.js":"86","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/LivingPlaceFacilities.js":"87","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ResidenceFacilities.js":"88","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/RoomTypes.js":"89","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ResidenceTypes.js":"90","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/RoomFacilities.js":"91","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/LivingPlaceTypes.js":"92","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ComplexNames.js":"93","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/Registration/index.js":"94","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/FloorplanInformations.js":"95","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/ComplexInformations.js":"96","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/LivingPlacesInformations.js":"97","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/ResidenceInformations.js":"98","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/SomeQuestions.js":"99","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/RoomsInformations.js":"100","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/LivingPlaceRegistrationContext.js":"101","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/FloorplanInformations.js":"102","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceInformations.js":"103","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistrationTimeline.js":"104","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/RoomInformations.js":"105","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/InformationsSent.js":"106","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/Images.js":"107"},{"size":470,"mtime":1639326036911,"results":"108","hashOfConfig":"109"},{"size":354,"mtime":1639207985449,"results":"110","hashOfConfig":"109"},{"size":2391,"mtime":1639348322983,"results":"111","hashOfConfig":"109"},{"size":521,"mtime":1639207985409,"results":"112","hashOfConfig":"109"},{"size":309,"mtime":1636726227470,"results":"113","hashOfConfig":"109"},{"size":460,"mtime":1639345816187,"results":"114","hashOfConfig":"109"},{"size":370,"mtime":1636726227507,"results":"115","hashOfConfig":"109"},{"size":1013,"mtime":1639207985412,"results":"116","hashOfConfig":"109"},{"size":739,"mtime":1639207985420,"results":"117","hashOfConfig":"109"},{"size":0,"mtime":1638517111255,"results":"118","hashOfConfig":"109"},{"size":906,"mtime":1636726227470,"results":"119","hashOfConfig":"109"},{"size":2359,"mtime":1639207985408,"results":"120","hashOfConfig":"109"},{"size":432,"mtime":1639207985406,"results":"121","hashOfConfig":"109"},{"size":15369,"mtime":1638382446251,"results":"122","hashOfConfig":"109"},{"size":390,"mtime":1639207985418,"results":"123","hashOfConfig":"109"},{"size":784,"mtime":1639207985417,"results":"124","hashOfConfig":"109"},{"size":631,"mtime":1639207985422,"results":"125","hashOfConfig":"109"},{"size":1613,"mtime":1639207985425,"results":"126","hashOfConfig":"109"},{"size":1198,"mtime":1639207985420,"results":"127","hashOfConfig":"109"},{"size":5722,"mtime":1639207985423,"results":"128","hashOfConfig":"109"},{"size":1394,"mtime":1639207985421,"results":"129","hashOfConfig":"109"},{"size":389,"mtime":1636726227469,"results":"130","hashOfConfig":"109"},{"size":2976,"mtime":1639207985427,"results":"131","hashOfConfig":"109"},{"size":1305,"mtime":1639207985417,"results":"132","hashOfConfig":"109"},{"size":861,"mtime":1639207985417,"results":"133","hashOfConfig":"109"},{"size":43,"mtime":1639207985404,"results":"134","hashOfConfig":"109"},{"size":1831,"mtime":1639207985422,"results":"135","hashOfConfig":"109"},{"size":1833,"mtime":1639207985421,"results":"136","hashOfConfig":"109"},{"size":1826,"mtime":1639207985421,"results":"137","hashOfConfig":"109"},{"size":1703,"mtime":1639207985444,"results":"138","hashOfConfig":"109"},{"size":3853,"mtime":1639207985444,"results":"139","hashOfConfig":"109"},{"size":1505,"mtime":1639207985444,"results":"140","hashOfConfig":"109"},{"size":943,"mtime":1639207985423,"results":"141","hashOfConfig":"109"},{"size":401,"mtime":1639207985423,"results":"142","hashOfConfig":"109"},{"size":374,"mtime":1639207985420,"results":"143","hashOfConfig":"109"},{"size":381,"mtime":1639207985420,"results":"144","hashOfConfig":"109"},{"size":656,"mtime":1639207985424,"results":"145","hashOfConfig":"109"},{"size":723,"mtime":1639207985420,"results":"146","hashOfConfig":"109"},{"size":1927,"mtime":1639207985425,"results":"147","hashOfConfig":"109"},{"size":445,"mtime":1639207985423,"results":"148","hashOfConfig":"109"},{"size":657,"mtime":1639207985422,"results":"149","hashOfConfig":"109"},{"size":1363,"mtime":1639207985419,"results":"150","hashOfConfig":"109"},{"size":1490,"mtime":1639207985445,"results":"151","hashOfConfig":"109"},{"size":2925,"mtime":1639207985444,"results":"152","hashOfConfig":"109"},{"size":1966,"mtime":1639207985448,"results":"153","hashOfConfig":"109"},{"size":257,"mtime":1639207985427,"results":"154","hashOfConfig":"109"},{"size":5578,"mtime":1639207985444,"results":"155","hashOfConfig":"109"},{"size":6930,"mtime":1639207985427,"results":"156","hashOfConfig":"109"},{"size":3138,"mtime":1639207985404,"results":"157","hashOfConfig":"109"},{"size":1810,"mtime":1639207985437,"results":"158","hashOfConfig":"109"},{"size":1072,"mtime":1639207985420,"results":"159","hashOfConfig":"109"},{"size":3121,"mtime":1639207985420,"results":"160","hashOfConfig":"109"},{"size":2193,"mtime":1639207985425,"results":"161","hashOfConfig":"109"},{"size":265,"mtime":1639207985419,"results":"162","hashOfConfig":"109"},{"size":610,"mtime":1639207985418,"results":"163","hashOfConfig":"109"},{"size":248,"mtime":1639207985418,"results":"164","hashOfConfig":"109"},{"size":262,"mtime":1639207985418,"results":"165","hashOfConfig":"109"},{"size":827,"mtime":1639207985437,"results":"166","hashOfConfig":"109"},{"size":1741,"mtime":1639207985443,"results":"167","hashOfConfig":"109"},{"size":710,"mtime":1639207985443,"results":"168","hashOfConfig":"109"},{"size":1569,"mtime":1639207985443,"results":"169","hashOfConfig":"109"},{"size":1064,"mtime":1639207985443,"results":"170","hashOfConfig":"109"},{"size":610,"mtime":1639207985448,"results":"171","hashOfConfig":"109"},{"size":856,"mtime":1639207985442,"results":"172","hashOfConfig":"109"},{"size":2497,"mtime":1639207985445,"results":"173","hashOfConfig":"109"},{"size":10793,"mtime":1639325141653,"results":"174","hashOfConfig":"109"},{"size":168,"mtime":1639207985409,"results":"175","hashOfConfig":"109"},{"size":27137,"mtime":1639207985411,"results":"176","hashOfConfig":"109"},{"size":20493,"mtime":1639207985412,"results":"177","hashOfConfig":"109"},{"size":9839,"mtime":1639207985412,"results":"178","hashOfConfig":"109"},{"size":4827,"mtime":1639207985412,"results":"179","hashOfConfig":"109"},{"size":6796,"mtime":1639207985412,"results":"180","hashOfConfig":"109"},{"size":181,"mtime":1638731074724,"results":"181","hashOfConfig":"109"},{"size":3160,"mtime":1639207985415,"results":"182","hashOfConfig":"109"},{"size":3151,"mtime":1639207985416,"results":"183","hashOfConfig":"109"},{"size":553,"mtime":1639207985417,"results":"184","hashOfConfig":"109"},{"size":3464,"mtime":1639317116185,"results":"185","hashOfConfig":"109"},{"size":2421,"mtime":1639207985417,"results":"186","hashOfConfig":"109"},{"size":94,"mtime":1639207985409,"results":"187","hashOfConfig":"109"},{"size":576,"mtime":1639348655868,"results":"188","hashOfConfig":"109"},{"size":204,"mtime":1639207985410,"results":"189","hashOfConfig":"109"},{"size":608,"mtime":1639207985409,"results":"190","hashOfConfig":"109"},{"size":3156,"mtime":1639207985410,"results":"191","hashOfConfig":"109"},{"size":2867,"mtime":1639352856435,"results":"192","hashOfConfig":"109"},{"size":796,"mtime":1639207985411,"results":"193","hashOfConfig":"109"},{"size":403,"mtime":1639207985411,"results":"194","hashOfConfig":"109"},{"size":714,"mtime":1639207985410,"results":"195","hashOfConfig":"109"},{"size":352,"mtime":1639207985410,"results":"196","hashOfConfig":"109"},{"size":258,"mtime":1639207985411,"results":"197","hashOfConfig":"109"},{"size":282,"mtime":1639207985410,"results":"198","hashOfConfig":"109"},{"size":402,"mtime":1639355204214,"results":"199","hashOfConfig":"109"},{"size":223,"mtime":1639207985410,"results":"200","hashOfConfig":"109"},{"size":109,"mtime":1639251666832,"results":"201","hashOfConfig":"109"},{"size":621,"mtime":1639348685897,"results":"202","hashOfConfig":"109"},{"size":5472,"mtime":1639353471282,"results":"203","hashOfConfig":"109"},{"size":10665,"mtime":1639387990354,"results":"204","hashOfConfig":"109"},{"size":23316,"mtime":1639355465761,"results":"205","hashOfConfig":"109"},{"size":12414,"mtime":1639353454756,"results":"206","hashOfConfig":"109"},{"size":9020,"mtime":1639346668983,"results":"207","hashOfConfig":"109"},{"size":15156,"mtime":1639355111407,"results":"208","hashOfConfig":"109"},{"size":2068,"mtime":1639387960592,"results":"209","hashOfConfig":"109"},{"size":3096,"mtime":1639345816181,"results":"210","hashOfConfig":"109"},{"size":15068,"mtime":1639345816183,"results":"211","hashOfConfig":"109"},{"size":6360,"mtime":1639350447100,"results":"212","hashOfConfig":"109"},{"size":5607,"mtime":1639345816188,"results":"213","hashOfConfig":"109"},{"size":1305,"mtime":1639348229792,"results":"214","hashOfConfig":"109"},{"size":854,"mtime":1639348665789,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},"d7tujh",{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"219"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"219"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"226"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"226"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"226"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"226"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"226"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"226"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"226"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"219"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"219"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"219"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"219"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"219"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/index.js",["448"],"import React, { createContext } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport{ LivingPlaceRegistrationProvider } from './Context/LivingPlaceRegistrationContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <LivingPlaceRegistrationProvider>\n      <App />\n    </LivingPlaceRegistrationProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()",["449","450"],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/reportWebVitals.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/App.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/DataContext.js",[],["451","452"],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/search_result/SearchResult.js",[],["453","454"],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/Registration/index.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhe_details/VheDetails.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/Registration/index.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/Home.js",["455"],"import React from 'react'\n\nimport Header from '../header/Header'\nimport HomeSection from './sections/001_home/HomeSection'\nimport ExploreSection from './sections/002_explore/ExploreSection'\nimport PreSelectionSection from './sections/003_pre_selection/PreSelectionSection'\nimport InterludeSection from './sections/004_interlude/InterludeSection'\nimport MapSection from './sections/005_map/MapSection'\nimport Footer from '../footer/Footer'\n\nconst Home = (props) => {\n    return (\n        <>\n            {/* <Header /> */}\n            <HomeSection />\n            <ExploreSection />\n            <PreSelectionSection />\n            <InterludeSection />\n            <MapSection />\n            <Footer />\n        </>\n    )\n}\n\nexport default Home","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Validations/Registration/index.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/search_result/Result.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/Nav.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/Header.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhe_details/VheDetailsSection.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/Header.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/footer/Footer.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/003_pre_selection/PreSelectionSection.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/MapSection.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/HomeSection.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/004_interlude/InterludeSection.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/ExploreSection.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/search_result/ListResult.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/map/GoogleMap.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/footer/FooterNav.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/footer/ContactUs.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Assets/SVG/Registration/index.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/Statistics.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/ExploreRentOut.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/002_explore/ExploreRent.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/vhes/BedroomSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/vhes/BathroomSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/vhes/AreaSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/004_interlude/ArcSection004.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/004_interlude/Quote.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/HomeSearch.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/ArcHome.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/MapResult.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/HomeIntroduction.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/WhatOurCustomerAreSaying.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/003_pre_selection/PreSelectionVhes.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/003_pre_selection/PreSelectionIntroduction.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/Nav.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/social_networks/SocialNetworks.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/logo/LogoSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhes/VhesManager.js",["456","457"],"import React, { useContext, useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport { GlobalVariablesContext } from '../../Context/GlobalVariablesContext'\n\n/* import ScrollBarForMore from '../home/sections/003/ScrollBarForMore' */\nimport Vhes from './Vhes'\n\nimport './css/VhesManager.scss'\n\nconst VhesManager = (props) => {\n\n    const { REACT_APP_URL } = useContext(GlobalVariablesContext)\n    \n    const[allData, setAllData] = useState([])\n    const[filteredData, setFilteredData] = useState([])\n      \n    const fetchVhes = () => {\n        axios.get(process.env.REACT_APP_URL + 'vhe/vhe/?limit=10&offset=10').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setAllData(response)\n            setFilteredData(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    const handleSearch = (e) => {\n        let search_value = e.target.value.toLowerCase()\n        console.log(search_value)\n        let filtered_result = []\n        filtered_result = allData.filter((data) => {\n            console.log(data.vheName.search(search_value))\n            return data.vheName.search(search_value) !== -1\n        })\n        setFilteredData(filtered_result)\n        console.log(filteredData)\n    }\n  \n    useEffect(() => {\n      fetchVhes()\n    }, [])\n\n    if(!allData) return null\n\n    return (\n        <>\n            {/* <label>Search: </label>\n            <input type='text' onChange={(e) => handleSearch(e)} /> */}\n            <div id='vhesManager_DIV'>\n                {/* <ScrollBarForMore /> */}\n                <Vhes\n                    data={filteredData}\n                    card_CLASSNAME={props.card_CLASSNAME}\n                    rounded_card_BOOLEAN={props.rounded_card_BOOLEAN}\n                    display_list_CLASSNAME={props.display_list_CLASSNAME}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default VhesManager\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/map/CustomMarker.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/logo/LogoBlackSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/map/css/MapStyle.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Assets/SVG/Logo.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/buttons/RoundedButton.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/SelectForm.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/001_home/SearchForm.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/home_page/sections/005_map/MapSearchForm.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/SignUp.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/Menu.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/AboutUs.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/header/LogIn.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/arc/Arc001SVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/TwitterSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/FacebookSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/InstagramSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/social_networks/LinkedInSVG.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/vhes/Vhes.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/icons/arrows/Arrow002.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/html/ui/vhes/VHE.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationSomeQuestions.js",["458","459","460","461","462"],"import React, { useContext, useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, Select, MenuItem } from '@material-ui/core'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Info } from '@material-ui/icons'\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport { blue } from '@mui/material/colors'\n\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index'\n\nimport { GlobalVariablesContext } from '../Context/GlobalVariablesContext'\nimport { useData } from '../Context/DataContext'\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../Styles/Pages/LivingPlaceRegistrationSomeQuestions.scss'\nimport { Box } from '@mui/system'\n\nconst LivingPlaceRegistrationSomeQuestions = () => {\n\n    const { REACT_APP_URL } = useContext(GlobalVariablesContext)\n\n    const navigate = useNavigate()\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({\n        defaultValues: {\n            part_of_complex: data.part_of_complex,\n            is_existing_complex: data.is_existing_complex,\n            introduction: {\n                existing_complex_name: data.existing_complex_name,\n                residence_type: data.residence_type,\n                vhe_type: data.vhe_type\n            }\n        }\n    })\n    \n    const partOfAComplex = watch('part_of_complex')\n    const existingComplex = watch('is_existing_complex')\n\n    const[allData, setAllData] = useState([])\n      \n    const fetchComplexNames = () => {\n        axios.get(process.env.REACT_APP_URL + 'vhe/complexname').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setAllData(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    useEffect(() => {\n        fetchComplexNames()\n      }, [])\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/complex_informations')\n        LivingPlaceRegistrationTimelineState.step = 2\n        setValues(data)\n        console.log(data)\n    }\n\n    if(!allData) return null\n    \n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Questions about the residence</h5>\n\n                {/* PART OF A COMPLEX */}\n                <FormControl component='fieldset'>\n                    <div id='partOfAComplex__div'>\n\n                        <FormLabel component='legend' style={{ color: 'black'}}>Is the residence part of a complex?</FormLabel>\n                        <RadioGroup\n                            {...register('part_of_complex')}\n                            defaultValue={data.part_of_complex}\n                            style={{ display: 'initial' }}\n                        >\n                            <FormControlLabel value='true' control={\n                                <Radio\n                                    style={{ 'color': '#909090'}}\n                                />\n                            } label='Yes' />\n\n                            <FormControlLabel value='false' control={\n                                <Radio\n                                    style={{ 'color': '#909090'}}\n                                />\n                            } label='No' />\n                        </RadioGroup>\n                    </div>\n                </FormControl>\n\n\n                {/* EXISTING COMPLEX */}\n                {partOfAComplex && (\n                    <FormControl component='fieldset'>\n                        <div id='partOfAComplex__div'>\n\n                            <FormLabel component='legend' style={{ color: 'black'}}>Does it already exist in the platform?</FormLabel>\n                            <RadioGroup\n                                {...register('is_existing_complex')}\n                                defaultValue={data.is_existing_complex}\n                                style={{ display: 'initial' }}\n                            >\n                                <FormControlLabel value='true' control={\n                                    <Radio\n                                        style={{ 'color': '#909090'}}\n                                    />\n                                } label='Yes' />\n\n                                <FormControlLabel value='false' control={\n                                    <Radio\n                                        style={{ 'color': '#909090'}}\n                                    />\n                                } label='No' />\n                            </RadioGroup>\n                            \n                        </div>\n                    </FormControl>\n                )}\n                \n                {/* CHOOSE COMPLEX */}\n                {partOfAComplex && existingComplex && (\n                    <FormControl>\n                        <div id='existingComplexName__div'>\n                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Choose a complex</FormLabel>\n                            <div id='existingComplexNameError__div'>\n                                <Select\n                                    {...register('existing_complex_name', { required: true })}\n                                    defaultValue={data.existing_complex_name}\n                                    style={textFieldStyle}\n                                >\n                                    <MenuItem value=''>Choose complex name</MenuItem>\n                                    {allData.map((item, index) => (\n                                        <MenuItem key={index} value={item.id}>{item.complex_name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div id='existingComplexNameError__container'>\n                                {errors.existing_complex_name && errors.existing_complex_name.type === 'required' && <span className='red_COLOR error_FORM'>A complex name is required</span>}\n                            </div>\n                        </div>\n                    </FormControl>\n                )}\n                \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <div id='residenceType__div'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Residence type</FormLabel>\n                        <div id='residenceTypeError__div'>\n                            <Select\n                                {...register('residence_type', { required: true })}\n                                defaultValue={data.residence_type}\n                                style={textFieldStyle}\n                            >\n                            {residenceTypes__array.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                            </Select>\n                        </div>\n                        <div id='residenceTypeError__container'>\n                            {errors.residence_type && errors.residence_type.type === 'required' && <span className='red_COLOR error_FORM'>A residence type is madatory</span>}\n                        </div>\n                        \n                    </div>\n                </FormControl>\n                \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <div id='vheType__div'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type</FormLabel>\n                        <div id='vheTypeError__div'>\n                            <Select\n                                {...register('vhe_type', { required: true })}\n                                defaultValue={data.vhe_type}\n                                style={textFieldStyle}\n                            >\n                            {livingPlaceTypes__array.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                            </Select>\n                        </div>\n                        <div id='vheTypeError__container'>\n                            {errors.vhe_type && errors.vhe_type.type === 'required' && <span className='red_COLOR error_FORM'>A living place type is madatory</span>}\n                        </div>\n                        \n                    </div>\n                </FormControl>\n\n                {/* NEXT */}\n                <div id='someQuestionsNext__div'>\n                    <Info style={{ color: '#eeeeee' }}/>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset',\n                            marginLeft: '10px'\n                        }}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nconst existingComplexes__array = [\n    {\n        value: 'complex_1',\n        label: 'Complex 1'\n    },\n    {\n        value: 'complex_2',\n        label: 'Complex 2'\n    },\n    {\n        value: 'complex_3',\n        label: 'Complex 3'\n    },\n    {\n        value: 'complex_4',\n        label: 'Complex 4'\n    }\n]\n\nconst residenceTypes__array = [\n    {\n        value: '1',\n        label: 'Apartment'\n    },\n    {\n        value: '2',\n        label: 'House'\n    },\n    {\n        value: '3',\n        label: 'Mobil home'\n    },\n    {\n        value: '4',\n        label: 'Studio'\n    }\n]\n\nconst livingPlaceTypes__array = [\n    {\n        value: '1',\n        label: 'Bed'\n    },\n    {\n        value: '2',\n        label: 'Room'\n    },\n    {\n        value: '3',\n        label: 'Residence'\n    }\n]\n\nconst textFieldStyle = {\n    width: '300px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nexport default LivingPlaceRegistrationSomeQuestions\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/LivingPlaceRegistrationTimelineState.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationComplexInformations.js",["463","464","465","466","467"],"import React, { useContext } from 'react'\n\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { TextField, Button, Select, MenuItem, FormGroup } from '@material-ui/core'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Info } from '@material-ui/icons'\n\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index'\n\nimport { GlobalVariablesContext } from '../Context/GlobalVariablesContext'\nimport { useData } from '../Context/DataContext'\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../Styles/Pages/LivingPlaceRegistrationComplexInformations.scss'\n\nconst LivingPlaceRegistrationComplexInformations = () => {\n\n    const { REACT_APP_URL } = useContext(GlobalVariablesContext)\n\n    LivingPlaceRegistrationTimelineState.maxStep = 2\n\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: {\n            complex_name: data.complex_name,\n            house_number: data.complex_house_number,\n            city: data.city,\n            postal_code: data.postal_code,\n            phone_number: data.phone_number,\n            email: data.email,\n            street: data.street,\n            house_number_extension: data.house_number_extension,\n            country: data.country,\n            phone_number_landcode: data.phone_number_landcode,\n            opening_hours: data.opening_hours,\n            complex_facility_types: {\n                complex_kitchen: data.kitchen,\n                complex_bathroom: data.bathroom,\n                complex_supermarket: data.supermarket,\n                complex_fitness: data.fitness,\n                complex_common_room: data.common_room,\n                complex_reception_office: data.reception_office,\n                complex_laundry: data.laundry,\n                complex_relax: data.relax\n            }\n        }\n    })\n\n    const navigate = useNavigate()\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/residence_informations')\n        LivingPlaceRegistrationTimelineState.step = 3\n        setValues(data)\n        console.log(data)\n    }\n\n    const previewStep = (data) => {\n        navigate('/living_place_registration/some_questions')\n        LivingPlaceRegistrationTimelineState.step = 1\n    }\n\n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Complex informations</h5>\n            \n                <div id='complexInformationsPanels__div'>\n\n                    <div id='complexInformationsLeftPanel__div'>\n\n                        {/* COMPLEX NAME */}\n                        <div id='complexNameError__container'>\n                            <FormControl>\n                                <div id='complexName__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Complex name</FormLabel>\n                                    <TextField\n                                        {...register('complex_name', { required: true })}\n                                        defaultValue={data.complex_name}\n                                        placeholder='Complex name'\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='complexNameError__div'>\n                                {errors.complex_name && errors.complex_name.type === \"required\" && <span className='red_COLOR error_FORM'>A complex name is mandatory</span>}\n                            </div>\n                        </div>\n\n                        {/* HOUSE NUMBER */}\n                        <div id='houseNumberError__container'>\n                            <FormControl>\n                                <div id='houseNumber__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                                    <TextField\n                                        {...register('house_number', { required: true })}\n                                        defaultValue={data.house_number}\n                                        placeholder='House number'\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='houseNumberError__div'>\n                                {errors.house_number && errors.house_number.type === \"required\" && <span className='red_COLOR error_FORM'>A house number is mandatory</span>}\n                            </div>\n                        </div>\n                        \n                        <div id='cityPostalCode__div'>\n\n                            {/* CITY */}\n                            <div id='cityError__container'>\n                                <FormControl>\n                                <div id='city__div'>\n                                    <FormLabel component='legend' style={{ color: 'black'}}>City</FormLabel>\n                                    <TextField\n                                        {...register('city', { required: true })}\n                                        placeholder='City'\n                                        defaultValue={data.city}\n                                        style={textFieldCityStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                                </FormControl>\n                                <div id='cityError__div'>\n                                    {errors.city && errors.city.type === \"required\" && <span className='red_COLOR error_FORM'>A city is mandatory</span>}\n                                </div>\n                            </div>\n\n                            {/* POSTAL CODE */}\n                            <div id='postalCodeError__container'>\n                                <FormControl>\n                                    <div id='postalCode__div'>\n                                        <FormLabel component='legend' style={{ color: 'black', paddingLeft: '13px' }}>Postal code</FormLabel>\n                                        <TextField\n                                            {...register('postal_code', { required: true })}\n                                            defaultValue={data.postal_code}\n                                            style={textFieldPostalCodeStyle}\n                                            InputProps={{ \n                                                disableUnderline: true\n                                            }}\n                                        />\n                                    </div>\n                                </FormControl>\n                                <div id='postalCodeError__div'>\n                                    {errors.postal_code && errors.postal_code.type === \"required\" && <span className='red_COLOR error_FORM'>Mandatory</span>}\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* PHONE MUMBER */}\n                        <div id='phoneNumberError__container'>\n                            <FormControl>\n                                <div id='phoneNumber__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Phone number</FormLabel>\n                                    <TextField\n                                        {...register('phone_number', { required: true })}\n                                        placeholder='Phone number'\n                                        defaultValue={data.phone_number}\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='phoneNumberError__div'>\n                                {errors.phone_number && errors.phone_number.type === \"required\" && <span className='red_COLOR error_FORM'>A phone number is mandatory</span>}\n                            </div>\n                        </div>\n\n                        {/* EMAIL */}\n                        <div id='emailError__container'>\n                            <FormControl>\n                                <div id='email__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Email</FormLabel>\n                                    <TextField\n                                        {...register('email', { required: true })}\n                                        placeholder='Email'\n                                        defaultValue={data.email}\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='emailError__div'>\n                                {errors.email && errors.email.type === \"required\" && <span className='red_COLOR error_FORM'>An email is mandatory</span>}\n                            </div>\n                        </div>\n                    </div>\n\n                \n                    <div id='complexInformationsRightPanel__div'>\n\n                        {/* STREET */}\n                        <div id='streetError__container'>\n                            <FormControl>\n                                <div id='street__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Street</FormLabel>\n                                    <TextField\n                                        {...register('street', { required: true })}\n                                        placeholder='Street'\n                                        defaultValue={data.street}\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='streetError__div'>\n                                {errors.street && errors.street.type === \"required\" && <span className='red_COLOR error_FORM'>A street is mandatory</span>}\n                            </div>\n                        </div>\n                            \n\n                        {/* HOUSE NUMBER EXTENSION */}\n                        <div id='houseNumberExtensionError__container'>\n                            <FormControl>\n                                <div id='houseNumberExtension__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                                    <TextField\n                                        {...register('house_number_extension')}\n                                        placeholder='House number extension'\n                                        defaultValue={data.complex_house_number_extension}\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='houseNumberExtensionError__div'>\n                                <span></span>\n                            </div>\n                        </div>\n\n                        {/* COUNTRY */}\n                        <div id='countryError__container'>\n                            <FormControl>\n                                <div id='country__div'>\n                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Country</FormLabel>\n                                    <Select\n                                        {...register('country', { required: true })}\n                                        placeholder='Country'\n                                        defaultValue={data.country}\n                                        id='country'\n                                        style={textFieldStyle}\n                                    >\n                                    {country__array.map((item, index) => (\n                                        <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </div>\n                            </FormControl>\n                            <div id='countryError__div'>\n                                {errors.country && errors.country.type === \"required\" && <span className='red_COLOR error_FORM'>A country is mandatory</span>}\n                            </div>\n                        </div>\n\n                        {/* PHONE NUMBER LANDCODE */}\n                        <div id='phoneNumberLandcodeError__container'>\n                            <FormControl>\n                                <div id='phoneNumberLandcode__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Phone number landcode</FormLabel>\n                                    <div id='residenceTypeError__div'>\n                                        <Select\n                                            {...register('phone_number_landcode', { required: true })}\n                                            defaultValue={data.phone_number_landcode}\n                                            style={textFieldStyle}\n                                        >\n                                        {phoneNumberLandcode__array.map((item, index) => (\n                                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                        ))}\n                                        </Select>\n                                    </div>\n                                </div>\n                            </FormControl>\n                            <div id='phoneNumberLandcodeError__div'>\n                                {errors.phone_number_landcode && errors.phone_number_landcode.type === \"required\" && <span className='red_COLOR error_FORM'>A phone number landcode is mandatory</span>}\n                            </div>\n                        </div>\n                            \n\n                        {/* OPENING HOURS */}\n                        <div id='openingHoursError__container'>\n                            <FormControl>\n                                <div id='openingHours__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Opening hours</FormLabel>\n                                    <TextField\n                                        {...register('opening_hours', { required: true })}\n                                        placeholder='Opening hours'\n                                        defaultValue={data.opening_hours}\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='openingHoursError__div'>\n                                {errors.opening_hours && errors.opening_hours.type === \"required\" && <span className='red_COLOR error_FORM'>Opening hours is mandatory</span>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* COMPLEX FACILITY TYPES */}\n                <div id='complexFacilities__div'>\n                    <FormGroup>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                        <div id='complexFacilitiesTypes__div'>\n                            <FormGroup>\n                                {facilityTypes__array.map((item, index) => (\n                                    <FormControlLabel key={index} {...register('complex_facility.' + item.value)} control={<Checkbox />}label={item.label} />\n                                ))}\n                            </FormGroup>\n                        </div>\n                    </FormGroup>    \n                </div>\n\n                <div id='complexInformationsButtons__div'>\n                    {/* PREVIEW */}\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset'\n                        }}\n                        onClick={previewStep}\n                    >\n                        Preview\n                    </Button>\n\n                    {/* NEXT */}\n                    <div id='complexInformationsNextButton__div'>\n                        <Info style={{ color: '#eeeeee' }}/>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            style={{\n                                backgroundColor: '#5398D4',\n                                borderRadius: 50,\n                                fontFamily: 'DMSansMedium',\n                                boxShadow: 'unset',\n                                marginLeft: '10px'\n                            }}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nconst textFieldStyle = {\n    width: '300px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px',\n    color: '#909090'\n}\n\nconst textFieldCityStyle = {\n    width: '195px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    marginRight: '5px',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nconst textFieldPostalCodeStyle = {\n    width: '95px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    marginLeft: '5px',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nconst timeFieldStyle = {\n    width: '140px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nconst country__array = [\n    {\n        value: 'BE',\n        label: 'Belgium'\n    },\n    {\n        value: 'BG',\n        label: 'Bulgaria'\n    },\n    {\n        value: 'CZ',\n        label: 'Czech Republic'\n    },\n    {\n        value: 'DK',\n        label: 'Denmark'\n    },\n    {\n        value: 'DE',\n        label: 'Germany'\n    },\n    {\n        value: 'EE',\n        label: 'Estonia'\n    },\n    {\n        value: 'IE',\n        label: 'Ireland'\n    },\n    {\n        value: 'EL',\n        label: 'Greece'\n    },\n    {\n        value: 'ES',\n        label: 'Spain'\n    },\n    {\n        value: 'FR',\n        label: 'France'\n    },\n    {\n        value: 'HR',\n        label: 'Croatia'\n    },\n    {\n        value: 'IT',\n        label: 'Italy'\n    },\n    {\n        value: 'CY',\n        label: 'Cyprus'\n    },\n    {\n        value: 'LV',\n        label: 'Latvia'\n    },\n    {\n        value: 'LT',\n        label: 'Lithuania'\n    },\n    {\n        value: 'LU',\n        label: 'Luxembourg'\n    },\n    {\n        value: 'HU',\n        label: 'Hungary'\n    },\n    {\n        value: 'MT',\n        label: 'Malta'\n    },\n    {\n        value: 'NL',\n        label: 'The Nederlands'\n    },\n    {\n        value: 'AT',\n        label: 'Austria'\n    },\n    {\n        value: 'PL',\n        label: 'Poland'\n    },\n    {\n        value: 'PT',\n        label: 'Portugal'\n    },\n    {\n        value: 'RO',\n        label: 'Romania'\n    },\n    {\n        value: 'Si',\n        label: 'Slovania'\n    },\n    {\n        value: 'SK',\n        label: 'Slovakia'\n    },\n    {\n        value: 'FI',\n        label: 'Finland'\n    },\n    {\n        value: 'SE',\n        label: 'Sweden'\n    },\n    {\n        value: 'UK',\n        label: 'United Kingdom'\n    },\n    {\n        value: 'ME',\n        label: 'Montenegro'\n    },\n    {\n        value: 'IS',\n        label: 'Iceland'\n    },\n    {\n        value: 'MK',\n        label: 'Macedonia'\n    },\n    {\n        value: 'AL',\n        label: 'Albania'\n    },\n    {\n        value: 'RS',\n        label: 'Serbia'\n    },\n    {\n        value: 'TR',\n        label: 'Turkey'\n    },\n    {\n        value: 'MD',\n        label: 'Moldavia'\n    },\n    {\n        value: 'AM',\n        label: 'Armenia'\n    },\n    {\n        value: 'BY',\n        label: 'Belarus'\n    },\n    {\n        value: 'AD',\n        label: 'Andorra'\n    },\n    {\n        value: 'MC',\n        label: 'Monaco'\n    },\n    {\n        value: 'SM',\n        label: 'San Marino'\n    },\n    {\n        value: 'VA',\n        label: 'Vatican City'\n    },\n    {\n        value: 'UA',\n        label: 'Ukraine'\n    },\n    {\n        value: 'XK',\n        label: 'Kosovo'\n    },\n    {\n        value: 'BA',\n        label: 'Bosnia and Herzegovina'\n    },\n    {\n        value: 'CH',\n        label: 'Switzerland'\n    },\n    {\n        value: 'LI',\n        label: 'Liechtenstein'\n    },\n    {\n        value: 'NO',\n        label: 'Norway'\n    }\n]\n\nconst phoneNumberLandcode__array = [\n    {\n        value: 'BE',\n        label: 'Belgium, +32'\n    },\n    {\n        value: 'BG',\n        label: 'Bulgaria, +359'\n    },\n    {\n        value: 'CZ',\n        label: 'Czech Republic, +420'\n    },\n    {\n        value: 'DK',\n        label: 'Denmark, +45'\n    },\n    {\n        value: 'DE',\n        label: 'Germany, +49'\n    },\n    {\n        value: 'EE',\n        label: 'Estonia, +372'\n    },\n    {\n        value: 'IE',\n        label: 'Ireland, +353'\n    },\n    {\n        value: 'EL',\n        label: 'Greece, +30'\n    },\n    {\n        value: 'ES',\n        label: 'Spain, +34'\n    },\n    {\n        value: 'FR',\n        label: 'France, +33'\n    },\n    {\n        value: 'HR',\n        label: 'Croatia, +385'\n    },\n    {\n        value: 'IT',\n        label: 'Italy, +39'\n    },\n    {\n        value: 'CY',\n        label: 'Cyprus, +357'\n    },\n    {\n        value: 'LV',\n        label: 'Latvia, +371'\n    },\n    {\n        value: 'LT',\n        label: 'Lithuania, +370'\n    },\n    {\n        value: 'LU',\n        label: 'Luxembourg, +352'\n    },\n    {\n        value: 'HU',\n        label: 'Hungary, +36'\n    },\n    {\n        value: 'MT',\n        label: 'Malta, +356'\n    },\n    {\n        value: 'NL',\n        label: 'The Nederlands, +31'\n    },\n    {\n        value: 'AT',\n        label: 'Austria, +43'\n    },\n    {\n        value: 'PL',\n        label: 'Poland, +48'\n    },\n    {\n        value: 'PT',\n        label: 'Portugal, +351'\n    },\n    {\n        value: 'RO',\n        label: 'Romania, +40'\n    },\n    {\n        value: 'Si',\n        label: 'Slovania, +386'\n    },\n    {\n        value: 'SK',\n        label: 'Slovakia, +421'\n    },\n    {\n        value: 'FI',\n        label: 'Finland, +358'\n    },\n    {\n        value: 'SE',\n        label: 'Sweden, +46'\n    },\n    {\n        value: 'UK',\n        label: 'United Kingdom, +44'\n    },\n    {\n        value: 'ME',\n        label: 'Montenegro, +382'\n    },\n    {\n        value: 'IS',\n        label: 'Iceland, +354'\n    },\n    {\n        value: 'MK',\n        label: 'Macedonia, +389'\n    },\n    {\n        value: 'AL',\n        label: 'Albania, +355'\n    },\n    {\n        value: 'RS',\n        label: 'Serbia, +381'\n    },\n    {\n        value: 'TR',\n        label: 'Turkey, +90'\n    },\n    {\n        value: 'MD',\n        label: 'Moldavia, +373'\n    },\n    {\n        value: 'AM',\n        label: 'Armenia, +374'\n    },\n    {\n        value: 'BY',\n        label: 'Belarus, +375'\n    },\n    {\n        value: 'AD',\n        label: 'Andorra, +376'\n    },\n    {\n        value: 'MC',\n        label: 'Monaco, +377'\n    },\n    {\n        value: 'SM',\n        label: 'San Marino, +378'\n    },\n    {\n        value: 'VA',\n        label: 'Vatican City, +379'\n    },\n    {\n        value: 'UA',\n        label: 'Ukraine, +380'\n    },\n    {\n        value: 'XK',\n        label: 'Kosovo, +383'\n    },\n    {\n        value: 'BA',\n        label: 'Bosnia and Herzegovina, +387'\n    },\n    {\n        value: 'CH',\n        label: 'Switzerland, +41'\n    },\n    {\n        value: 'LI',\n        label: 'Liechtenstein, +423'\n    },\n    {\n        value: 'NO',\n        label: 'Norway, +47'\n    }\n]\n\nconst facilityTypes__array = [\n    {\n        value: 'complex_kitchen',\n        label: 'Kitchen'\n    },\n    {\n        value: 'complex_bathroom',\n        label: 'Bathroom'\n    },\n    {\n        value: 'complex_supermarket',\n        label: 'Supermarket'\n    },\n    {\n        value: 'complex_fitness',\n        label: 'Fitness'\n    },\n    {\n        value: 'complex_common_room',\n        label: 'Common room'\n    },\n    {\n        value: 'complex_reception_office',\n        label: 'Reception / Office'\n    },\n    {\n        value: 'complex_laundry',\n        label: 'Laundry'\n    },\n    {\n        value: 'complex_relax',\n        label: 'Relax'\n    }\n]\n\nexport default LivingPlaceRegistrationComplexInformations\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationResidenceInformations.js",["468","469","470","471"],"import React, { useState, useEffect } from 'react'\n\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { TextField, Button, FormGroup } from '@material-ui/core'\nimport Radio from '@material-ui/core/Radio'\nimport Checkbox from '@mui/material/Checkbox'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Info } from '@material-ui/icons'\n\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index'\n\nimport { useData } from '../Context/DataContext'\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../Styles/Pages/LivingPlaceRegistrationResidenceInformations.scss'\n\nconst LivingPlaceRegistrationResidenceInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 3\n\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: {\n            residence_house_number: data.residence_house_number,\n            residence_house_number_extension: data.residence_house_number_extension,\n            residence_floor: data.residence_floor,\n            rental_permit: data.rental_permit,\n            always_visible_in_platform: data.always_visible_in_platform,\n            snf_certificate: data.snf_certificate,\n            akf_certificate: data.akf_certificate,\n            number_of_rooms_with_living_place: data.number_of_rooms_with_living_place,\n            residence_facility_types: {\n                residence_kitchen: data.kitchen,\n                residence_bathroom: data.bathroom,\n                residence_common_room: data.common_room\n            }\n        }\n    })\n\n    const navigate = useNavigate()\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/floorplan_informations')\n        setValues(data)\n        console.log(data)\n    }\n\n    const previewStep = (data) => {\n        navigate('/living_place_registration/complex_informations')\n        LivingPlaceRegistrationTimelineState.step = 2\n    }\n\n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Residence informations</h5>\n\n                <div id='complexInfos__div'>\n                    <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex_name}</p>\n                    <p className='p-medium' style={{marginTop: '-10px'}}>\n                        {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                        {data.street}\n                        {' '}\n                        {data.complex_house_number}\n                        {', '}\n                        {data.postal_code}\n                        {' '}\n                        {data.city}\n                        {' ('}\n                        {data.country}\n                        {')'}\n                    </p>\n                </div>\n            \n                <div id='residenceInformationsPanels__div'>\n\n                    <div id='residenceInformationsLeftPanel__div'>\n\n                        {/* RESIDENCE HOUSE NUMBER */}\n                        <div id='residenceHouseNumberError__container'>\n                            <FormControl>\n                                <div id='residenceHouseNumber__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                                    <TextField\n                                        {...register('residence_house_number', { required: true })}\n                                        placeholder='House number'\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='residenceHouseNumberError__div'>\n                                {errors.residence_house_number && errors.residence_house_number.type === \"required\" && <span className='red_COLOR error_FORM'>Residence house number is mandatory</span>}\n                            </div>\n                        </div>\n\n                        {/* RESIDENCE HOUSE NUMBER EXTENSION */}\n                        <div id='residenceHouseNumberExtensionError__container'>\n                            <FormControl>\n                                <div id='residenceHouseNumberExtension__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                                    <TextField\n                                        {...register('residence_house_number_extension')}\n                                        placeholder='House number extension'\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='residenceHouseNumberExtensionError__div'>\n                                <span></span>\n                            </div>\n                        </div>\n\n                        {/* FLOOR */}\n                        <div id='residenceFloorError__container'>\n                            <FormControl>\n                                <div id='residenceFloor__div'>\n                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                    <TextField\n                                        {...register('residence_floor', { required: true })}\n                                        placeholder='Floor'\n                                        style={textFieldStyle}\n                                        InputProps={{ \n                                            disableUnderline: true\n                                        }}\n                                    />\n                                </div>\n                            </FormControl>\n                            <div id='residenceFloorError__div'>\n                                {errors.residence_floor && errors.residence_floor.type === \"required\" && <span className='red_COLOR error_FORM'>Residence house number is mandatory</span>}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id='residenceInformationsRightPanel__div'>\n                        <div id='rentalPermitAlwaysVisibleInPlatform__div'>\n\n                            {/* RENTAL PERMIT */}\n                            <div id='rentalPermitError__container'>\n                                <FormControl component='fieldset'>\n                                    <div id='rentalPermit__div'>\n                                        <FormLabel component='legend' style={{ color: 'black'}}>Rental permit?</FormLabel>\n                                        <RadioGroup\n                                            {...register('rental_permit', { required: true })}\n                                            style={{ display: 'initial' }}\n                                        >\n                                            <FormControlLabel value='yes' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='Yes' />\n\n                                            <FormControlLabel value='no' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='No' />\n                                        </RadioGroup>\n                                    </div>\n                                    <div id='rentalPermitError__div'>\n                                        {errors.rental_permit && errors.rental_permit.type === \"required\" && <span className='red_COLOR error_FORM'>Is mandatory</span>}\n                                    </div>\n                                </FormControl>\n                            </div>\n                            \n                            {/* ALWAYS VISIBLE IN PLATFORM */}\n                            <div id='alwaysVisibleInPlatformError__container'>\n                                <FormControl component='fieldset'>\n                                    <div id='alwaysVisibleInPlatform__div'>\n\n                                        <FormLabel component='legend' style={{ color: 'black'}}>Always visible?</FormLabel>\n                                        <RadioGroup\n                                            {...register('always_visible_in_platform', { required: true })}\n                                            style={{ display: 'initial' }}\n                                        >\n                                            <FormControlLabel value='yes' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='Yes' />\n\n                                            <FormControlLabel value='no' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='No' />\n                                        </RadioGroup>\n                                    </div>\n                                    <div id='alwaysVisibleInPlatformError__div'>\n                                        {errors.always_visible_in_platform && errors.always_visible_in_platform.type === \"required\" && <span className='red_COLOR error_FORM'>Is mandatory</span>}\n                                    </div>\n                                </FormControl>\n                            </div>\n                        </div>\n\n                        <div id='snfCertificateAkfCertificate__div'>\n                            {/* SNF CERTIFICATE */}\n                            <div id='snfCertificateError__container'>\n                                <FormControl component='fieldset'>\n                                    <div id='snfCertificate__div'>\n\n                                        <FormLabel component='legend' style={{ color: 'black'}}>SNF Certificate</FormLabel>\n                                        <RadioGroup\n                                            {...register('snf_certificate', { required: true })}\n                                            style={{ display: 'initial' }}\n                                        >\n                                            <FormControlLabel value='yes' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='Yes' />\n\n                                            <FormControlLabel value='no' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='No' />\n                                        </RadioGroup>\n                                    </div>\n                                    <div id='snfCertificateError__div'>\n                                        {errors.snf_certificate && errors.snf_certificate.type === \"required\" && <span className='red_COLOR error_FORM'>Is mandatory</span>}\n                                    </div>\n                                </FormControl>\n                            </div>\n\n                            {/* AKF CERTIFICATE */}\n                            <div id='akfCertificateError__container'>\n                                <FormControl component='fieldset'>\n                                    <div id='akfCertificate__div'>\n\n                                        <FormLabel component='legend' style={{ color: 'black'}}>AKF Certificate</FormLabel>\n                                        <RadioGroup\n                                            {...register('akf_certificate', { required: true })}\n                                            style={{ display: 'initial' }}\n                                        >\n                                            <FormControlLabel value='yes' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='Yes' />\n\n                                            <FormControlLabel value='no' control={\n                                                <Radio\n                                                    style={{ color: '#eeeeee' }}\n                                                />\n                                            } label='No' />\n                                        </RadioGroup>\n                                    </div>\n                                    <div id='akfCertificateError__div'>\n                                        {errors.akf_certificate && errors.akf_certificate.type === \"required\" && <span className='red_COLOR error_FORM'>Is mandatory</span>}\n                                    </div>\n                                </FormControl>\n                            </div>\n                        </div>\n\n                        <div id='numberOfRoomsNumberOfRoomsWithLivingPlace__div'>\n\n                            {/* NUMBER OF ROOMS */}\n                            <div id='numberOfRoomsError__container'>\n                                <FormControl>\n                                    <div id='numberOfRooms__div'>\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of rooms</FormLabel>\n                                        <TextField\n                                            {...register('number_of_rooms', { required: true })}\n                                            placeholder='e.g. 1'\n                                            style={smallTextFieldStyle}\n                                            InputProps={{ \n                                                disableUnderline: true\n                                            }}\n                                        />\n                                    </div>\n                                    <div id='numberOfRoomsError__div'>\n                                        {errors.number_of_rooms && errors.number_of_rooms.type === \"required\" && <span className='red_COLOR error_FORM'>Is mandatory</span>}\n                                    </div>\n                                </FormControl>\n                            </div>\n\n                            {/* NUMBER OF ROOMS WITH LIVING PLACE */}\n                            <div id='numberOfRoomsWithLivingPlaceError__container'>\n                                <FormControl>\n                                    <div id='numberOfRoomsWithLivingPlace__div'>\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>... with living place</FormLabel>\n                                        <TextField\n                                            {...register('number_of_rooms_with_living_place', { required: true })}\n                                            defaultValue={data.number_of_rooms_with_living_place}\n                                            placeholder='e.g. 1'\n                                            style={smallTextFieldStyle}\n                                            InputProps={{ \n                                                disableUnderline: true\n                                            }}\n                                        />\n                                    </div>\n                                    <div id='numberOfRoomsWithLivingPlaceError__div'>\n                                        {errors.number_of_rooms_with_living_place && errors.number_of_rooms_with_living_place.type === \"required\" && <span className='red_COLOR error_FORM'>Is mandatory</span>}\n                                    </div>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* RESIDENCE FACILITY TYPES */}\n                <div id='residenceFacilities__div'>\n                    <FormGroup>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                        <div id='residenceFacilitiesTypes__div'>\n                            <FormGroup>\n                                {facilityTypes__array.map((item, index) => (\n                                    <FormControlLabel key={index} {...register('residence_facility_types.' + item.value)} control={<Checkbox />}label={item.label} />\n                                ))}\n                            </FormGroup>\n                        </div>\n                    </FormGroup>    \n                </div>\n\n                <div id='residenceInformationsButtons__div'>\n                    {/* PREVIEW */}\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset'\n                        }}\n                        onClick={previewStep}\n                    >\n                        Preview\n                    </Button>\n\n                    {/* NEXT */}\n                    <div id='residenceInformationsNextButton__div'>\n                        <Info style={{ color: '#eeeeee' }}/>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            style={{\n                                backgroundColor: '#5398D4',\n                                borderRadius: 50,\n                                fontFamily: 'DMSansMedium',\n                                boxShadow: 'unset',\n                                marginLeft: '10px'\n                            }}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nconst textFieldStyle = {\n    width: '300px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nconst smallTextFieldStyle = {\n    width: '140px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nconst facilityTypes__array = [\n    {\n        value: 'residence_kitchen',\n        checked: 'checked',\n        label: 'Kitchen'\n    },\n    {\n        value: 'residence_bathroom',\n        checked: 'checked',\n        label: 'Bathroom'\n    },\n    {\n        value: 'residence_common_room',\n        checked: 'checked',\n        label: 'Common room'\n    }\n]\n\nexport default LivingPlaceRegistrationResidenceInformations\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationFloorplanInformations.js",["472","473"],"import React, { useState } from 'react'\n\nimport { useForm } from 'react-hook-form'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { TextField, Button } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Add, Info } from '@material-ui/icons'\n\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index'\n\nimport { useData } from '../Context/DataContext'\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../Styles/Pages/LivingPlaceRegistrationFloorplanInformations.scss'\n\nconst LivingPlaceRegistrationFloorplanInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 4\n\n    const [roomList, setRoomList] = useState([])\n\n    const addRoom = (e) => {\n        setRoomList(roomList.concat(\n            <div className='floorplanInformationsPanels__div'>\n\n                <div className='floorplanInformationsLeftPanel__div'>\n\n                    {/* ROOM */}\n                    <FormControl>\n                        <div className='room__div'>\n                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Room</FormLabel>\n                            <TextField\n                                {...register('floorplan_informations[' + roomList.length + 1 + '].room')}\n                                placeholder='Room'\n                                style={textFieldStyle}\n                                InputProps={{ \n                                    disableUnderline: true\n                                }}\n                            />\n                        </div>\n                    </FormControl>\n                \n                    {/* FLOOR */}\n                    <FormControl>\n                        <div className='floor__div'>\n                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                            <TextField\n                                {...register('floorplan_informations[' + roomList.length + 1 + '].floor')}\n                                placeholder='Floor'\n                                style={textFieldStyle}\n                                InputProps={{ \n                                    disableUnderline: true\n                                }}\n                            />\n                        </div>\n                    </FormControl>\n                </div>\n\n                <div className='floorplanInformationsRightPanel__div'>\n    \n                    {/* AREA */}\n                    <FormControl>\n                        <div className='area__div'>\n                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                            <TextField\n                                {...register('floorplan_informations[' + roomList.length + 1 + '].area')}\n                                placeholder='Area'\n                                style={textFieldStyle}\n                                InputProps={{ \n                                    disableUnderline: true\n                                }}\n                            />\n                        </div>\n                    </FormControl>\n                </div>\n            </div>\n        ))\n    }\n\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, errors } = useForm({\n        defaultValues: {\n            floorplan_informations: []\n        },\n        mode: 'onBlur',\n        /* resolver: yupResolver(schema) */\n    })\n\n    const navigate = useNavigate()\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/rooms_informations')\n        setValues(data)\n        console.log(data)\n    }\n\n    const previewStep = (data) => {\n        navigate('/living_place_registration/residence_informations')\n        setValues(data)\n        console.log(data)\n    }\n\n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Floorplan informations</h5>\n\n                <div id='residenceInfos__div'>\n                    <p className='p-large blue_COLOR' style={{marginTop: '20px'}}>Residence A</p>\n                    <p className='p-medium' style={{marginTop: '-10px'}}>Van Koetsveldstraat 25, 3532 ES Utrecht (NL)</p>\n                </div>\n\n                <div id='floorPlanInformations__container'>\n\n                    {/* {data.residence_informations.number_of_rooms.forEach((index) => { */}\n            \n                        <div className='floorplanInformationsPanels__div'>\n\n                            <div className='floorplanInformationsLeftPanel__div'>\n\n                                {/* ROOM */}\n                                <FormControl>\n                                    <div className='room__div'>\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Room</FormLabel>\n                                        <TextField\n                                            {...register('floorplan_informations[0].room')}\n                                            placeholder='Room'\n                                            style={textFieldStyle}\n                                            InputProps={{ \n                                                disableUnderline: true\n                                            }}\n                                        />\n                                    </div>\n                                </FormControl>\n                            \n                                {/* FLOOR */}\n                                <FormControl>\n                                    <div className='floor__div'>\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                        <TextField\n                                            {...register('floorplan_informations[0].floor')}\n                                            placeholder='Floor'\n                                            style={textFieldStyle}\n                                            InputProps={{ \n                                                disableUnderline: true\n                                            }}\n                                        />\n                                    </div>\n                                </FormControl>\n                            </div>\n\n                            <div className='floorplanInformationsRightPanel__div'>\n                \n                                {/* AREA */}\n                                <FormControl>\n                                    <div className='area__div'>\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                                        <TextField\n                                            {...register('floorplan_informations[0].area')}\n                                            placeholder='Area'\n                                            style={textFieldStyle}\n                                            InputProps={{ \n                                                disableUnderline: true\n                                            }}\n                                        />\n                                    </div>\n                                </FormControl>\n                            </div>\n                        </div>\n                    {/* })} */}\n                    \n                    {roomList}\n\n                    <div\n                        id='addRoom__div'\n                        onClick={addRoom}\n                    >\n                        <div className='p-large'>Add room</div>\n                        <div className='circleAddRoom__div white_COLOR'>\n                            <Add />\n                        </div>\n                    </div>\n                </div>\n\n\n                <div id='floorplanInformationsButtons__div'>\n                    {/* PREVIEW */}\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset'\n                        }}\n                        onClick={previewStep}\n                    >\n                        Preview\n                    </Button>\n\n                    {/* NEXT */}\n                    <div id='floorplanInformationsNextButton__div'>\n                        <Info style={{ color: '#eeeeee' }}/>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            style={{\n                                backgroundColor: '#5398D4',\n                                borderRadius: 50,\n                                fontFamily: 'DMSansMedium',\n                                boxShadow: 'unset',\n                                marginLeft: '10px'\n                            }}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nconst textFieldStyle = {\n    width: '300px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nexport default LivingPlaceRegistrationFloorplanInformations\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationRoomsInformations.js",["474","475","476"],"import React from 'react'\n\nimport { useForm } from 'react-hook-form'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport { Button } from '@material-ui/core'\nimport { Info } from '@material-ui/icons'\n\nimport {\n    LivingPlaceRegistrationTimeline,\n    RoomInformations\n} from '../Components/Registration/index'\n\nimport { useData } from '../Context/DataContext'\n\nimport '../Styles/Pages/LivingPlaceRegistrationRoomsInformations.scss'\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceRegistrationStep5 = () => {\n\n    const [value, setValue] = React.useState(0)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, errors } = useForm({\n        defaultValues: {\n            rooms_informations: []\n        },\n        mode: 'onBlur',\n        /* resolver: yupResolver(schema) */\n    })\n\n    const navigate = useNavigate()\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/living_places_informations')\n        setValues(data)\n        console.log(data)\n    }\n\n    const previewStep = (data) => {\n        navigate('/living_place_registration/floorplan_informations')\n        setValues(data)\n        console.log(data)\n    }\n\n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Rooms informations</h5>\n            \n                <Box sx={{ width: '100%' }}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <Tabs value={value} onChange={handleChange} aria-label='basic tabs example' centered>\n                            <Tab label='Item One' {...a11yProps(0)} />\n                            <Tab label='Item Two' {...a11yProps(1)} />\n                            <Tab label='Item Three' {...a11yProps(2)} />\n                        </Tabs>\n                    </Box>\n                    <TabPanel value={value} index={0}>\n                        <RoomInformations />\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <RoomInformations />\n                    </TabPanel>\n                    <TabPanel value={value} index={2}>\n                        <RoomInformations />\n                    </TabPanel>\n                </Box>\n\n                <div id='roomsInformationsButtons__div'>\n                    {/* PREVIEW */}\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset'\n                        }}\n                        onClick={previewStep}\n                    >\n                        Preview\n                    </Button>\n\n                    {/* NEXT */}\n                    <div id='roomsInformationsNextButton__div'>\n                        <Info style={{ color: '#eeeeee' }}/>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            style={{\n                                backgroundColor: '#5398D4',\n                                borderRadius: 50,\n                                fontFamily: 'DMSansMedium',\n                                boxShadow: 'unset',\n                                marginLeft: '10px'\n                            }}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default LivingPlaceRegistrationStep5\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationLivingPlacesInformations.js",["477","478"],"import React from 'react'\n\nimport { useForm } from 'react-hook-form'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport { Button } from '@material-ui/core'\nimport { Info } from '@material-ui/icons'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Carousel from 'react-bootstrap/Carousel'\n\nimport {\n    LivingPlaceRegistrationTimeline,\n    LivingPlaceInformations\n} from '../Components/Registration/index'\n\nimport { useData } from '../Context/DataContext'\n\nimport '../Styles/Pages/LivingPlaceRegistrationLivingPlacesInformations.scss'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceRegistrationLivingPlacesInformations = () => {\n\n    const [value, setValue] = React.useState(0)\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const { setValues, data } = useData()\n\n    console.log('data look inside', data)\n\n    const { register, handleSubmit, errors } = useForm({\n        defaultValues: {\n            living_place_informations: []\n        }\n    })\n\n    const navigate = useNavigate()\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/send_datas')\n        setValues(data)\n        console.log(data)\n    }\n\n    const previewStep = (data) => {\n        navigate('/living_place_registration/rooms_informations')\n        setValues(data)\n        console.log(data)\n    }\n\n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Living place informations</h5>\n            \n                <Box sx={{ width: '100%' }}>\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                    <Tabs value={value} onChange={handleChange} aria-label='basic tabs example' centered>\n                        <Tab label='Item One' {...a11yProps(0)} />\n                        <Tab label='Item Two' {...a11yProps(1)} />\n                        <Tab label='Item Three' {...a11yProps(2)} />\n                    </Tabs>\n                </Box>\n                <TabPanel value={value} index={0}>\n                    <Carousel style={{ backgroundColor: 'red' }} interval={null} wrap={false}>\n                        <Carousel.Item>\n                            <div /* style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}} */>\n                                <LivingPlaceInformations />\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                                <LivingPlaceInformations />\n                            </div>\n                        </Carousel.Item>\n                    </Carousel>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <Carousel style={{ backgroundColor: 'blue' }}>\n                        <Carousel.Item>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                                <LivingPlaceInformations />\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                                <LivingPlaceInformations />\n                            </div>\n                        </Carousel.Item>\n                    </Carousel>\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                    <Carousel style={{ backgroundColor: 'black' }}>\n                        <Carousel.Item>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                                <LivingPlaceInformations />\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                                <LivingPlaceInformations />\n                            </div>\n                        </Carousel.Item>\n                    </Carousel>\n                </TabPanel>\n                </Box>\n\n                <div id='livingPlacesInformationsButtons__div'>\n                    {/* PREVIEW */}\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset'\n                        }}\n                        onClick={previewStep}\n                    >\n                        Preview\n                    </Button>\n\n                    {/* NEXT */}\n                    <div id='livingPlacesInformationsNextButton__div'>\n                        <Info style={{ color: '#eeeeee' }}/>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            style={{\n                                backgroundColor: '#5398D4',\n                                borderRadius: 50,\n                                fontFamily: 'DMSansMedium',\n                                boxShadow: 'unset',\n                                marginLeft: '10px'\n                            }}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default LivingPlaceRegistrationLivingPlacesInformations\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Functions/UpdateAction.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik1.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik2.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/TextInput.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/InviteFriends.js",["479"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik'\n\nconst initialValues = {\n    friends: [\n        {\n            name: '',\n            email: ''\n        },\n    ]\n}\n\nconst InviteFriends = () => (\n    <div>\n        <h1>Invite friends</h1>\n        <Formik\n        initialValues={initialValues}\n        onSubmit={async (values) => {\n            await new Promise((r) => setTimeout(r, 500))\n            alert(JSON.stringify(values, null, 2))\n        }}\n        >\n        {({ values }) => (\n            <Form>\n                <FieldArray name='friends'>\n                    {({ insert, remove, push }) => (\n                        <div>\n                            {values.friends.length > 0 && values.friends.map((friend, index) => (\n                                <div className='row' key={index}>\n                                    <div className='col'>\n                                        <label htmlFor={`friends.${index}.name`}>Name</label>\n                                        <Field name={`friends.${index}.name`} placeholder='Jane Doe' type='text' />\n                                        <ErrorMessage name={`friends.${index}.name`} component='div' className='field-error' />\n                                    </div>\n                                    <div className='col'>\n                                        <label htmlFor={`friends.${index}.email`}>Email</label>\n                                        <Field name={`friends.${index}.email`} placeholder='jane@acme.com' type='email' />\n                                        <ErrorMessage name={`friends.${index}.name`} component='div' className='field-error' />\n                                    </div>\n                                    <div className='col'>\n                                        <button type='button' className='secondary' onClick={() => remove(index)}>X</button>\n                                    </div>\n                                </div>\n                            ))}\n                            <button type='button' className='secondary' onClick={() => push({ name: '', email: '' })}> Add Friend</button>\n                        </div>\n                    )}\n                </FieldArray>\n                <button type='submit'>Invite</button>\n            </Form>\n        )}\n    </Formik>\n  </div>\n)\n\nexport default InviteFriends\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/GlobalVariablesContext.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/Registration/index.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/MaximumStayDuration.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ComplexFacilities.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/PhoneNumberLandcode.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/Countries.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/StatusAtPointOfRegestering.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ServiceCostTerm.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/LivingPlaceFacilities.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ResidenceFacilities.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/RoomTypes.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ResidenceTypes.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/RoomFacilities.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/LivingPlaceTypes.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Json/ComplexNames.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/Registration/index.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/FloorplanInformations.js",["480"],"import React from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField } from '@mui/material'\nimport { Add, DeleteForever } from '@mui/icons-material/'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nconst validationSchema = Yup.object().shape({\n    floorplan: Yup.array().of(\n        Yup.object().shape({\n          floor: Yup.number().required('Test'),\n          area: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nconst initialValues = {\n    floorplan: [\n    {\n      floor: '',\n      area: ''\n    }\n  ]\n}\n\nconst FloorplanInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 4\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        setValues(data)\n        LivingPlaceRegistrationTimelineState.step = 3\n        navigate('/living_place_registration/residence_informations')\n        console.log(data)\n    }\n\n    return (\n        <>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Floorplan informations</h5>\n\n            <div id='complexInfos__div'>\n                <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                <p className='p-medium' style={{marginTop: '-10px'}}>\n                    {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                    {data.complex.street}\n                    {' '}\n                    {data.complex.complex_house_number}\n                    {', '}\n                    {data.complex.postal_code}\n                    {' '}\n                    {data.complex.city}\n                    {' ('}\n                    {data.complex.country}\n                    {')'}\n                </p>\n            </div>\n\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    setValues(data)\n                    LivingPlaceRegistrationTimelineState.step = 5\n                    navigate('/living_place_registration/rooms_informations')\n                    console.log(data)\n                }}\n            >\n                {({ values, handleChange, touched, errors }) => (\n                    <Form>\n                        <FieldArray name='floorplan'>\n                            {({ remove, push }) => (\n                                <div>\n                                    {values.floorplan.length > 0 && values.floorplan.map((room, index) => (\n                                        <div className='row' key={index}>\n\n                                            {/* FLOOR */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                            <TextField\n                                                name={`floorplan.${index}.floor`}\n                                                value={room.floor}\n                                                onChange={handleChange}\n                                            />\n                                            <ErrorMessage name={`floorplan.${index}.floor`} />\n\n                                            {/* AREA */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                                            <TextField\n                                                name={`floorplan.${index}.area`}\n                                                value={room.area}\n                                                onChange={handleChange}\n                                            />\n                                            <ErrorMessage name={`floorplan.${index}.area`} />\n\n                                            <div className='col'>\n                                                <Button variant='contained' onClick={() => remove(index)}><DeleteForever /></Button>\n                                            </div>\n                                        </div>\n                                    ))}\n                                    <Button variant='contained' onClick={() => push({ floor: '', area: '' })}><Add /></Button>\n                                </div>\n                            )}\n                        </FieldArray>\n\n                        {/* PREVIEW */}\n                        <Button variant='contained' onClick={previewStep}>\n                            Previous\n                        </Button>\n\n                        {/* NEXT */}\n                        <Button variant='contained' type='submit'>\n                            Next\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default FloorplanInformations","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/ComplexInformations.js",["481"],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/LivingPlacesInformations.js",["482"],"import React, { useState, useEffect } from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Button, Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, FormControlLabel, FormGroup, Checkbox } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Carousel from 'react-bootstrap/Carousel'\nimport serviceCostTerm from '../../Json/ServiceCostTerm'\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities'\n\nimport maximumStayDuration from '../../Json/MaximumStayDuration'\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering'\n\nlet initialValues = {\n    rooms: ''\n}\n\nlet livingPlacesArray = []\n\nconst livingPlace = {\n    max_stay_duration: '',\n    rental_price_term: '',\n    description: '',\n    status_at_point_of_registering: '',\n    changeover_time: '',\n    deposit: '',\n    service_cost_term: '',\n    b2b_rental_price: '',\n    b2c_rental_price: '',\n    vhe_facility_types: {\n        welcome_pack: '',\n        bed_sheets: '',\n        towels: '',\n        bike: '',\n        weekly_cleaning: '',\n        final_cleaning: '',\n        kitchen_supplies: '',\n        wifi: '',\n        wifi_television: ''\n    }\n}\n\nconst validationSchema = Yup.object().shape({\n    rooms: Yup.array().of(\n        Yup.object().shape({\n            vhes: Yup.array().of(\n                Yup.object().shape({\n                    max_stay_duration: Yup.string().required('Test'),\n                    rental_price_term: Yup.string().required('Test'),\n                    description: Yup.string().required('Test'),\n                    status_at_point_of_registering: Yup.string().required('Test'),\n                    changeover_time: Yup.number().required('Test'),\n                    deposit: Yup.number().required('Test'),\n                    service_cost_term: Yup.number().required('Test'),\n                    b2b_rental_price: Yup.number().required('Test'),\n                    b2c_rental_price: Yup.number().required('Test'),\n                })).required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlacesInformations = () => {\n    \n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    LivingPlaceRegistrationTimelineState.maxStep = 6\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 5\n        navigate('/living_place_registration/rooms_informations')\n    }\n\n    const [livingPlacesArraysCreated, setLivingPlacesArraysCreated] = useState(false)\n    \n    let rooms = data.rooms\n\n    const numberOfRooms = parseInt(data.residence.number_rooms_with_vhes)\n\n    useEffect(() => {\n        let numberOfLivingPlacesArray = []\n        const setVhesArrays = () => {\n            for(let i = 0; i < numberOfRooms; i++) {\n                numberOfLivingPlacesArray.push(parseInt(data.rooms[i].number_of_living_places))\n            }\n            for(let i = 0; i < numberOfRooms; i++) {\n                livingPlacesArray = []\n                for(let j = 0; j < numberOfLivingPlacesArray[i]; j++ ){\n                    livingPlacesArray.push(livingPlace)\n                }\n                rooms[i].vhes = livingPlacesArray\n            }\n        }\n        setVhesArrays()\n        setLivingPlacesArraysCreated(true)\n    }, [numberOfRooms, data.rooms, rooms])\n\n    if(!livingPlacesArraysCreated) return null\n\n    initialValues.rooms = rooms\n\n    return (\n        <>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Living places informations</h5>\n\n            <div id='complexInfos__div'>\n                <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                <p className='p-medium' style={{marginTop: '-10px'}}>\n                    {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                    {data.complex.street}\n                    {' '}\n                    {data.complex.complex_house_number}\n                    {', '}\n                    {data.complex.postal_code}\n                    {' '}\n                    {data.complex.city}\n                    {' ('}\n                    {data.complex.country}\n                    {')'}\n                </p>\n            </div>\n\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    setValues(data)\n                    LivingPlaceRegistrationTimelineState.step = 7\n                    navigate('/living_place_registration/informations_sent')\n                    console.log(data)\n                }}\n            >\n                {({ values, handleChange, setFieldValue }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {() => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label={`Room ${index + 1}`} {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {values.rooms.length > 0 && values.rooms.map((room, roomIndex) => (\n                                            <TabPanel value={value} index={roomIndex}>\n                                                <FieldArray name={`rooms.${roomIndex}.vhes`}>\n                                                    {() => (\n                                                        <Carousel style={{ backgroundColor: 'red' }} interval={20} wrap={false}>\n                                                            {values.rooms[roomIndex].vhes.map((vhe, indexVhe) => (\n                                                                <Carousel.Item>\n\n                                                                    {/* MAXIMUM STAY DURATION */}\n                                                                    <div>\n                                                                        <FormControl style={{ marginLeft: '150px',  marginTop: '150px',  marginBottom: '150px' }}>\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Maximum stay duration</FormLabel>\n                                                                            <Select\n                                                                                name={`rooms.${roomIndex}.vhes.${indexVhe}.max_stay_duration`}\n                                                                                value={room.vhes[indexVhe].max_stay_duration}\n                                                                                onChange={handleChange}\n                                                                            >\n                                                                                <MenuItem value=''>Choose a maximum stay duration</MenuItem>\n                                                                                {maximumStayDuration.map((item, index) => (\n                                                                                    <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                                ))}\n                                                                            </Select>\n                                                                        </FormControl>\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.max_stay_duration`} />\n                                                                    </div>\n\n                                                                    {/* RENTAL PRICE TERM */}\n                                                                    <div>\n                                                                        <FormControl>\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost term</FormLabel>\n                                                                            <Select\n                                                                                name={`rooms.${roomIndex}.vhes.${indexVhe}.rental_price_term`}\n                                                                                value={room.vhes[indexVhe].rental_price_term}\n                                                                                onChange={handleChange}\n                                                                            >\n                                                                                <MenuItem value=''>Choose service cost term</MenuItem>\n                                                                                {serviceCostTerm.map((item, index) => (\n                                                                                    <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                                ))}\n                                                                            </Select>\n                                                                        </FormControl>\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.rental_price_term`} />\n                                                                    </div>\n\n                                                                    {/* DESCRIPTION */}\n                                                                    <div>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Description</FormLabel>\n                                                                        <TextField\n                                                                            name={`rooms.${roomIndex}.vhes.${indexVhe}.description`}\n                                                                            value={room.vhes[indexVhe].description}\n                                                                            onChange={handleChange}\n                                                                        />\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.description`} />\n                                                                    </div>\n\n                                                                    {/* CHANGEOVER TIME */}\n                                                                    <div>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Changeover time</FormLabel>\n                                                                        <TextField\n                                                                            name={`rooms.${roomIndex}.vhes.${indexVhe}.changeover_time`}\n                                                                            value={room.vhes[indexVhe].changeover_time}\n                                                                            onChange={handleChange}\n                                                                        />\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.changeover_time`} />\n                                                                    </div>\n\n                                                                    {/* STATUS AT POINT OF REGESTERING */}\n                                                                    <div>\n                                                                        <FormControl>\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Status at point of registering</FormLabel>\n                                                                            <Select\n                                                                                name={`rooms.${roomIndex}.vhes.${indexVhe}.status_at_point_of_registering`}\n                                                                                value={room.vhes[indexVhe].status_at_point_of_registering}\n                                                                                onChange={handleChange}\n                                                                            >\n                                                                                <MenuItem value=''>Choose a status</MenuItem>\n                                                                                {statusAtPointOfRegestering.map((item, index) => (\n                                                                                    <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                                ))}\n                                                                            </Select>\n                                                                        </FormControl>\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.status_at_point_of_registering`} />\n                                                                    </div>\n\n                                                                    {/* DEPOSIT */}\n                                                                    <div>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Deposit</FormLabel>\n                                                                        <TextField\n                                                                            name={`rooms.${roomIndex}.vhes.${indexVhe}.deposit`}\n                                                                            value={room.vhes[indexVhe].deposit}\n                                                                            onChange={handleChange}\n                                                                        />\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.deposit`} />\n                                                                    </div>\n\n                                                                    {/* SERVICE COST TERM */}\n                                                                    <div>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost</FormLabel>\n                                                                        <TextField\n                                                                            name={`rooms.${roomIndex}.vhes.${indexVhe}.service_cost_term`}\n                                                                            value={room.vhes[indexVhe].service_cost_term}\n                                                                            onChange={handleChange}\n                                                                        />\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.service_cost_term`} />\n                                                                    </div>\n\n                                                                    {/* B2B RENTAL PRICE */}\n                                                                    <div>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2B rental price</FormLabel>\n                                                                        <TextField\n                                                                            name={`rooms.${roomIndex}.vhes.${indexVhe}.b2b_rental_price`}\n                                                                            value={room.vhes[indexVhe].b2b_rental_price}\n                                                                            onChange={handleChange}\n                                                                        />\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.b2b_rental_price`} />\n                                                                    </div>\n\n                                                                    {/* B2C RENTAL PRICE */}\n                                                                    <div>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2C rental price</FormLabel>\n                                                                        <TextField\n                                                                            name={`rooms.${roomIndex}.vhes.${indexVhe}.b2c_rental_price`}\n                                                                            value={room.vhes[indexVhe].b2c_rental_price}\n                                                                            onChange={handleChange}\n                                                                        />\n                                                                        <ErrorMessage name={`rooms.${roomIndex}.vhes.${indexVhe}.b2c_rental_price`} />\n                                                                    </div>\n\n                                                                    {/* FACILITY TYPES */}\n                                                                    <div>\n                                                                        <FormGroup>\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                                            <FormGroup>\n                                                                                {livingPlaceFacilities.map((item, index) => (\n                                                                                    <FormControlLabel key={index}\n                                                                                        control={\n                                                                                            <Checkbox\n                                                                                            onChange={(e) => {\n                                                                                                    setFieldValue(`rooms.${roomIndex}.vhes.${indexVhe}.vhe_facility_types.${item.value}`, e.target.checked)\n                                                                                                }}\n                                                                                                name={`rooms.${roomIndex}.vhes.${indexVhe}.vhe_facility_types.${item.value}`}\n                                                                                            />}\n                                                                                        label={item.label}\n                                                                                    />\n                                                                                ))}\n                                                                            </FormGroup>\n                                                                        </FormGroup>\n                                                                    </div>\n                                                                </Carousel.Item>\n                                                            ))}\n                                                        </Carousel>\n                                                    )}\n                                                </FieldArray>\n                                            </TabPanel>\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' variant='contained' onClick={previewStep}>\n                            Previous\n                        </Button>\n\n                        {/* NEXT */}\n                        <Button type='submit' color='primary' variant='contained'>\n                            Next\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default LivingPlacesInformations","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/ResidenceInformations.js",["483"],"import React from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup} from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport residenceFacilities from '../../Json/ResidenceFacilities'\n\nconst validationSchema = Yup.object({\n    residence: Yup.object({\n        house_number: Yup.number().integer().required('test'),\n        floor: Yup.number().integer().required('test'),\n        rental_permit: Yup.boolean().required('test'),\n        visible_on_platform: Yup.boolean().required('test'),\n        snf_certificate_approved: Yup.boolean().required('test'),\n        akf_certificate_approved: Yup.boolean().required('test'),\n        number_rooms: Yup.number().integer().required('test'),\n        number_rooms_with_vhes: Yup.number().integer().required('test')\n    })\n})\n\nconst ResidenceInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 3\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const formik = useFormik({\n        initialValues: data,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            setValues(data)\n            LivingPlaceRegistrationTimelineState.step = 4\n            navigate('/living_place_registration/floorplan_informations')\n            console.log(data)\n        }\n    })\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 2\n        navigate('/living_place_registration/complex_informations')\n    }\n\n    return (\n        <>\n        <LivingPlaceRegistrationTimeline />\n\n        <h5>Residence informations</h5>\n\n            <form onSubmit={formik.handleSubmit} className='form_living_place_register'>\n\n                <div id='complexInfos__div'>\n                    <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                    <p className='p-medium' style={{marginTop: '-10px'}}>\n                        {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                        {data.complex.street}\n                        {' '}\n                        {data.complex.complex_house_number}\n                        {', '}\n                        {data.complex.postal_code}\n                        {' '}\n                        {data.complex.city}\n                        {' ('}\n                        {data.complex.country}\n                        {')'}\n                    </p>\n                </div>\n\n                {/* HOUSE NUMBER */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                <TextField\n                    name='residence.house_number'\n                    value={formik.values.residence.house_number}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number'))}\n                    helperText={getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')}\n                />\n\n                {/* HOUSE NUMBER EXTENSION */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                <TextField\n                    name='residence.house_number_extension'\n                    value={formik.values.residence.house_number_extension}\n                    onChange={formik.handleChange}\n                />\n\n                {/* FLOOR */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                <TextField\n                    name='residence.floor'\n                    value={formik.values.residence.floor}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.floor') && Boolean(getIn(formik.errors, 'residence.floor'))}\n                    helperText={getIn(formik.touched, 'residence.floor') && getIn(formik.errors, 'residence.floor')}\n                />\n\n                {/* RENTAL PERMIT */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>Rental permit?</FormLabel>\n                    <RadioGroup\n                        name='residence.rental_permit'\n                        value={formik.values.residence.rental_permit}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.rental_permit') && Boolean(getIn(formik.errors, 'residence.rental_permit'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.rental_permit') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.rental_permit')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* ALWAYS VISIBLE */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>Always visible?</FormLabel>\n                    <RadioGroup\n                        name='residence.visible_on_platform'\n                        value={formik.values.residence.visible_on_platform}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.visible_on_platform') && Boolean(getIn(formik.errors, 'residence.visible_on_platform'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.visible_on_platform') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.visible_on_platform')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* SNF CERTIFICATE */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                    <RadioGroup\n                        name='residence.snf_certificate_approved'\n                        value={formik.values.residence.snf_certificate_approved}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.snf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.snf_certificate_approved'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.snf_certificate_approved') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.snf_certificate_approved')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* AKF CERTIFICATE */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                    <RadioGroup\n                        name='residence.akf_certificate_approved'\n                        value={formik.values.residence.akf_certificate_approved}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.akf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.akf_certificate_approved'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.akf_certificate_approved') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.akf_certificate_approved')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* NUMBER OF ROOMS */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of rooms</FormLabel>\n                <TextField\n                    name='residence.number_rooms'\n                    value={formik.values.residence.number_rooms}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.number_rooms') && Boolean(getIn(formik.errors, 'residence.number_rooms'))}\n                    helperText={getIn(formik.touched, 'residence.number_rooms') && getIn(formik.errors, 'residence.number_rooms')}\n                />\n\n                {/* NUMBER OF ROOMS WITH LIVING PLACES */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>... with living place</FormLabel>\n                <TextField\n                    name='residence.number_rooms_with_vhes'\n                    value={formik.values.residence.number_rooms_with_vhes}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.number_rooms_with_vhes') && Boolean(getIn(formik.errors, 'residence.number_rooms_with_vhes'))}\n                    helperText={getIn(formik.touched, 'residence.number_rooms_with_vhes') && getIn(formik.errors, 'residence.number_rooms_with_vhes')}\n                />\n\n                <FormGroup>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                    <FormGroup>\n                        {residenceFacilities.map((item, index) => (\n                            <FormControlLabel key={index}\n                                control={\n                                    <Checkbox\n                                        onChange={(e) => {\n                                            formik.setFieldValue(`residence.complex_facility_type.${item.value}`, e.target.checked)\n                                        }}\n                                        name={`complex.complex_facility_type.${item.value}`}\n                                    />}\n                                label={item.label}\n                            />\n                        ))}\n                    </FormGroup>\n                </FormGroup>\n\n                {/* PREVIEW */}\n                <Button variant='contained' type='submit' onClick={previewStep}>\n                    Previous\n                </Button>\n                \n                {/* NEXT */}\n                <Button color='primary' variant='contained' type='submit'>\n                    Next\n                </Button>\n            </form>\n        </>\n    )\n}\n\nexport default ResidenceInformations\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/SomeQuestions.js",["484","485","486","487"],"import React, { useState, useEffect } from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport axios from 'axios'\n\nimport { Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, MenuItem, Select } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport complexNames from '../../Json/ComplexNames'\nimport residenceTypes from '../../Json/ResidenceTypes'\nimport livingPlaceTypes from '../../Json/LivingPlaceTypes'\n\nimport '../../Styles/Pages/LivingPlaceRegistration.scss'\n\nconst validationSchema = Yup.object({\n    introduction: Yup.object({\n        part_of_complex: Yup.boolean(),\n        is_existing_complex: Yup.boolean().when('part_of_complex', {\n            is: true,\n            then: Yup.boolean().required('test')\n        }),\n        existing_complex_name: Yup.number().when('is_existing_complex', {\n            is: true,\n            then: Yup.number().required('test')\n        }),\n        residence_type: Yup.number().required('A living place type is madatory'),\n        vhe_type: Yup.number().required('A living place type is madatory')\n    })\n})\n\nconst SomeQuestions = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 1\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const formik = useFormik({\n        initialValues: data,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            setValues(data)\n            navigate('/living_place_registration/complex_informations')\n            console.log(data)\n        }\n    })\n\n    /* const[complexNames, setComplexNames] = useState([])\n      \n    const fetchComplexNames = () => {\n        axios.get(process.env.REACT_APP_URL + 'vhe/complexname').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setComplexNames(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    useEffect(() => {\n        fetchComplexNames()\n    }, [])\n\n    if(!complexNames) return null */\n\n    return (\n        <>\n            <form onSubmit={formik.handleSubmit} className='form_living_place_register'>\n                \n                <LivingPlaceRegistrationTimeline />\n\n                <h5>Questions about the residence</h5>\n\n                {/* PART OF A COMPLEX */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>Is the residence part of a complex?</FormLabel>\n                    <RadioGroup\n                        name='introduction.part_of_complex'\n                        value={formik.values.introduction.part_of_complex}\n                        onChange={formik.handleChange}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='True'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='False'\n                        />\n                    </RadioGroup>\n                </FormControl>\n\n                {/* EXISTING COMPLEX */}\n                {formik.values.introduction.part_of_complex === 'true' && (\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Does it already exist in the platform?</FormLabel>\n                        <RadioGroup\n                            name='introduction.is_existing_complex'\n                            value={formik.values.introduction.is_existing_complex}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'introduction.is_existing_complex') && Boolean(getIn(formik.errors, 'introduction.is_existing_complex'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='True'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='False'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'introduction.is_existing_complex') && (\n                            <div>\n                                {getIn(formik.errors, 'introduction.is_existing_complex')}\n                            </div>\n                        )}\n                    </FormControl>\n                )}\n            \n                {/* EXISTING COMPLEX NAME */}\n                {formik.values.introduction.part_of_complex === 'true' && formik.values.introduction.is_existing_complex === 'true' && (\n                    <FormControl>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Choose a complex</FormLabel>\n                        <Select\n                            name='introduction.existing_complex_name'\n                            value={formik.values.introduction.existing_complex_name}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'introduction.existing_complex_name') && Boolean(getIn(formik.errors, 'introduction.existing_complex_name'))}\n                        >\n                            <MenuItem value=''>Choose a complex name</MenuItem>\n                            {complexNames.map((item, index) => (\n                                <MenuItem key={index} value={item.id}>{item.complex_name}</MenuItem>\n                            ))}\n                        </Select>\n                        {getIn(formik.touched, 'introduction.existing_complex_name') && (\n                            <div>\n                                {getIn(formik.errors, 'introduction.existing_complex_name')}\n                            </div>\n                        )}\n                    </FormControl>\n                )}\n            \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Residence type</FormLabel>\n                    <Select\n                        name='introduction.residence_type'\n                        value={formik.values.introduction.residence_type}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'introduction.residence_type') && Boolean(getIn(formik.errors, 'introduction.residence_type'))}\n                    >\n                        <MenuItem value=''>Choose a residence type</MenuItem>\n                        {residenceTypes.map((item, index) => (\n                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n                    {getIn(formik.touched, 'introduction.residence_type') && (\n                        <div>\n                            {getIn(formik.errors, 'introduction.residence_type')}\n                        </div>\n                    )}\n                </FormControl>\n            \n                {/* LIVING PLACE TYPE */}\n                <FormControl>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type</FormLabel>\n                    <Select\n                        name='introduction.vhe_type'\n                        value={formik.values.introduction.vhe_type}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'introduction.vhe_type') && Boolean(getIn(formik.errors, 'introduction.vhe_type'))}\n                    >\n                        <MenuItem value=''>Choose a living place type</MenuItem>\n                        {livingPlaceTypes.map((item, index) => (\n                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                        ))}\n                    </Select>\n                    {getIn(formik.touched, 'introduction.vhe_type') && (\n                        <div>\n                            {getIn(formik.errors, 'introduction.vhe_type')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* NEXT */}\n                <Button color='primary' variant='contained' type='submit'>\n                    Next\n                </Button>\n            </form>\n        </>\n    )\n}\n\nexport default SomeQuestions\n","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/RoomsInformations.js",["488"],"import React, { useState, useEffect } from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Button, Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport roomTypes from '../../Json/RoomTypes'\nimport roomFacilities from '../../Json/RoomFacilities'\n\nlet initialValues = {\n    rooms: ''\n}\n\nlet roomsArray = []\n\nconst room = {\n    room_type: '',\n    room_number: '',\n    floor: '',\n    dimension_m2: '',\n    coliving_allowed: '',\n    number_of_living_places: '',\n    room_facility_types:  {\n        wardrobe: '',\n        sink: '',\n        working_space: '',\n        fridge: '',\n        built_in_wardrobe: ''\n    },\n    vhes: []\n}\n\nconst validationSchema = Yup.object().shape({\n    rooms: Yup.array().of(\n        Yup.object().shape({\n            room_type: Yup.string().required('Test'),\n            room_number: Yup.number().required('Test'),\n            floor: Yup.number().required('Test'),\n            dimension_m2: Yup.number().required('Test'),\n            coliving_allowed: Yup.boolean().required('Test'),\n            number_of_living_places: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst RoomsInformations = () => {\n\n    const [roomsArrayCreated, setRoomsArrayCreated] = useState(false)\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    LivingPlaceRegistrationTimelineState.maxStep = 5\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 4\n        navigate('/living_place_registration/floorplan_informations')\n    }\n\n    const numberOfRooms = parseInt(data.residence.number_rooms_with_vhes)\n    \n    const setRoomsArray = (numberOfRooms) => {\n        for (let i = 0; i < numberOfRooms; i++) {\n            roomsArray.push(room)\n        }\n    }\n\n    useEffect(() => {\n        setRoomsArray(numberOfRooms)\n        setRoomsArrayCreated(true)\n    }, [numberOfRooms])\n\n    initialValues.rooms = roomsArray\n\n    if(!roomsArrayCreated) return null\n\n    return (\n        <>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Rooms informations</h5>\n\n            <div id='complexInfos__div'>\n                <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                <p className='p-medium' style={{marginTop: '-10px'}}>\n                    {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                    {data.complex.street}\n                    {' '}\n                    {data.complex.complex_house_number}\n                    {', '}\n                    {data.complex.postal_code}\n                    {' '}\n                    {data.complex.city}\n                    {' ('}\n                    {data.complex.country}\n                    {')'}\n                </p>\n            </div>\n\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    setValues(data)\n                    LivingPlaceRegistrationTimelineState.step = 6\n                    navigate('/living_place_registration/living_places_informations')\n                    console.log(data)\n                }}\n            >\n                {({ values, handleChange, setFieldValue }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push, touched, errors }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label={`Room ${index + 1}`} {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, roomIndex) => (\n                                            <TabPanel value={value} index={roomIndex}>\n            \n                                                {/* LIVING PLACE TYPE */}\n                                                <div>\n                                                    <FormControl>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type {roomIndex}</FormLabel>\n                                                        <Select\n                                                            name={`rooms.${roomIndex}.room_type`}\n                                                            value={room.room_type}\n                                                            onChange={handleChange}\n                                                        >\n                                                            <MenuItem value=''>Choose a room type</MenuItem>\n                                                            {roomTypes.map((item, index) => (\n                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                            ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                    <ErrorMessage name={`rooms.${roomIndex}.room_type`} />\n                                                </div>\n\n                                                {/* ROOM NUMBER */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Room number</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${roomIndex}.room_number`}\n                                                        value={room.room_number}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${roomIndex}.room_number`} />\n                                                </div>\n\n                                                {/* FLOOR */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${roomIndex}.floor`}\n                                                        value={room.floor}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${roomIndex}.floor`} />\n                                                </div>\n\n                                                {/* DIMENSION M2 */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Dimension in m2</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${roomIndex}.dimension_m2`}\n                                                        value={room.dimension_m2}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${roomIndex}.dimension_m2`} />\n                                                </div>\n\n                                                {/* COLIVING ALLOWED */}\n                                                <div>\n                                                    <FormControl component='fieldset'>\n                                                        <FormLabel component='legend' style={{ color: 'black'}}>Coliving allowed</FormLabel>\n                                                        <RadioGroup\n                                                            name={`rooms.${roomIndex}.coliving_allowed`}\n                                                            value={room.coliving_allowed}\n                                                            onChange={handleChange}\n                                                        >\n                                                            <FormControlLabel\n                                                                value='true'\n                                                                control={<Radio />}\n                                                                label='True'\n                                                            />\n                                                            <FormControlLabel\n                                                                value='false'\n                                                                control={<Radio />}\n                                                                label='False'\n                                                            />\n                                                        </RadioGroup>\n                                                    </FormControl>\n                                                    <ErrorMessage name={`rooms.${roomIndex}.coliving_allowed`} />\n                                                </div>\n\n                                                {/* NUMBER OF LIVING PLACES */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of living places</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${roomIndex}.number_of_living_places`}\n                                                        value={room.number_of_living_places}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${roomIndex}.number_of_living_places`} />\n                                                </div>\n\n                                                {/* FACILITY TYPES */}\n                                                <div>\n                                                    <FormGroup>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                        <FormGroup>\n                                                            {roomFacilities.map((item, index) => (\n                                                                <FormControlLabel key={index}\n                                                                control={\n                                                                    <Checkbox\n                                                                    onChange={(e) => {\n                                                                            setFieldValue(`rooms.${roomIndex}.room_facility_types.${item.value}`, e.target.checked)\n                                                                        }}\n                                                                        name={`rooms.${roomIndex}.room_facility_types.${item.value}`}\n                                                                    />}\n                                                                    label={item.label}\n                                                                />\n                                                            ))}\n                                                        </FormGroup>\n                                                    </FormGroup>\n                                                </div>\n                                            </TabPanel>\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' variant='contained' onClick={previewStep}>\n                            Previous\n                        </Button>\n\n                        {/* NEXT */}\n                        <Button type='submit' color='primary' variant='contained'>\n                            Next\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default RoomsInformations","/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/LivingPlaceRegistrationContext.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/FloorplanInformations.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceInformations.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistrationTimeline.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/RoomInformations.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/InformationsSent.js",[],"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/Images.js",[],{"ruleId":"489","severity":1,"message":"490","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":30},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"493","replacedBy":"497"},{"ruleId":"495","replacedBy":"498"},{"ruleId":"493","replacedBy":"499"},{"ruleId":"495","replacedBy":"500"},{"ruleId":"489","severity":1,"message":"501","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":14},{"ruleId":"489","severity":1,"message":"502","line":14,"column":13,"nodeType":"491","messageId":"492","endLine":14,"endColumn":26},{"ruleId":"489","severity":1,"message":"503","line":30,"column":11,"nodeType":"491","messageId":"492","endLine":30,"endColumn":23},{"ruleId":"489","severity":1,"message":"504","line":16,"column":8,"nodeType":"491","messageId":"492","endLine":16,"endColumn":18},{"ruleId":"489","severity":1,"message":"505","line":17,"column":10,"nodeType":"491","messageId":"492","endLine":17,"endColumn":14},{"ruleId":"489","severity":1,"message":"506","line":26,"column":10,"nodeType":"491","messageId":"492","endLine":26,"endColumn":13},{"ruleId":"489","severity":1,"message":"502","line":30,"column":13,"nodeType":"491","messageId":"492","endLine":30,"endColumn":26},{"ruleId":"489","severity":1,"message":"507","line":228,"column":7,"nodeType":"491","messageId":"492","endLine":228,"endColumn":31},{"ruleId":"489","severity":1,"message":"508","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":13},{"ruleId":"489","severity":1,"message":"509","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":21},{"ruleId":"489","severity":1,"message":"510","line":7,"column":13,"nodeType":"491","messageId":"492","endLine":7,"endColumn":16},{"ruleId":"489","severity":1,"message":"502","line":28,"column":13,"nodeType":"491","messageId":"492","endLine":28,"endColumn":26},{"ruleId":"489","severity":1,"message":"511","line":415,"column":7,"nodeType":"491","messageId":"492","endLine":415,"endColumn":21},{"ruleId":"489","severity":1,"message":"512","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"513","line":1,"column":27,"nodeType":"491","messageId":"492","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"509","line":4,"column":10,"nodeType":"491","messageId":"492","endLine":4,"endColumn":21},{"ruleId":"489","severity":1,"message":"510","line":5,"column":13,"nodeType":"491","messageId":"492","endLine":5,"endColumn":16},{"ruleId":"489","severity":1,"message":"514","line":83,"column":24,"nodeType":"491","messageId":"492","endLine":83,"endColumn":28},{"ruleId":"489","severity":1,"message":"515","line":85,"column":37,"nodeType":"491","messageId":"492","endLine":85,"endColumn":43},{"ruleId":"489","severity":1,"message":"514","line":66,"column":24,"nodeType":"491","messageId":"492","endLine":66,"endColumn":28},{"ruleId":"489","severity":1,"message":"516","line":68,"column":13,"nodeType":"491","messageId":"492","endLine":68,"endColumn":21},{"ruleId":"489","severity":1,"message":"515","line":68,"column":37,"nodeType":"491","messageId":"492","endLine":68,"endColumn":43},{"ruleId":"489","severity":1,"message":"516","line":72,"column":13,"nodeType":"491","messageId":"492","endLine":72,"endColumn":21},{"ruleId":"489","severity":1,"message":"515","line":72,"column":37,"nodeType":"491","messageId":"492","endLine":72,"endColumn":43},{"ruleId":"489","severity":1,"message":"517","line":2,"column":8,"nodeType":"491","messageId":"492","endLine":2,"endColumn":16},{"ruleId":"489","severity":1,"message":"518","line":16,"column":7,"nodeType":"491","messageId":"492","endLine":16,"endColumn":23},{"ruleId":"489","severity":1,"message":"518","line":19,"column":7,"nodeType":"491","messageId":"492","endLine":19,"endColumn":23},{"ruleId":"489","severity":1,"message":"518","line":53,"column":7,"nodeType":"491","messageId":"492","endLine":53,"endColumn":23},{"ruleId":"489","severity":1,"message":"518","line":17,"column":7,"nodeType":"491","messageId":"492","endLine":17,"endColumn":23},{"ruleId":"489","severity":1,"message":"512","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"513","line":1,"column":27,"nodeType":"491","messageId":"492","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"508","line":8,"column":8,"nodeType":"491","messageId":"492","endLine":8,"endColumn":13},{"ruleId":"489","severity":1,"message":"518","line":23,"column":7,"nodeType":"491","messageId":"492","endLine":23,"endColumn":23},{"ruleId":"489","severity":1,"message":"518","line":42,"column":7,"nodeType":"491","messageId":"492","endLine":42,"endColumn":23},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["519"],"no-negated-in-lhs",["520"],["519"],["520"],["519"],["520"],"'Header' is defined but never used.","'REACT_APP_URL' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'CancelIcon' is defined but never used.","'blue' is defined but never used.","'Box' is defined but never used.","'existingComplexes__array' is assigned a value but never used.","'axios' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'timeFieldStyle' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","'errors' is assigned a value but never used.","'register' is assigned a value but never used.","'ReactDOM' is defined but never used.","'validationSchema' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]