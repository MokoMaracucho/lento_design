{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/ResidenceInformations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup } from '@mui/material';\nimport { useData } from '../../Context/LivingPlaceRegistrationContext';\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index';\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState';\nimport residenceFacilities from '../../Json/ResidenceFacilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  residence: Yup.object({\n    house_number: Yup.number().integer().required('test'),\n    floor: Yup.number().integer().required('test'),\n    rental_permit: Yup.boolean().required('test'),\n    visible_on_platform: Yup.boolean().required('test'),\n    snf_certificate_approved: Yup.boolean().required('test'),\n    akf_certificate_approved: Yup.boolean().required('test'),\n    number_rooms: Yup.number().integer().required('test'),\n    number_rooms_with_vhes: Yup.number().integer().required('test')\n  })\n});\n\nconst ResidenceInformations = () => {\n  _s();\n\n  LivingPlaceRegistrationTimelineState.maxStep = 3;\n  const {\n    setValues,\n    data\n  } = useData();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: data,\n\n    /* validationSchema: validationSchema, */\n    onSubmit: data => {\n      navigate('/living_place_registration/floorplan_informations');\n      setValues(data);\n      console.log(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"form_living_place_register\",\n      children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Residence informations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"complexInfos__div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-large blue_COLOR\",\n          style: {\n            marginTop: '10px'\n          },\n          children: data.complex_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-medium\",\n          style: {\n            marginTop: '-10px'\n          },\n          children: [data.street, ' ', data.complex_house_number, ', ', data.postal_code, ' ', data.city, ' (', data.country, ')']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        style: {\n          color: 'black',\n          marginBottom: '10px'\n        },\n        children: \"House number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"residence.house_number\",\n        value: formik.values.residence.house_number,\n        onChange: formik.handleChange,\n        error: getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number')),\n        helperText: getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        style: {\n          color: 'black',\n          marginBottom: '10px'\n        },\n        children: \"House number extension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"residence.house_number_extension\",\n        value: formik.values.residence.house_number_extension,\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        style: {\n          color: 'black',\n          marginBottom: '10px'\n        },\n        children: \"Floor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"residence.floor\",\n        value: formik.values.residence.floor,\n        onChange: formik.handleChange,\n        error: getIn(formik.touched, 'residence.floor') && Boolean(getIn(formik.errors, 'residence.floor')),\n        helperText: getIn(formik.touched, 'residence.floor') && getIn(formik.errors, 'residence.floor')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black'\n          },\n          children: \"Rental permit?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: \"residence.rental_permit\",\n          value: formik.values.residence.rental_permit,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.rental_permit') && Boolean(getIn(formik.errors, 'residence.rental_permit')),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"true\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 38\n            }, this),\n            label: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"false\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 38\n            }, this),\n            label: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), getIn(formik.touched, 'residence.rental_permit') && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getIn(formik.errors, 'residence.rental_permit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black'\n          },\n          children: \"Always visible?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: \"residence.visible_on_platform\",\n          value: formik.values.residence.visible_on_platform,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.visible_on_platform') && Boolean(getIn(formik.errors, 'residence.visible_on_platform')),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"true\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 38\n            }, this),\n            label: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"false\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 38\n            }, this),\n            label: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), getIn(formik.touched, 'residence.visible_on_platform') && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getIn(formik.errors, 'residence.visible_on_platform')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black'\n          },\n          children: \"SNF certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: \"residence.snf_certificate_approved\",\n          value: formik.values.residence.snf_certificate_approved,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.snf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.snf_certificate_approved')),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"true\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 38\n            }, this),\n            label: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"false\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 38\n            }, this),\n            label: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), getIn(formik.touched, 'residence.snf_certificate_approved') && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getIn(formik.errors, 'residence.snf_certificate_approved')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black'\n          },\n          children: \"SNF certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: \"residence.akf_certificate_approved\",\n          value: formik.values.residence.akf_certificate_approved,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.akf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.akf_certificate_approved')),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"true\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 38\n            }, this),\n            label: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"false\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 38\n            }, this),\n            label: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), getIn(formik.touched, 'residence.akf_certificate_approved') && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getIn(formik.errors, 'residence.akf_certificate_approved')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        style: {\n          color: 'black',\n          marginBottom: '10px'\n        },\n        children: \"Number of rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"residence.number_rooms\",\n        value: formik.values.residence.number_rooms,\n        onChange: formik.handleChange,\n        error: getIn(formik.touched, 'residence.number_rooms') && Boolean(getIn(formik.errors, 'residence.number_rooms')),\n        helperText: getIn(formik.touched, 'residence.number_rooms') && getIn(formik.errors, 'residence.number_rooms')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        style: {\n          color: 'black',\n          marginBottom: '10px'\n        },\n        children: \"... with living place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"residence.number_rooms_with_vhes\",\n        value: formik.values.residence.number_rooms_with_vhes,\n        onChange: formik.handleChange,\n        error: getIn(formik.touched, 'residence.number_rooms_with_vhes') && Boolean(getIn(formik.errors, 'residence.number_rooms_with_vhes')),\n        helperText: getIn(formik.touched, 'residence.number_rooms_with_vhes') && getIn(formik.errors, 'residence.number_rooms_with_vhes')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Facility types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: residenceFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            name: `residence.residence_facility_type.${item.value}`,\n            onChange: formik.handleChange,\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 156\n            }, this),\n            label: item.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResidenceInformations, \"GydElsH8YDI/sr+ziwYGTjYC4Yo=\", false, function () {\n  return [useData, useNavigate, useFormik];\n});\n\n_c = ResidenceInformations;\nexport default ResidenceInformations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidenceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/ResidenceInformations.js"],"names":["React","useFormik","getIn","Yup","useNavigate","Button","FormLabel","TextField","FormControl","FormGroup","FormControlLabel","Checkbox","Radio","RadioGroup","useData","LivingPlaceRegistrationTimeline","LivingPlaceRegistrationTimelineState","residenceFacilities","validationSchema","object","residence","house_number","number","integer","required","floor","rental_permit","boolean","visible_on_platform","snf_certificate_approved","akf_certificate_approved","number_rooms","number_rooms_with_vhes","ResidenceInformations","maxStep","setValues","data","navigate","formik","initialValues","onSubmit","console","log","handleSubmit","marginTop","complex_name","street","complex_house_number","postal_code","city","country","color","marginBottom","values","handleChange","touched","Boolean","errors","house_number_extension","map","item","index","value","label"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup} from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport residenceFacilities from '../../Json/ResidenceFacilities'\n\nconst validationSchema = Yup.object({\n    residence: Yup.object({\n        house_number: Yup.number().integer().required('test'),\n        floor: Yup.number().integer().required('test'),\n        rental_permit: Yup.boolean().required('test'),\n        visible_on_platform: Yup.boolean().required('test'),\n        snf_certificate_approved: Yup.boolean().required('test'),\n        akf_certificate_approved: Yup.boolean().required('test'),\n        number_rooms: Yup.number().integer().required('test'),\n        number_rooms_with_vhes: Yup.number().integer().required('test')\n    })\n})\n\nconst ResidenceInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 3\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const formik = useFormik({\n        initialValues: data,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            navigate('/living_place_registration/floorplan_informations')\n            setValues(data)\n            console.log(data)\n        }\n    })\n\n    return (\n        <>\n            <form onSubmit={formik.handleSubmit} className='form_living_place_register'>\n\n                <LivingPlaceRegistrationTimeline />\n\n                <h5>Residence informations</h5>\n\n                <div id='complexInfos__div'>\n                    <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex_name}</p>\n                    <p className='p-medium' style={{marginTop: '-10px'}}>\n                        {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                        {data.street}\n                        {' '}\n                        {data.complex_house_number}\n                        {', '}\n                        {data.postal_code}\n                        {' '}\n                        {data.city}\n                        {' ('}\n                        {data.country}\n                        {')'}\n                    </p>\n                </div>\n\n                {/* HOUSE NUMBER */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                <TextField\n                    name='residence.house_number'\n                    value={formik.values.residence.house_number}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number'))}\n                    helperText={getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')}\n                />\n\n                {/* HOUSE NUMBER EXTENSION */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                <TextField\n                    name='residence.house_number_extension'\n                    value={formik.values.residence.house_number_extension}\n                    onChange={formik.handleChange}\n                />\n\n                {/* FLOOR */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                <TextField\n                    name='residence.floor'\n                    value={formik.values.residence.floor}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.floor') && Boolean(getIn(formik.errors, 'residence.floor'))}\n                    helperText={getIn(formik.touched, 'residence.floor') && getIn(formik.errors, 'residence.floor')}\n                />\n\n                {/* RENTAL PERMIT */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>Rental permit?</FormLabel>\n                    <RadioGroup\n                        name='residence.rental_permit'\n                        value={formik.values.residence.rental_permit}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.rental_permit') && Boolean(getIn(formik.errors, 'residence.rental_permit'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.rental_permit') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.rental_permit')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* ALWAYS VISIBLE */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>Always visible?</FormLabel>\n                    <RadioGroup\n                        name='residence.visible_on_platform'\n                        value={formik.values.residence.visible_on_platform}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.visible_on_platform') && Boolean(getIn(formik.errors, 'residence.visible_on_platform'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.visible_on_platform') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.visible_on_platform')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* SNF CERTIFICATE */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                    <RadioGroup\n                        name='residence.snf_certificate_approved'\n                        value={formik.values.residence.snf_certificate_approved}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.snf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.snf_certificate_approved'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.snf_certificate_approved') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.snf_certificate_approved')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* AKF CERTIFICATE */}\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                    <RadioGroup\n                        name='residence.akf_certificate_approved'\n                        value={formik.values.residence.akf_certificate_approved}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.akf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.akf_certificate_approved'))}\n                    >\n                        <FormControlLabel\n                            value='true'\n                            control={<Radio />}\n                            label='Yes'\n                        />\n                        <FormControlLabel\n                            value='false'\n                            control={<Radio />}\n                            label='No'\n                        />\n                    </RadioGroup>\n                    {getIn(formik.touched, 'residence.akf_certificate_approved') && (\n                        <div>\n                            {getIn(formik.errors, 'residence.akf_certificate_approved')}\n                        </div>\n                    )}\n                </FormControl>\n\n                {/* NUMBER OF ROOMS */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of rooms</FormLabel>\n                <TextField\n                    name='residence.number_rooms'\n                    value={formik.values.residence.number_rooms}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.number_rooms') && Boolean(getIn(formik.errors, 'residence.number_rooms'))}\n                    helperText={getIn(formik.touched, 'residence.number_rooms') && getIn(formik.errors, 'residence.number_rooms')}\n                />\n\n                {/* NUMBER OF ROOMS WITH LIVING PLACES */}\n                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>... with living place</FormLabel>\n                <TextField\n                    name='residence.number_rooms_with_vhes'\n                    value={formik.values.residence.number_rooms_with_vhes}\n                    onChange={formik.handleChange}\n                    error={getIn(formik.touched, 'residence.number_rooms_with_vhes') && Boolean(getIn(formik.errors, 'residence.number_rooms_with_vhes'))}\n                    helperText={getIn(formik.touched, 'residence.number_rooms_with_vhes') && getIn(formik.errors, 'residence.number_rooms_with_vhes')}\n                />\n\n                <FormGroup>\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                    <FormGroup>\n                        {residenceFacilities.map((item, index) => (\n                            <FormControlLabel key={index} name={`residence.residence_facility_type.${item.value}`} onChange={formik.handleChange} control={<Checkbox />}label={item.label} />\n                        ))}\n                    </FormGroup>\n                </FormGroup>\n                \n                <Button color='primary' variant='contained' fullWidth type='submit'>\n                    Submit\n                </Button>\n            </form>\n        </>\n    )\n}\n\nexport default ResidenceInformations\n"]},"metadata":{},"sourceType":"module"}