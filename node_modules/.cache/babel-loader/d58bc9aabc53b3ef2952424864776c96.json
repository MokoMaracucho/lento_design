{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, FieldArray } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField, FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport maximumStayDuration from '../../Json/MaximumStayDuration';\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering';\nimport serviceCostTerm from '../../Json/ServiceCostTerm';\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialValues = {\n  vhes: ''\n};\nlet vhessArray = [];\nconst room = {\n  room_type: '',\n  room_number: '',\n  floor: '',\n  dimension_m2: '',\n  coliving_allowed: '',\n  number_of_living_places: '',\n  room_facility_type: {\n    wardrobe: '',\n    sink: '',\n    working_space: '',\n    fridge: '',\n    built_in_wardrobe: ''\n  },\n  vhes: []\n};\nconst livingPlace = {\n  max_stay_duration: '',\n  rental_price_term: '',\n  description: '',\n  changeover_time: '',\n  deposit: '',\n  service_costs: '',\n  rentalprice: '',\n  b2b_price: '',\n  b2c_price: '',\n  vhe_facility_types: {\n    welcome_pack: '',\n    bed_sheets: '',\n    towels: '',\n    bike: '',\n    weekly_cleaning: '',\n    final_cleaning: '',\n    kitchen_supplies: '',\n    wifi: '',\n    wifi_television: ''\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst LivingPlaceInformations = props => {\n  _s();\n\n  const [vhesArraysCreated, setVhesArraysCreated] = useState(false);\n  let initialValues = {\n    rooms: ''\n  };\n  let vhesArray = [];\n  let rooms = props.data.rooms;\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n  let numberOfLivingPlaces = [];\n\n  for (let i = 0; i < numberOfRooms; i++) {\n    numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places));\n  }\n\n  const setVhesArrays = (rooms, numberOfRooms, numberOfLivingPlaces) => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      vhesArray = [];\n\n      for (let j = 0; j < numberOfLivingPlaces[i]; j++) {\n        vhesArray.push(livingPlace);\n      }\n\n      rooms[i].vhes = vhesArray;\n    }\n\n    return rooms;\n  };\n\n  useEffect(() => {\n    rooms = setVhesArrays(rooms, numberOfRooms, numberOfLivingPlaces);\n    initialValues.rooms = rooms;\n    console.log(initialValues);\n    setVhesArraysCreated(true);\n  }, [rooms, numberOfRooms, numberOfLivingPlaces]);\n  if (!vhesArraysCreated) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: data => {\n        console.log(data);\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Tabs, {\n                  value: value,\n                  onChange: handleChangeTab,\n                  \"aria-label\": \"basic tabs example\",\n                  centered: true,\n                  children: Array.from(Array(numberOfRooms), (e, index) => {\n                    return /*#__PURE__*/_jsxDEV(Tab, {\n                      label: \"Item One\",\n                      ...a11yProps(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 41\n              }, this), props.data.residence.number_rooms_with_vhes > 0 && rooms.map((room, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n                value: value,\n                index: index,\n                children: /*#__PURE__*/_jsxDEV(Carousel, {\n                  style: {\n                    backgroundColor: 'red'\n                  },\n                  interval: 20,\n                  wrap: false,\n                  children: rooms[index].vhes.map((vhe, indexVhe) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Room index: \", index]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Vhe index: \", indexVhe]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: `rooms.${index}.vhes.${indexVhe}.max_stay_duration`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 69\n                      }, this), indexVhe, /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Maximum stay duration\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(Select\n                        /* name={`rooms.${index}.vhes.${indexVhe}.max_stay_duration`} */\n                        , {\n                          name: vhe.max_stay_duration\n                          /* value={'short_stay'} */\n                          ,\n                          onChange: handleChange\n                          /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                          helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                          ,\n                          children: maximumStayDuration.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: item.value,\n                            children: item.label\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 81\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        component: \"legend\",\n                        style: {\n                          color: 'black',\n                          marginBottom: '10px'\n                        },\n                        children: \"Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `rooms.${index}.vhes.${indexVhe}.description`\n                        /* value={formik.values.complex.complex_name} */\n                        ,\n                        onChange: handleChange\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        component: \"legend\",\n                        style: {\n                          color: 'black',\n                          marginBottom: '10px'\n                        },\n                        children: \"Changeover time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `rooms.${index}.vhes.${indexVhe}.changeover_time`\n                        /* value={formik.values.complex.complex_name} */\n                        ,\n                        onChange: handleChange\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Status at point of registering\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          name: `rooms.${index}.vhes.${indexVhe}.status_at_point_of_registering`\n                          /* value={formik.values.complex.phone_number_landcode} */\n                          ,\n                          onChange: handleChange\n                          /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                          helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                          ,\n                          children: statusAtPointOfRegestering.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: item.value,\n                            children: item.label\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 228,\n                            columnNumber: 81\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        component: \"legend\",\n                        style: {\n                          color: 'black',\n                          marginBottom: '10px'\n                        },\n                        children: \"Deposit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `rooms.${index}.vhes.${indexVhe}.deposit`\n                        /* value={formik.values.complex.complex_name}\n                        onChange={formik.handleChange} */\n\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        component: \"legend\",\n                        style: {\n                          color: 'black',\n                          marginBottom: '10px'\n                        },\n                        children: \"Service cost\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `rooms.${index}.vhes.${indexVhe}.service_cost`\n                        /* value={formik.values.complex.complex_name} */\n                        ,\n                        onChange: handleChange\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        component: \"legend\",\n                        style: {\n                          color: 'black',\n                          marginBottom: '10px'\n                        },\n                        children: \"B2B rental price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `rooms.${index}.vhes.${indexVhe}.b2b_rental_price`\n                        /* value={formik.values.complex.complex_name} */\n                        ,\n                        onChange: handleChange\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                        component: \"legend\",\n                        style: {\n                          color: 'black',\n                          marginBottom: '10px'\n                        },\n                        children: \"B2C rental price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `rooms.${index}.vhes.${indexVhe}.b2c_rental_price`\n                        /* value={formik.values.complex.complex_name} */\n                        ,\n                        onChange: handleChange\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Service cost term\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          name: `rooms.${index}.vhes.${indexVhe}.service_cost_term`\n                          /* value={formik.values.complex.phone_number_landcode} */\n                          ,\n                          onChange: handleChange\n                          /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                          helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                          ,\n                          children: serviceCostTerm.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: item.value,\n                            children: item.label\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 294,\n                            columnNumber: 81\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 286,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Facility types\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                          children: livingPlaceFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                            name: `rooms.${index}.vhes.vhe_facility_type.${item.value}`,\n                            onChange: handleChange,\n                            control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 306,\n                              columnNumber: 205\n                            }, this),\n                            label: item.label\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 81\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 61\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceInformations, \"aq9ilF3yGT8xo0orTE/pxkEPMPA=\");\n\n_c2 = LivingPlaceInformations;\nexport default LivingPlaceInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"LivingPlaceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js"],"names":["React","useState","useEffect","Formik","Form","FieldArray","PropTypes","Box","Tabs","Tab","Typography","FormControl","FormLabel","Select","MenuItem","TextField","FormGroup","FormControlLabel","Checkbox","maximumStayDuration","statusAtPointOfRegestering","serviceCostTerm","livingPlaceFacilities","Carousel","initialValues","vhes","vhessArray","room","room_type","room_number","floor","dimension_m2","coliving_allowed","number_of_living_places","room_facility_type","wardrobe","sink","working_space","fridge","built_in_wardrobe","livingPlace","max_stay_duration","rental_price_term","description","changeover_time","deposit","service_costs","rentalprice","b2b_price","b2c_price","vhe_facility_types","welcome_pack","bed_sheets","towels","bike","weekly_cleaning","final_cleaning","kitchen_supplies","wifi","wifi_television","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","LivingPlaceInformations","vhesArraysCreated","setVhesArraysCreated","rooms","vhesArray","data","setValue","handleChangeTab","event","newValue","numberOfRooms","parseInt","residence","number_rooms_with_vhes","numberOfLivingPlaces","i","push","setVhesArrays","j","console","log","next","values","handleChange","remove","width","borderBottom","borderColor","Array","from","e","map","backgroundColor","vhe","indexVhe","color","marginBottom","item","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Formik, Form, FieldArray } from 'formik'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField, FormGroup, FormControlLabel, Checkbox } from '@mui/material'\n\nimport maximumStayDuration from '../../Json/MaximumStayDuration'\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering'\nimport serviceCostTerm from '../../Json/ServiceCostTerm'\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Carousel from 'react-bootstrap/Carousel'\n\nlet initialValues = {\n    vhes: ''\n}\n\nlet vhessArray = []\n\nconst room = {\n    room_type: '',\n    room_number: '',\n    floor: '',\n    dimension_m2: '',\n    coliving_allowed: '',\n    number_of_living_places: '',\n    room_facility_type:  {\n        wardrobe: '',\n        sink: '',\n        working_space: '',\n        fridge: '',\n        built_in_wardrobe: ''\n    },\n    vhes: []\n}\n\nconst livingPlace = {\n    max_stay_duration: '',\n    rental_price_term: '',\n    description: '',\n    changeover_time: '',\n    deposit: '',\n    service_costs: '',\n    rentalprice: '',\n    b2b_price: '',\n    b2c_price: '',\n    vhe_facility_types: {\n        welcome_pack: '',\n        bed_sheets: '',\n        towels: '',\n        bike: '',\n        weekly_cleaning: '',\n        final_cleaning: '',\n        kitchen_supplies: '',\n        wifi: '',\n        wifi_television: ''\n    }\n}\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceInformations = (props) => {\n\n    const [vhesArraysCreated, setVhesArraysCreated] = useState(false)\n\n    let initialValues = {\n        rooms: ''\n    }\n\n    let vhesArray = []\n\n    let rooms = props.data.rooms\n\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n    \n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    let numberOfLivingPlaces = []\n    for(let i = 0; i < numberOfRooms; i++) {\n        numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places))\n    }\n\n    const setVhesArrays = (rooms, numberOfRooms, numberOfLivingPlaces) => {\n        for(let i = 0; i <numberOfRooms; i++) {\n            vhesArray = []\n            for(let j = 0; j < numberOfLivingPlaces[i]; j++ ){\n                vhesArray.push(livingPlace)\n            }\n            rooms[i].vhes = vhesArray\n        }\n        return rooms\n    }\n\n    useEffect(() => {\n        rooms = setVhesArrays(rooms, numberOfRooms, numberOfLivingPlaces)\n        initialValues.rooms = rooms\n        console.log(initialValues)\n        setVhesArraysCreated(true)\n    }, [rooms, numberOfRooms, numberOfLivingPlaces])\n\n    if(!vhesArraysCreated) return null\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(data) => {\n                    console.log(data)\n                    props.next(data)\n                }}\n            >\n                {({ values, handleChange }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label='Item One' {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {props.data.residence.number_rooms_with_vhes > 0 && rooms.map((room, index) => (\n                                            <TabPanel value={value} index={index}>\n                                                <Carousel style={{ backgroundColor: 'red' }} interval={20} wrap={false}>\n                                                    {rooms[index].vhes.map((vhe, indexVhe) => (\n                                                            <Carousel.Item>\n                                                                <div>\n                                                                    <p>Room index: {index}</p>\n                                                                    <p>Vhe index: {indexVhe}</p>\n                                                                    <p>{`rooms.${index}.vhes.${indexVhe}.max_stay_duration`}</p>\n                                                                    {indexVhe}\n                                                                    {/* MAXIMUM STAY DURATION */}\n                                                                    <FormControl>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Maximum stay duration</FormLabel>\n                                                                        <Select\n                                                                            /* name={`rooms.${index}.vhes.${indexVhe}.max_stay_duration`} */\n                                                                            name={vhe.max_stay_duration}\n                                                                            /* value={'short_stay'} */\n                                                                            onChange={handleChange}\n                                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                        >\n                                                                            {maximumStayDuration.map((item, index) => (\n                                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                            ))}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* DESCRIPTION */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Description</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhes.${indexVhe}.description`}\n                                                                        /* value={formik.values.complex.complex_name} */\n                                                                        onChange={handleChange}\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* CHANGEOVER TIME */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Changeover time</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhes.${indexVhe}.changeover_time`}\n                                                                        /* value={formik.values.complex.complex_name} */\n                                                                        onChange={handleChange}\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* STATUS AT POINT OF REGESTERING */}\n                                                                    <FormControl>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Status at point of registering</FormLabel>\n                                                                        <Select\n                                                                            name={`rooms.${index}.vhes.${indexVhe}.status_at_point_of_registering`}\n                                                                            /* value={formik.values.complex.phone_number_landcode} */\n                                                                            onChange={handleChange}\n                                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                        >\n                                                                            {statusAtPointOfRegestering.map((item, index) => (\n                                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                            ))}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* DEPOSIT */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Deposit</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhes.${indexVhe}.deposit`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* SERVICE COST */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhes.${indexVhe}.service_cost`}\n                                                                        /* value={formik.values.complex.complex_name} */\n                                                                        onChange={handleChange}\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* B2B RENTAL PRICE */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2B rental price</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhes.${indexVhe}.b2b_rental_price`}\n                                                                        /* value={formik.values.complex.complex_name} */\n                                                                        onChange={handleChange}\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* B2C RENTAL PRICE */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2C rental price</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhes.${indexVhe}.b2c_rental_price`}\n                                                                        /* value={formik.values.complex.complex_name} */\n                                                                        onChange={handleChange}\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* SERVICE COST TERM */}\n                                                                    <FormControl>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost term</FormLabel>\n                                                                        <Select\n                                                                            name={`rooms.${index}.vhes.${indexVhe}.service_cost_term`}\n                                                                            /* value={formik.values.complex.phone_number_landcode} */\n                                                                            onChange={handleChange}\n                                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                        >\n                                                                            {serviceCostTerm.map((item, index) => (\n                                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                            ))}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </div>\n\n                                                                <div>\n\n                                                                    <FormGroup>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                                        <FormGroup>\n                                                                            {livingPlaceFacilities.map((item, index) => (\n                                                                                <FormControlLabel key={index} name={`rooms.${index}.vhes.vhe_facility_type.${item.value}`} onChange={handleChange} control={<Checkbox />}label={item.label} />\n                                                                            ))}\n                                                                        </FormGroup>\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </Carousel.Item>\n                                                        ))}\n                                                </Carousel>\n                                            </TabPanel>\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default LivingPlaceInformations\n"]},"metadata":{},"sourceType":"module"}