{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik1.js\";\nimport React, { Fragment } from 'react';\nimport { Formik, FieldArray } from 'formik';\nimport * as yup from 'yup';\nimport TextInput from './TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formSchema = yup.object().shape({\n  email: yup.string().required().email(),\n  password: yup.string().required(),\n  users: yup.array().of(yup.object().shape({\n    name: yup.string().required()\n  })).min(3).required()\n});\nconst initialValues = {\n  floorplan_informations: [{\n    room: '',\n    floor: '',\n    area: ''\n  }]\n};\n\nconst Formik1 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        initialValues\n      },\n      validationSchema: formSchema,\n      onSubmit: data => console.log(data),\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        touched\n      }) => {\n        console.log(values);\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            name: 'email',\n            placeholder: 'Email...',\n            label: 'Email'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            name: 'password',\n            placeholder: 'Password...',\n            label: 'Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: 'users',\n            children: ({\n              nsert,\n              push,\n              remove\n            }) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [values.users.map((user, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(TextInput, {\n                      name: `users.${index}.name`,\n                      label: `Name - ${index}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 57\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => remove(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => push({\n                    name: ''\n                  }),\n                  children: \"Add new user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this), errors.users && typeof errors.users === 'string' && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: 'error',\n                  children: errors.users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 98\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: 'submit',\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Formik1;\nexport default Formik1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formik1\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik1.js"],"names":["React","Fragment","Formik","FieldArray","yup","TextInput","formSchema","object","shape","email","string","required","password","users","array","of","name","min","initialValues","floorplan_informations","room","floor","area","Formik1","data","console","log","handleSubmit","handleChange","handleBlur","values","errors","touched","nsert","push","remove","map","user","index"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\n\nimport { Formik, FieldArray } from 'formik'\nimport * as yup from 'yup'\n\nimport TextInput from './TextInput'\n\nconst formSchema = yup.object().shape({\n    email: yup.string().required().email(),\n    password: yup.string().required(),\n    users: yup.array().of(yup.object().shape({\n        name: yup.string().required()\n    })).min(3).required()\n})\n\nconst initialValues = {\n  floorplan_informations: [\n    {\n      room: '',\n      floor: '',\n      area: '',\n    },\n  ],\n};\n\nconst Formik1 = () => {\n\n    return (\n        <>\n            <Formik\n                initialValues={{initialValues}}\n                validationSchema={formSchema}\n                onSubmit={( data ) => console.log(data)}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    values,\n                    errors,\n                    touched\n                }) => {\n                    console.log(values)\n                    return (\n                        <form onSubmit={handleSubmit}>\n\n                            <TextInput\n                                name={'email'}\n                                placeholder={'Email...'}\n                                label={'Email'}\n                            />\n\n                            <TextInput\n                                name={'password'}\n                                placeholder={'Password...'}\n                                label={'Password'}\n                            />\n\n                            <FieldArray name={'users'}>\n                                {({ nsert, push, remove}) => {\n                                    return (\n                                        <div>\n                                            {values.users.map((user, index) => (\n                                                <>\n                                                    <Fragment key={index}>\n                                                        <TextInput\n                                                            name={`users.${index}.name`}\n                                                            label={`Name - ${index}`}\n                                                        />\n                                                    </Fragment>\n\n                                                    <button onClick={() => remove(index)}>Remove</button>\n                                                </>\n                                            ))}\n\n                                            <button onClick={() => push({name: ''})}>Add new user</button>\n                                            {errors.users && typeof errors.users === 'string' && <p className={'error'}>{errors.users}</p>}\n                                        </div>\n                                    )\n                                }}\n                            </FieldArray>\n\n                            <button type={'submit'}>Submit</button>\n                        </form>\n                    )\n                }}\n            </Formik>\n        </>\n    )\n}\n\nexport default Formik1\n"]},"metadata":{},"sourceType":"module"}