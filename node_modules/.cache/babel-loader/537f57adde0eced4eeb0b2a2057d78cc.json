{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/FloorplanInformations.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik';\nimport { FormLabel, TextField } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  floorplan: [{\n    floor: '',\n    area: ''\n  }]\n};\n\nconst FloorplanInformations = props => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Invite friends\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: data => {\n      props.next(data);\n    },\n    children: ({\n      values,\n      handleChange\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"floorplan\",\n        children: ({\n          remove,\n          push\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [values.floorplan.length > 0 && values.floorplan.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              style: {\n                color: 'black',\n                marginBottom: '10px'\n              },\n              children: \"Floor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: `floorplan.${index}.floor`,\n              value: room.floor,\n              onChange: handleChange\n              /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n              helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              style: {\n                color: 'black',\n                marginBottom: '10px'\n              },\n              children: \"Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: `floorplan.${index}.area`,\n              value: room.area,\n              onChange: handleChange\n              /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n              helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"secondary\",\n                onClick: () => remove(index),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary\",\n            onClick: () => push({\n              floor: '',\n              area: ''\n            }),\n            children: \"Add room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this)]\n}, void 0, true);\n\n_c = FloorplanInformations;\nexport default FloorplanInformations;\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */\n\nvar _c;\n\n$RefreshReg$(_c, \"FloorplanInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/FloorplanInformations.js"],"names":["React","Formik","Field","Form","ErrorMessage","FieldArray","FormLabel","TextField","axios","initialValues","floorplan","floor","area","FloorplanInformations","props","data","next","values","handleChange","remove","push","length","map","room","index","color","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4CC,UAA5C,QAA8D,QAA9D;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,eAArC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE,CACX;AACEC,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADW;AADO,CAAtB;;AASA,MAAMC,qBAAqB,GAAIC,KAAD,iBAC5B;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEM,QAAC,MAAD;AACI,IAAA,aAAa,EAAEL,aADnB;AAEI,IAAA,QAAQ,EAAGM,IAAD,IAAU;AAChBD,MAAAA,KAAK,CAACE,IAAN,CAAWD,IAAX;AACH,KAJL;AAAA,cAMK,CAAC;AAAEE,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,kBACG,QAAC,IAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,WAAjB;AAAA,kBACK,CAAC;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAD,kBACG;AAAA,qBACKH,MAAM,CAACP,SAAP,CAAiBW,MAAjB,GAA0B,CAA1B,IAA+BJ,MAAM,CAACP,SAAP,CAAiBY,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACjD;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCAGI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAA8B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE,OAAT;AAAkBC,gBAAAA,YAAY,EAAE;AAAhC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,SAAD;AACI,cAAA,IAAI,EAAG,aAAYF,KAAM,QAD7B;AAEI,cAAA,KAAK,EAAED,IAAI,CAACZ,KAFhB;AAGI,cAAA,QAAQ,EAAEO;AACV;AAC5C;;AALwC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAaI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,QAArB;AAA8B,cAAA,KAAK,EAAE;AAAEO,gBAAAA,KAAK,EAAE,OAAT;AAAkBC,gBAAAA,YAAY,EAAE;AAAhC,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAcI,QAAC,SAAD;AACI,cAAA,IAAI,EAAG,aAAYF,KAAM,OAD7B;AAEI,cAAA,KAAK,EAAED,IAAI,CAACX,IAFhB;AAGI,cAAA,QAAQ,EAAEM;AACV;AAC5C;;AALwC;AAAA;AAAA;AAAA;AAAA,oBAdJ,eAsBI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,WAAhC;AAA4C,gBAAA,OAAO,EAAE,MAAMC,MAAM,CAACK,KAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA,aAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA,kBAD4B,CADpC,eA6BI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,WAAhC;AAA4C,YAAA,OAAO,EAAE,MAAMJ,IAAI,CAAC;AAAET,cAAAA,KAAK,EAAE,EAAT;AAAaC,cAAAA,IAAI,EAAE;AAAnB,aAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAoCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UAFN;AAAA,gBADF;;KAAMC,qB;AAqDN,eAAeA,qBAAf;AAEA","sourcesContent":["import React from 'react'\n\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik'\n\nimport { FormLabel, TextField } from '@mui/material'\n\nimport axios from 'axios'\n\nconst initialValues = {\n    floorplan: [\n    {\n      floor: '',\n      area: ''\n    }\n  ]\n}\n\nconst FloorplanInformations = (props) => (\n  <>\n    <h1>Invite friends</h1>\n        <Formik\n            initialValues={initialValues}\n            onSubmit={(data) => {\n                props.next(data)\n            }}\n        >\n            {({ values, handleChange }) => (\n                <Form>\n                    <FieldArray name='floorplan'>\n                        {({ remove, push }) => (\n                            <div>\n                                {values.floorplan.length > 0 && values.floorplan.map((room, index) => (\n                                    <div className='row' key={index}>\n\n                                        {/* FLOOR */}\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                        <TextField\n                                            name={`floorplan.${index}.floor`}\n                                            value={room.floor}\n                                            onChange={handleChange}\n                                            /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                            helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                        />\n\n                                        {/* AREA */}\n                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                                        <TextField\n                                            name={`floorplan.${index}.area`}\n                                            value={room.area}\n                                            onChange={handleChange}\n                                            /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                            helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                        />\n\n                                        <div className='col'>\n                                            <button type='button' className='secondary' onClick={() => remove(index)}>X</button>\n                                        </div>\n                                    </div>\n                                ))}\n                                <button type='button' className='secondary' onClick={() => push({ floor: '', area: '' })}>Add room</button>\n                            </div>\n                        )}\n                    </FieldArray>\n                    <button type='submit'>Submit</button>\n                </Form>\n            )}\n        </Formik>\n    </>\n)\n\nexport default FloorplanInformations\n\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */"]},"metadata":{},"sourceType":"module"}