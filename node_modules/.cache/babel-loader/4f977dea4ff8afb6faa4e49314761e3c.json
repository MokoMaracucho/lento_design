{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst LivingPlaceInformations = props => {\n  _s();\n\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes);\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: data => {\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Tabs, {\n                  value: value,\n                  onChange: handleChangeTab,\n                  \"aria-label\": \"basic tabs example\",\n                  centered: true,\n                  children: Array.from(Array(numberOfRooms), (e, index) => {\n                    return /*#__PURE__*/_jsxDEV(Tab, {\n                      label: \"Item One\",\n                      ...a11yProps(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) =>\n              /*#__PURE__*/\n\n              /* return ( */\n              _jsxDEV(TabPanel, {\n                value: value,\n                index: index,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      style: {\n                        color: 'black',\n                        marginBottom: '10px'\n                      },\n                      children: [\"Living place type \", index]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      name: `rooms.${index}.room_type`,\n                      value: room.room_type,\n                      onChange: handleChange\n                      /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                      helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                      ,\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"\",\n                        children: \"Choose a living place type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 65\n                      }, this), roomTypes.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: item.value,\n                        children: item.label\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 69\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Room number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.room_number`,\n                    value: room.room_number,\n                    onChange: handleChange\n                    /* error={getIn(formik.touched, 'complex.house_number') && Boolean(getIn(formik.errors, 'complex.house_number'))}\n                    helperText={getIn(formik.touched, 'complex.house_number') && getIn(formik.errors, 'complex.house_number')} */\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Floor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.floor`,\n                    value: room.floor,\n                    onChange: handleChange\n                    /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                    helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Dimension in m2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.dimension_m2`,\n                    value: room.dimension_m2,\n                    onChange: handleChange\n                    /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                    helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    component: \"fieldset\",\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      style: {\n                        color: 'black'\n                      },\n                      children: \"Coliving allowed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      name: `rooms.${index}.coliving_allowed`,\n                      value: room.coliving_allowed,\n                      onChange: handleChange,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"true\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 78\n                        }, this),\n                        label: \"True\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"false\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 78\n                        }, this),\n                        label: \"False\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Number of living places\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.number_of_living_places`,\n                    value: room.number_of_living_places,\n                    onChange: handleChange\n                    /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                    helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      style: {\n                        color: 'black',\n                        marginBottom: '10px'\n                      },\n                      children: \"Facility types\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: roomFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        name: `rooms.${index}.room_facility_type.${item.value}`,\n                        onChange: handleChange,\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 189\n                        }, this),\n                        label: item.label\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 69\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 49\n              }, this)\n              /* ) */\n              )]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceInformations, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c2 = LivingPlaceInformations;\nexport default LivingPlaceInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"LivingPlaceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js"],"names":["React","useState","PropTypes","Box","Tabs","Tab","Typography","FormLabel","TextField","FormControl","Select","MenuItem","RadioGroup","FormControlLabel","Radio","FormGroup","Checkbox","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","LivingPlaceInformations","setValue","handleChangeTab","event","newValue","console","log","data","residence","number_rooms_with_vhes","numberOfRooms","parseInt","initialValues","next","values","handleChange","remove","push","width","borderBottom","borderColor","Array","from","e","rooms","map","room","color","marginBottom","room_type","roomTypes","item","label","room_number","floor","dimension_m2","coliving_allowed","number_of_living_places","roomFacilities"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material'\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceInformations = (props) => {\n\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes)\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(data) => {\n                    props.next(data)\n                }}\n            >\n                {({ values, handleChange }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label='Item One' {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => (\n                                            /* return ( */\n                                                <TabPanel value={value} index={index}>\n                \n                                                    {/* LIVING PLACE TYPE */}\n                                                    <div>\n                                                        <FormControl>\n                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type {index}</FormLabel>\n                                                            <Select\n                                                                name={`rooms.${index}.room_type`}\n                                                                value={room.room_type}\n                                                                onChange={handleChange}\n                                                                /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                            >\n                                                                <MenuItem value=''>Choose a living place type</MenuItem>\n                                                                {roomTypes.map((item, index) => (\n                                                                    <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                ))}\n                                                            </Select>\n                                                        </FormControl>\n                                                    </div>\n\n                                                    {/* ROOM NUMBER */}\n                                                    <div>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Room number</FormLabel>\n                                                        <TextField\n                                                            name={`rooms.${index}.room_number`}\n                                                            value={room.room_number}\n                                                            onChange={handleChange}\n                                                            /* error={getIn(formik.touched, 'complex.house_number') && Boolean(getIn(formik.errors, 'complex.house_number'))}\n                                                            helperText={getIn(formik.touched, 'complex.house_number') && getIn(formik.errors, 'complex.house_number')} */\n                                                        />\n                                                    </div>\n\n                                                    {/* FLOOR */}\n                                                    <div>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                                        <TextField\n                                                            name={`rooms.${index}.floor`}\n                                                            value={room.floor}\n                                                            onChange={handleChange}\n                                                            /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                                            helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                                        />\n                                                    </div>\n\n                                                    {/* FLOOR */}\n                                                    <div>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Dimension in m2</FormLabel>\n                                                        <TextField\n                                                            name={`rooms.${index}.dimension_m2`}\n                                                            value={room.dimension_m2}\n                                                            onChange={handleChange}\n                                                            /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                                            helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                                        />\n                                                    </div>\n\n                                                    {/* PART OF A COMPLEX */}\n                                                    <div>\n                                                        <FormControl component='fieldset'>\n                                                            <FormLabel component='legend' style={{ color: 'black'}}>Coliving allowed</FormLabel>\n                                                            <RadioGroup\n                                                                name={`rooms.${index}.coliving_allowed`}\n                                                                value={room.coliving_allowed}\n                                                                onChange={handleChange}\n                                                            >\n                                                                <FormControlLabel\n                                                                    value='true'\n                                                                    control={<Radio />}\n                                                                    label='True'\n                                                                />\n                                                                <FormControlLabel\n                                                                    value='false'\n                                                                    control={<Radio />}\n                                                                    label='False'\n                                                                />\n                                                            </RadioGroup>\n                                                        </FormControl>\n                                                    </div>\n\n                                                    {/* FLOOR */}\n                                                    <div>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of living places</FormLabel>\n                                                        <TextField\n                                                            name={`rooms.${index}.number_of_living_places`}\n                                                            value={room.number_of_living_places}\n                                                            onChange={handleChange}\n                                                            /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                                            helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                                        />\n                                                    </div>\n\n                                                    {/* FACILITY TYPES */}\n                                                    <div>\n                                                        <FormGroup>\n                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                            <FormGroup>\n                                                                {roomFacilities.map((item, index) => (\n                                                                    <FormControlLabel key={index} name={`rooms.${index}.room_facility_type.${item.value}`} onChange={handleChange} control={<Checkbox />}label={item.label} />\n                                                                ))}\n                                                            </FormGroup>\n                                                        </FormGroup>\n                                                    </div>\n                                                </TabPanel>\n                                            /* ) */\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default LivingPlaceInformations\n"]},"metadata":{},"sourceType":"module"}