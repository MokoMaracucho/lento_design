{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/RoomsInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, FieldArray } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem } from '@mui/material';\nimport livingPlaceTypes from '../../Json/LivingPlaceTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialValues = {\n  rooms: ''\n};\nlet roomsArray = [];\nconst room = {\n  room_type: '',\n  room_number: '',\n  floor: '',\n  dimension_m2: '',\n  coliving_allowed: '',\n  room_facility_type: {\n    wardrobe: '',\n    sink: '',\n    working_space: '',\n    fridge: '',\n    built_in_wardrobe: ''\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst RoomsInformations = props => {\n  _s();\n\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes);\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n\n  for (let i = 0; i < numberOfRooms; i++) {\n    roomsArray.push(room);\n  }\n\n  console.log('roomsArray', roomsArray);\n  initialValues.rooms = roomsArray;\n  console.log('initialValues.rooms', initialValues.rooms);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: data => {\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Tabs, {\n                  value: value,\n                  onChange: handleChangeTab,\n                  \"aria-label\": \"basic tabs example\",\n                  centered: true,\n                  children: Array.from(Array(numberOfRooms), (e, index) => {\n                    return /*#__PURE__*/_jsxDEV(Tab, {\n                      label: \"Item One\",\n                      ...a11yProps(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this), props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) =>\n              /*#__PURE__*/\n\n              /* return ( */\n              _jsxDEV(TabPanel, {\n                value: value,\n                index: index,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: [\"Living place type \", index]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    name: `rooms.${index}.room_type`,\n                    value: `rooms.${index}.room_type`,\n                    onChange: handleChange\n                    /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                    helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                    ,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: \"Choose a living place type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 61\n                    }, this), livingPlaceTypes.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item.value,\n                      children: item.label\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 65\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 49\n              }, this)\n              /* ) */\n              )]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RoomsInformations, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c2 = RoomsInformations;\nexport default RoomsInformations;\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"RoomsInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/RoomsInformations.js"],"names":["React","useState","Formik","Form","FieldArray","PropTypes","Box","Tabs","Tab","Typography","FormLabel","TextField","FormControl","Select","MenuItem","livingPlaceTypes","initialValues","rooms","roomsArray","room","room_type","room_number","floor","dimension_m2","coliving_allowed","room_facility_type","wardrobe","sink","working_space","fridge","built_in_wardrobe","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","RoomsInformations","setValue","handleChangeTab","event","newValue","console","log","data","residence","number_rooms_with_vhes","numberOfRooms","parseInt","i","push","next","values","handleChange","remove","width","borderBottom","borderColor","Array","from","e","map","color","marginBottom","item","label"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Formik, Form, FieldArray } from 'formik'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem } from '@mui/material'\n\nimport livingPlaceTypes from '../../Json/LivingPlaceTypes'\n\nlet initialValues = {\n    rooms: ''\n}\n\nlet roomsArray = []\n\nconst room = {\n    room_type: '',\n    room_number: '',\n    floor: '',\n    dimension_m2: '',\n    coliving_allowed: '',\n    room_facility_type:  {\n        wardrobe: '',\n        sink: '',\n        working_space: '',\n        fridge: '',\n        built_in_wardrobe: ''\n    }\n}\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst RoomsInformations = (props) => {\n\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes)\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    \n    for (let i = 0; i < numberOfRooms; i++) {\n        roomsArray.push(room)\n    }\n\n    console.log('roomsArray', roomsArray)\n    initialValues.rooms = roomsArray\n    console.log('initialValues.rooms', initialValues.rooms)\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(data) => {\n                    props.next(data)\n                }}\n            >\n                {({ values, handleChange }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label='Item One' {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => (\n                                            /* return ( */\n                                                <TabPanel value={value} index={index}>\n                \n                                                    {/* LIVING PLACE TYPE */}\n                                                    <FormControl>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type {index}</FormLabel>\n                                                        <Select\n                                                            name={`rooms.${index}.room_type`}\n                                                            value={`rooms.${index}.room_type`}\n                                                            onChange={handleChange}\n                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                        >\n                                                            <MenuItem value=''>Choose a living place type</MenuItem>\n                                                            {livingPlaceTypes.map((item, index) => (\n                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                            ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </TabPanel>\n                                            /* ) */\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default RoomsInformations\n\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */"]},"metadata":{},"sourceType":"module"}