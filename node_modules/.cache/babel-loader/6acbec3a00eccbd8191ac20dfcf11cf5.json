{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/ComplexInformations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik, getIn } from 'formik';\nimport * as yup from 'yup';\nimport { Button, FormLabel, TextField, FormControl, MenuItem, Select, FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport countries from '../../Json/Countries';\nimport phoneNumberLandcode from '../../Json/PhoneNumberLandcode';\nimport complexFacilities from '../../Json/ComplexFacilities';\n/* const validationSchema = yup.object({\n    complex: yup.object({\n        complex_name: yup.string().required('test'),\n        house_number: yup.number().required('test'),\n        city: yup.string().required('test'),\n        postal_code: yup.string().required('test'),\n        phone_number: yup.number().required('test'),\n        email_address: yup.string().required('test'),\n        street: yup.string().required('test'),\n    })\n}) */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ComplexInformations = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      complex: {\n        complex_name: '',\n        house_number: '',\n        city: '',\n        postal_code: '',\n        phone_number: '',\n        email_address: '',\n        street: '',\n        house_number_extension: '',\n        country: '',\n        phone_number_landcode: '',\n        opening_hours: '',\n        complex_facility_type: {\n          kitchen: '',\n          bathroom: '',\n          supermarket: '',\n          fitness: '',\n          common_room: '',\n          reception_office: '',\n          laundry: '',\n          relax: ''\n        }\n      }\n    },\n\n    /* validationSchema: validationSchema, */\n    onSubmit: data => {\n      props.next(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Complex name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.complex_name\",\n          value: formik.values.complex.complex_name,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"House number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.house_number\",\n          value: formik.values.complex.house_number,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.house_number') && Boolean(getIn(formik.errors, 'complex.house_number'))}\n          helperText={getIn(formik.touched, 'complex.house_number') && getIn(formik.errors, 'complex.house_number')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.city\",\n          value: formik.values.complex.city,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.city') && Boolean(getIn(formik.errors, 'complex.city'))}\n          helperText={getIn(formik.touched, 'complex.city') && getIn(formik.errors, 'complex.city')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Postal code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.postal_code\",\n          value: formik.values.complex.postal_code,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.postal_code') && Boolean(getIn(formik.errors, 'complex.postal_code'))}\n          helperText={getIn(formik.touched, 'complex.postal_code') && getIn(formik.errors, 'complex.postal_code')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Phone number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.phone_number\",\n          value: formik.values.complex.phone_number,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.phone_number') && Boolean(getIn(formik.errors, 'complex.phone_number'))}\n          helperText={getIn(formik.touched, 'complex.phone_number') && getIn(formik.errors, 'complex.phone_number')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.email_address\",\n          value: formik.values.complex.email_address,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'complex.email_address') && Boolean(getIn(formik.errors, 'complex.email_address')),\n          helperText: getIn(formik.touched, 'complex.email_address') && getIn(formik.errors, 'complex.email_address')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.street\",\n          value: formik.values.complex.street,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.street') && Boolean(getIn(formik.errors, 'complex.street'))}\n          helperText={getIn(formik.touched, 'complex.street') && getIn(formik.errors, 'complex.street')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"House number extension\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.house_number_extension\",\n          value: formik.values.house_number_extension,\n          onChange: formik.handleChange\n          /* error={getIn(formik.touched, 'complex.house_number_extension') && Boolean(getIn(formik.errors, 'complex.house_number_extension'))}\n          helperText={getIn(formik.touched, 'complex.house_number_extension') && getIn(formik.errors, 'complex.house_number_extension')} */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"complex.country\",\n            value: formik.values.complex.country,\n            onChange: formik.handleChange\n            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n            ,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Choose a country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), countries.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.value,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Phone number landcode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"complex.phone_number_landcode\",\n            value: formik.values.complex.phone_number_landcode,\n            onChange: formik.handleChange\n            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n            ,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Choose a country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), phoneNumberLandcode.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.value,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Facility types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: complexFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: `complex.complex_facility_type.${item.value}`,\n                value: checked ? true : false,\n                onChange: formik.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 72\n              }, this),\n              label: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ComplexInformations, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ComplexInformations;\nexport default ComplexInformations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComplexInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/ComplexInformations.js"],"names":["React","useFormik","getIn","yup","Button","FormLabel","TextField","FormControl","MenuItem","Select","FormGroup","FormControlLabel","Checkbox","countries","phoneNumberLandcode","complexFacilities","ComplexInformations","props","formik","initialValues","complex","complex_name","house_number","city","postal_code","phone_number","email_address","street","house_number_extension","country","phone_number_landcode","opening_hours","complex_facility_type","kitchen","bathroom","supermarket","fitness","common_room","reception_office","laundry","relax","onSubmit","data","next","handleSubmit","color","marginBottom","values","handleChange","touched","Boolean","errors","map","item","index","value","label","checked"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as yup from 'yup'\n\nimport { Button, FormLabel, TextField, FormControl, MenuItem, Select, FormGroup, FormControlLabel, Checkbox } from '@mui/material'\n\nimport countries from '../../Json/Countries'\nimport phoneNumberLandcode from '../../Json/PhoneNumberLandcode'\nimport complexFacilities from '../../Json/ComplexFacilities'\n\n/* const validationSchema = yup.object({\n    complex: yup.object({\n        complex_name: yup.string().required('test'),\n        house_number: yup.number().required('test'),\n        city: yup.string().required('test'),\n        postal_code: yup.string().required('test'),\n        phone_number: yup.number().required('test'),\n        email_address: yup.string().required('test'),\n        street: yup.string().required('test'),\n    })\n}) */\n\nconst ComplexInformations = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            complex: {\n                complex_name: '',\n                house_number: '',\n                city: '',\n                postal_code: '',\n                phone_number: '',\n                email_address: '',\n                street: '',\n                house_number_extension: '',\n                country: '',\n                phone_number_landcode: '',\n                opening_hours: '',\n                complex_facility_type: {\n                    kitchen: '',\n                    bathroom: '',\n                    supermarket: '',\n                    fitness: '',\n                    common_room: '',\n                    reception_office: '',\n                    laundry: '',\n                    relax: ''\n                }\n            }\n        },\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            props.next(data)\n        }\n    })\n\n    return (\n        <>\n            <div>\n                <form onSubmit={formik.handleSubmit}>\n\n                    {/* COMPLEX NAME */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Complex name</FormLabel>\n                    <TextField\n                        name='complex.complex_name'\n                        value={formik.values.complex.complex_name}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                    />\n\n                    {/* HOUSE NUMBER */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                    <TextField\n                        name='complex.house_number'\n                        value={formik.values.complex.house_number}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.house_number') && Boolean(getIn(formik.errors, 'complex.house_number'))}\n                        helperText={getIn(formik.touched, 'complex.house_number') && getIn(formik.errors, 'complex.house_number')} */\n                    />\n\n                    {/* CITY */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>City</FormLabel>\n                    <TextField\n                        name='complex.city'\n                        value={formik.values.complex.city}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.city') && Boolean(getIn(formik.errors, 'complex.city'))}\n                        helperText={getIn(formik.touched, 'complex.city') && getIn(formik.errors, 'complex.city')} */\n                    />\n\n                    {/* POSTAL CODE */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Postal code</FormLabel>\n                    <TextField\n                        name='complex.postal_code'\n                        value={formik.values.complex.postal_code}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.postal_code') && Boolean(getIn(formik.errors, 'complex.postal_code'))}\n                        helperText={getIn(formik.touched, 'complex.postal_code') && getIn(formik.errors, 'complex.postal_code')} */\n                    />\n\n                    {/* PHONE NUMBER */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Phone number</FormLabel>\n                    <TextField\n                        name='complex.phone_number'\n                        value={formik.values.complex.phone_number}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.phone_number') && Boolean(getIn(formik.errors, 'complex.phone_number'))}\n                        helperText={getIn(formik.touched, 'complex.phone_number') && getIn(formik.errors, 'complex.phone_number')} */\n                    />\n\n                    {/* EMAIL */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Email address</FormLabel>\n                    <TextField\n                        name='complex.email_address'\n                        value={formik.values.complex.email_address}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.email_address') && Boolean(getIn(formik.errors, 'complex.email_address'))}\n                        helperText={getIn(formik.touched, 'complex.email_address') && getIn(formik.errors, 'complex.email_address')}\n                    />\n\n                    {/* STREET */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Street</FormLabel>\n                    <TextField\n                        name='complex.street'\n                        value={formik.values.complex.street}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.street') && Boolean(getIn(formik.errors, 'complex.street'))}\n                        helperText={getIn(formik.touched, 'complex.street') && getIn(formik.errors, 'complex.street')} */\n                    />\n\n                    {/* HOUSE NUMBER EXTENSION */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                    <TextField\n                        name='complex.house_number_extension'\n                        value={formik.values.house_number_extension}\n                        onChange={formik.handleChange}\n                        /* error={getIn(formik.touched, 'complex.house_number_extension') && Boolean(getIn(formik.errors, 'complex.house_number_extension'))}\n                        helperText={getIn(formik.touched, 'complex.house_number_extension') && getIn(formik.errors, 'complex.house_number_extension')} */\n                    />\n\n                    {/* COUNTRY */}\n                    <FormControl>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Country</FormLabel>\n                        <Select\n                            name='complex.country'\n                            value={formik.values.complex.country}\n                            onChange={formik.handleChange}\n                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                        >\n                            <MenuItem value=''>Choose a country</MenuItem>\n                            {countries.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    {/* PHONE NUMBER LANDCODE */}\n                    <FormControl>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Phone number landcode</FormLabel>\n                        <Select\n                            name='complex.phone_number_landcode'\n                            value={formik.values.complex.phone_number_landcode}\n                            onChange={formik.handleChange}\n                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                        >\n                            <MenuItem value=''>Choose a country</MenuItem>\n                            {phoneNumberLandcode.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    <FormGroup>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                        <FormGroup>\n                            {complexFacilities.map((item, index) => (\n                                <FormControlLabel key={index} control={<Checkbox name={`complex.complex_facility_type.${item.value}`} value={checked ? true : false} onChange={formik.handleChange} />}label={item.label} />\n                            ))}\n                        </FormGroup>\n                    </FormGroup>\n                    \n                    <Button color='primary' variant='contained' fullWidth type='submit'>\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default ComplexInformations\n"]},"metadata":{},"sourceType":"module"}