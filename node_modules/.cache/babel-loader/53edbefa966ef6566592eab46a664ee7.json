{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/SomeQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Formik, Field, Form } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SomeQuestions = props => {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  const fetchComplexNames = () => {\n    axios.get('http://10.0.4.5:8000/api/v1/vhe/complexname').then(result => {\n      const response = result.data.results;\n      console.log(response);\n      setAllData(response);\n      setFilteredData(response);\n    }).catch(e => {\n      console.log('Error getting data: ' + e);\n    });\n  };\n\n  useEffect(() => {\n    fetchComplexNames();\n  }, []);\n  if (!allData) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Some questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        part_of_complex: '',\n        is_existing_complex: '',\n        existing_complex_name: '',\n        residence_type: '',\n        vhe_type: ''\n      },\n      onSubmit: data => {\n        console.log(data);\n        const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/registerintroduction/', data);\n        res.then(res => {\n          console.log('res', res);\n        }).catch(error => {\n          console.log(error);\n        });\n        props.next(values);\n      },\n      children: ({\n        values,\n        handleChange,\n        handleBlur\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Part of a complex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"part_of_complex\",\n              value: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), \"Yes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"radio\",\n              name: \"part_of_complex\",\n              value: \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), values.part_of_complex && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Part of a complex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"is_existing_complex\",\n                value: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this), \"Yes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"radio\",\n                name: \"is_existing_complex\",\n                value: \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), \"No\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), values.part_of_complex && values.is_existing_complex && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"existing_complex_name\",\n            style: {\n              display: 'block'\n            },\n            children: \"Complex name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"existing_complex_name\",\n            value: values.existing_complex_name,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            style: {\n              display: 'block'\n            },\n            children: existingComplexes__array.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              label: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"residence_type\",\n          style: {\n            display: 'block'\n          },\n          children: \"Complex name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"residence_type\",\n          value: values.residence_type,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          style: {\n            display: 'block'\n          },\n          children: residenceTypes__array.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.value,\n            label: item.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vhe_type\",\n          style: {\n            display: 'block'\n          },\n          children: \"Complex name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"vhe_type\",\n          value: values.vhe_type,\n          onChange: handleChange,\n          onBlur: handleBlur,\n          style: {\n            display: 'block'\n          },\n          children: livingPlaceTypes__array.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.value,\n            label: item.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SomeQuestions, \"lxUJb56aOZMxqCzp2+zyneNnsFg=\");\n\n_c = SomeQuestions;\nconst existingComplexes__array = [{\n  value: '1',\n  label: 'Complex 1'\n}, {\n  value: '2',\n  label: 'Complex 2'\n}, {\n  value: '3',\n  label: 'Complex 3'\n}, {\n  value: '4',\n  label: 'Complex 4'\n}];\nconst residenceTypes__array = [{\n  value: '1',\n  label: 'Apartment'\n}, {\n  value: '2',\n  label: 'House'\n}, {\n  value: '3',\n  label: 'Mobil home'\n}, {\n  value: '4',\n  label: 'Studio'\n}];\nconst livingPlaceTypes__array = [{\n  value: '1',\n  label: 'Bed'\n}, {\n  value: '2',\n  label: 'Room'\n}, {\n  value: '3',\n  label: 'Residence'\n}];\nexport default SomeQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"SomeQuestions\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/SomeQuestions.js"],"names":["React","useState","useEffect","axios","Formik","Field","Form","SomeQuestions","props","allData","setAllData","filteredData","setFilteredData","fetchComplexNames","get","then","result","response","data","results","console","log","catch","e","part_of_complex","is_existing_complex","existing_complex_name","residence_type","vhe_type","res","post","error","next","values","handleChange","handleBlur","display","existingComplexes__array","map","item","index","value","label","residenceTypes__array","livingPlaceTypes__array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport { Formik, Field, Form } from 'formik'\n\nconst SomeQuestions = (props) => {\n\n    const[allData, setAllData] = useState([])\n    const[filteredData, setFilteredData] = useState([])\n      \n    const fetchComplexNames = () => {\n        axios.get('http://10.0.4.5:8000/api/v1/vhe/complexname').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setAllData(response)\n            setFilteredData(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    useEffect(() => {\n        fetchComplexNames()\n    }, [])\n\n    if(!allData) return null\n\n    return (\n        <>\n            <h3>Some questions</h3>\n            <Formik\n                initialValues={{\n                    part_of_complex: '',\n                    is_existing_complex: '',\n                    existing_complex_name: '',\n                    residence_type: '',\n                    vhe_type: ''\n                }}\n                onSubmit={( data ) => {\n                    console.log(data)\n                    const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/registerintroduction/', data)\n                    res.then(res => { console.log('res', res) }).catch( error => { console.log(error) })\n                    props.next(values)\n                }}\n            >\n            {({\n                values,\n                handleChange,\n                handleBlur\n            }) => (\n                <Form>\n                    <div>Part of a complex</div>\n                    <div>\n                        <label>\n                            <Field type='radio' name='part_of_complex' value='true' />\n                            Yes\n                        </label>\n                        <label>\n                            <Field type='radio' name='part_of_complex' value='false' />\n                            No\n                        </label>\n                    </div>\n\n                    {values.part_of_complex && (\n                        <>\n                            <div>Part of a complex</div>\n                            <div>\n                                <label>\n                                    <Field type='radio' name='is_existing_complex' value='true' />\n                                    Yes\n                                </label>\n                                <label>\n                                    <Field type='radio' name='is_existing_complex' value='false' />\n                                    No\n                                </label>\n                            </div>\n                        </>\n                    )}\n\n                    {values.part_of_complex && values.is_existing_complex && (\n                        <>\n                            <label htmlFor='existing_complex_name' style={{ display: 'block' }}>\n                                Complex name\n                            </label>\n                            <select\n                                name='existing_complex_name'\n                                value={values.existing_complex_name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                style={{ display: 'block' }}\n                            >\n                                {existingComplexes__array.map((item, index) => (\n                                    <option key={index} value={item.value} label={item.label} />\n                                ))}\n                                {/* <option key={index} value={item.id} label={item.complex_name} /> */}\n                            </select>\n                        </>\n                    )}\n\n                    <label htmlFor='residence_type' style={{ display: 'block' }}>\n                        Complex name\n                    </label>\n                    <select\n                        name='residence_type'\n                        value={values.residence_type}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        style={{ display: 'block' }}\n                    >\n                        {residenceTypes__array.map((item, index) => (\n                            <option key={index} value={item.value} label={item.label} />\n                        ))}\n                    </select>\n\n                    <label htmlFor='vhe_type' style={{ display: 'block' }}>\n                        Complex name\n                    </label>\n                    <select\n                        name='vhe_type'\n                        value={values.vhe_type}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        style={{ display: 'block' }}\n                    >\n                        {livingPlaceTypes__array.map((item, index) => (\n                            <option key={index} value={item.value} label={item.label} />\n                        ))}\n                    </select>\n\n                    <button type='submit'>Submit</button>\n                </Form>\n            )}\n            </Formik>\n        </>\n    )\n}\n\nconst existingComplexes__array = [\n    {\n        value: '1',\n        label: 'Complex 1'\n    },\n    {\n        value: '2',\n        label: 'Complex 2'\n    },\n    {\n        value: '3',\n        label: 'Complex 3'\n    },\n    {\n        value: '4',\n        label: 'Complex 4'\n    }\n]\n\nconst residenceTypes__array = [\n    {\n        value: '1',\n        label: 'Apartment'\n    },\n    {\n        value: '2',\n        label: 'House'\n    },\n    {\n        value: '3',\n        label: 'Mobil home'\n    },\n    {\n        value: '4',\n        label: 'Studio'\n    }\n]\n\nconst livingPlaceTypes__array = [\n    {\n        value: '1',\n        label: 'Bed'\n    },\n    {\n        value: '2',\n        label: 'Room'\n    },\n    {\n        value: '3',\n        label: 'Residence'\n    }\n]\n\nexport default SomeQuestions\n"]},"metadata":{},"sourceType":"module"}