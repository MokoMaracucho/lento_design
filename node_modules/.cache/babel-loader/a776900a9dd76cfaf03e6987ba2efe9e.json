{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationSomeQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Select, MenuItem } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Info } from '@material-ui/icons';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { blue } from '@mui/material/colors';\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index';\nimport { GlobalVariablesContext } from '../Context/GlobalVariablesContext';\nimport { useData } from '../Context/DataContext';\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState';\nimport '../Styles/Pages/LivingPlaceRegistrationSomeQuestions.scss';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LivingPlaceRegistrationSomeQuestions = () => {\n  _s();\n\n  const {\n    REACT_APP_URL\n  } = useContext(GlobalVariablesContext);\n  const navigate = useNavigate();\n  const {\n    setValues,\n    data\n  } = useData();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      part_of_complex: data.part_of_complex,\n      is_existing_complex: data.is_existing_complex,\n      existing_complex_name: data.existing_complex_name,\n      residence_type: data.residence_type,\n      vhe_type: data.vhe_type\n    }\n  });\n  const partOfAComplex = watch('part_of_complex');\n  const existingComplex = watch('is_existing_complex');\n  const [allData, setAllData] = useState([]);\n\n  const fetchComplexNames = () => {\n    axios.get('http://10.0.4.5:8000/api/v1/vhe/complexname').then(result => {\n      const response = result.data.results;\n      console.log(response);\n      setAllData(response);\n    }).catch(e => {\n      console.log('Error getting data: ' + e);\n    });\n  };\n\n  useEffect(() => {\n    fetchComplexNames();\n  }, []);\n\n  const onSubmit = data => {\n    navigate('/living_place_registration/complex_informations');\n    LivingPlaceRegistrationTimelineState.step = 2;\n    setValues(data);\n    console.log(data);\n    /* const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/registerintroduction/', data)\n    res.then(res => { console.log('res', res) }).catch( error => { console.log(error) }) */\n  };\n\n  if (!allData) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"timelineFrom__container\",\n      children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Questions about the residence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"partOfAComplex__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Is the residence part of a complex?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...register('part_of_complex'),\n            defaultValue: data.part_of_complex,\n            style: {\n              display: 'initial'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  'color': '#909090'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  'color': '#909090'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), partOfAComplex && /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"partOfAComplex__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Does it already exist in the platform?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...register('is_existing_complex'),\n            defaultValue: data.is_existing_complex,\n            style: {\n              display: 'initial'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  'color': '#909090'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  'color': '#909090'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), partOfAComplex && existingComplex && /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"existingComplexName__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Choose a complex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"existingComplexNameError__div\",\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('existing_complex_name', {\n                required: true\n              }),\n              defaultValue: data.existing_complex_name,\n              style: textFieldStyle,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"Choose complex name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), allData.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.complex_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"existingComplexNameError__container\",\n            children: errors.existing_complex_name && errors.existing_complex_name.type === 'required' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red_COLOR error_FORM\",\n              children: \"A complex name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 118\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"residenceType__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Residence type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"residenceTypeError__div\",\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('residence_type', {\n                required: true\n              }),\n              defaultValue: data.residence_type,\n              style: textFieldStyle,\n              children: residenceTypes__array.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.value,\n                children: item.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"residenceTypeError__container\",\n            children: errors.residence_type && errors.residence_type.type === 'required' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red_COLOR error_FORM\",\n              children: \"A residence type is madatory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 100\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"vheType__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Living place type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"vheTypeError__div\",\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('vhe_type', {\n                required: true\n              }),\n              defaultValue: data.vhe_type,\n              style: textFieldStyle,\n              children: livingPlaceTypes__array.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.value,\n                children: item.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"vheTypeError__container\",\n            children: errors.vhe_type && errors.vhe_type.type === 'required' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red_COLOR error_FORM\",\n              children: \"A living place type is madatory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"someQuestionsNext__div\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          style: {\n            color: '#eeeeee'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#5398D4',\n            borderRadius: 50,\n            fontFamily: 'DMSansMedium',\n            boxShadow: 'unset',\n            marginLeft: '10px'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceRegistrationSomeQuestions, \"44pi5Q8NnfQsJS3efTkpDCZq/40=\", false, function () {\n  return [useNavigate, useData, useForm];\n});\n\n_c = LivingPlaceRegistrationSomeQuestions;\nconst existingComplexes__array = [{\n  value: 'complex_1',\n  label: 'Complex 1'\n}, {\n  value: 'complex_2',\n  label: 'Complex 2'\n}, {\n  value: 'complex_3',\n  label: 'Complex 3'\n}, {\n  value: 'complex_4',\n  label: 'Complex 4'\n}];\nconst residenceTypes__array = [{\n  value: '1',\n  label: 'Apartment'\n}, {\n  value: '2',\n  label: 'House'\n}, {\n  value: '3',\n  label: 'Mobil home'\n}, {\n  value: '4',\n  label: 'Studio'\n}];\nconst livingPlaceTypes__array = [{\n  value: '1',\n  label: 'Bed'\n}, {\n  value: '2',\n  label: 'Room'\n}, {\n  value: '3',\n  label: 'Residence'\n}];\nconst textFieldStyle = {\n  width: '300px',\n  height: '40px',\n  borderRadius: '5px',\n  background: '#eee',\n  paddingLeft: '15px',\n  paddingTop: '5px'\n};\nexport default LivingPlaceRegistrationSomeQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivingPlaceRegistrationSomeQuestions\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationSomeQuestions.js"],"names":["React","useContext","useState","useEffect","axios","useForm","useNavigate","Button","Select","MenuItem","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Info","CancelIcon","blue","LivingPlaceRegistrationTimeline","GlobalVariablesContext","useData","LivingPlaceRegistrationTimelineState","Box","LivingPlaceRegistrationSomeQuestions","REACT_APP_URL","navigate","setValues","data","register","handleSubmit","watch","formState","errors","defaultValues","part_of_complex","is_existing_complex","existing_complex_name","residence_type","vhe_type","partOfAComplex","existingComplex","allData","setAllData","fetchComplexNames","get","then","result","response","results","console","log","catch","e","onSubmit","step","color","display","marginBottom","required","textFieldStyle","map","item","index","id","complex_name","type","residenceTypes__array","value","label","livingPlaceTypes__array","backgroundColor","borderRadius","fontFamily","boxShadow","marginLeft","existingComplexes__array","width","height","background","paddingLeft","paddingTop"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, Select, MenuItem } from '@material-ui/core'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Info } from '@material-ui/icons'\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport { blue } from '@mui/material/colors'\n\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index'\n\nimport { GlobalVariablesContext } from '../Context/GlobalVariablesContext'\nimport { useData } from '../Context/DataContext'\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../Styles/Pages/LivingPlaceRegistrationSomeQuestions.scss'\nimport { Box } from '@mui/system'\n\nconst LivingPlaceRegistrationSomeQuestions = () => {\n\n    const { REACT_APP_URL } = useContext(GlobalVariablesContext)\n\n    const navigate = useNavigate()\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({\n        defaultValues: {\n            part_of_complex: data.part_of_complex,\n            is_existing_complex: data.is_existing_complex,\n            existing_complex_name: data.existing_complex_name,\n            residence_type: data.residence_type,\n            vhe_type: data.vhe_type\n        }\n    })\n    \n    const partOfAComplex = watch('part_of_complex')\n    const existingComplex = watch('is_existing_complex')\n\n    const[allData, setAllData] = useState([])\n      \n    const fetchComplexNames = () => {\n        axios.get('http://10.0.4.5:8000/api/v1/vhe/complexname').then(result => {\n            const response = result.data.results\n            console.log(response)\n            setAllData(response)\n        }).catch(e => {\n            console.log('Error getting data: ' + e)\n        })\n    }\n\n    useEffect(() => {\n        fetchComplexNames()\n      }, [])\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/complex_informations')\n        LivingPlaceRegistrationTimelineState.step = 2\n        setValues(data)\n        console.log(data)\n        /* const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/registerintroduction/', data)\n        res.then(res => { console.log('res', res) }).catch( error => { console.log(error) }) */\n    }\n\n    if(!allData) return null\n    \n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Questions about the residence</h5>\n\n                {/* PART OF A COMPLEX */}\n                <FormControl component='fieldset'>\n                    <div id='partOfAComplex__div'>\n\n                        <FormLabel component='legend' style={{ color: 'black'}}>Is the residence part of a complex?</FormLabel>\n                        <RadioGroup\n                            {...register('part_of_complex')}\n                            defaultValue={data.part_of_complex}\n                            style={{ display: 'initial' }}\n                        >\n                            <FormControlLabel value='true' control={\n                                <Radio\n                                    style={{ 'color': '#909090'}}\n                                />\n                            } label='Yes' />\n\n                            <FormControlLabel value='false' control={\n                                <Radio\n                                    style={{ 'color': '#909090'}}\n                                />\n                            } label='No' />\n                        </RadioGroup>\n                    </div>\n                </FormControl>\n\n\n                {/* EXISTING COMPLEX */}\n                {partOfAComplex && (\n                    <FormControl component='fieldset'>\n                        <div id='partOfAComplex__div'>\n\n                            <FormLabel component='legend' style={{ color: 'black'}}>Does it already exist in the platform?</FormLabel>\n                            <RadioGroup\n                                {...register('is_existing_complex')}\n                                defaultValue={data.is_existing_complex}\n                                style={{ display: 'initial' }}\n                            >\n                                <FormControlLabel value='true' control={\n                                    <Radio\n                                        style={{ 'color': '#909090'}}\n                                    />\n                                } label='Yes' />\n\n                                <FormControlLabel value='false' control={\n                                    <Radio\n                                        style={{ 'color': '#909090'}}\n                                    />\n                                } label='No' />\n                            </RadioGroup>\n                            \n                        </div>\n                    </FormControl>\n                )}\n                \n                {/* CHOOSE COMPLEX */}\n                {partOfAComplex && existingComplex && (\n                    <FormControl>\n                        <div id='existingComplexName__div'>\n                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Choose a complex</FormLabel>\n                            <div id='existingComplexNameError__div'>\n                                <Select\n                                    {...register('existing_complex_name', { required: true })}\n                                    defaultValue={data.existing_complex_name}\n                                    style={textFieldStyle}\n                                >\n                                    <MenuItem value=''>Choose complex name</MenuItem>\n                                    {allData.map((item, index) => (\n                                        <MenuItem key={index} value={item.id}>{item.complex_name}</MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            <div id='existingComplexNameError__container'>\n                                {errors.existing_complex_name && errors.existing_complex_name.type === 'required' && <span className='red_COLOR error_FORM'>A complex name is required</span>}\n                            </div>\n                        </div>\n                    </FormControl>\n                )}\n                \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <div id='residenceType__div'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Residence type</FormLabel>\n                        <div id='residenceTypeError__div'>\n                            <Select\n                                {...register('residence_type', { required: true })}\n                                defaultValue={data.residence_type}\n                                style={textFieldStyle}\n                            >\n                            {residenceTypes__array.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                            </Select>\n                        </div>\n                        <div id='residenceTypeError__container'>\n                            {errors.residence_type && errors.residence_type.type === 'required' && <span className='red_COLOR error_FORM'>A residence type is madatory</span>}\n                        </div>\n                        \n                    </div>\n                </FormControl>\n                \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <div id='vheType__div'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type</FormLabel>\n                        <div id='vheTypeError__div'>\n                            <Select\n                                {...register('vhe_type', { required: true })}\n                                defaultValue={data.vhe_type}\n                                style={textFieldStyle}\n                            >\n                            {livingPlaceTypes__array.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                            </Select>\n                        </div>\n                        <div id='vheTypeError__container'>\n                            {errors.vhe_type && errors.vhe_type.type === 'required' && <span className='red_COLOR error_FORM'>A living place type is madatory</span>}\n                        </div>\n                        \n                    </div>\n                </FormControl>\n\n                {/* NEXT */}\n                <div id='someQuestionsNext__div'>\n                    <Info style={{ color: '#eeeeee' }}/>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        style={{\n                            backgroundColor: '#5398D4',\n                            borderRadius: 50,\n                            fontFamily: 'DMSansMedium',\n                            boxShadow: 'unset',\n                            marginLeft: '10px'\n                        }}\n                    >\n                        Next\n                    </Button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nconst existingComplexes__array = [\n    {\n        value: 'complex_1',\n        label: 'Complex 1'\n    },\n    {\n        value: 'complex_2',\n        label: 'Complex 2'\n    },\n    {\n        value: 'complex_3',\n        label: 'Complex 3'\n    },\n    {\n        value: 'complex_4',\n        label: 'Complex 4'\n    }\n]\n\nconst residenceTypes__array = [\n    {\n        value: '1',\n        label: 'Apartment'\n    },\n    {\n        value: '2',\n        label: 'House'\n    },\n    {\n        value: '3',\n        label: 'Mobil home'\n    },\n    {\n        value: '4',\n        label: 'Studio'\n    }\n]\n\nconst livingPlaceTypes__array = [\n    {\n        value: '1',\n        label: 'Bed'\n    },\n    {\n        value: '2',\n        label: 'Room'\n    },\n    {\n        value: '3',\n        label: 'Residence'\n    }\n]\n\nconst textFieldStyle = {\n    width: '300px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nexport default LivingPlaceRegistrationSomeQuestions\n"]},"metadata":{},"sourceType":"module"}