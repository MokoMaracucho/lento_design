{"ast":null,"code":"var _jsxFileName = \"/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/FloorplanInformations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, FormLabel, TextField, FormControl } from '@mui/material';\nimport { Add, DeleteForever } from '@mui/icons-material/';\nimport { useData } from '../../Context/LivingPlaceRegistrationContext';\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index';\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState';\nimport '../../Styles/Pages/LivingPlaceRegistration.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  floorplan: Yup.array().of(Yup.object().shape({\n    floor: Yup.number().required('Test'),\n    area: Yup.number().required('Test')\n  })).required('Test')\n});\n\nconst ErrorMessage = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: name,\n  render: ({\n    form\n  }) => {\n    const error = getIn(form.errors, name);\n    const touch = getIn(form.touched, name);\n    return touch && error ? error : null;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n\n_c = ErrorMessage;\nconst initialValues = {\n  floorplan: [{\n    floor: '',\n    area: ''\n  }]\n};\n\nconst FloorplanInformations = () => {\n  _s();\n\n  LivingPlaceRegistrationTimelineState.maxStep = 4;\n  const {\n    setValues,\n    data\n  } = useData();\n  const navigate = useNavigate();\n\n  const previewStep = data => {\n    setValues(data);\n    LivingPlaceRegistrationTimelineState.step = 3;\n    navigate('/living_place_registration/residence_informations');\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_form\",\n    children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Floorplan informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"complexInfos__div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-large blue_COLOR\",\n        style: {\n          marginTop: '10px'\n        },\n        children: data.complex.complex_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-medium\",\n        style: {\n          marginTop: '-10px'\n        },\n        children: [data.complex.street, ' ', data.complex.complex_house_number, ', ', data.complex.postal_code, ' ', data.complex.city, ' (', data.complex.country, ')']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues\n      /* validationSchema={validationSchema} */\n      ,\n      onSubmit: data => {\n        setValues(data);\n        LivingPlaceRegistrationTimelineState.step = 5;\n        navigate('/living_place_registration/rooms_informations');\n        console.log(data);\n      },\n      children: ({\n        values,\n        handleChange,\n        touched,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"floorplan\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [values.floorplan.length > 0 && values.floorplan.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_living_place_register two_rows\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    color: 'black',\n                    marginBottom: '10px'\n                  },\n                  children: \"Floor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  name: `floorplan.${index}.floor`,\n                  value: room.floor,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `floorplan.${index}.floor`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    color: 'black',\n                    marginBottom: '10px'\n                  },\n                  children: \"Area\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  name: `floorplan.${index}.area`,\n                  value: room.area,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `floorplan.${index}.area`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  gridColumn: '1/3',\n                  justifySelf: 'end',\n                  gap: '10px'\n                },\n                children: [\"Remove room\", /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => remove(index),\n                  children: /*#__PURE__*/_jsxDEV(DeleteForever, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 107\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              style: {\n                display: 'flex',\n                justifyContent: 'end',\n                flexDirection: 'row',\n                alignItems: 'center',\n                gap: '10px'\n              },\n              children: [\"Add room\", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => push({\n                  floor: '',\n                  area: ''\n                }),\n                children: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 115\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button_wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            onClick: previewStep,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FloorplanInformations, \"r1U9ATBXB54+AqjIXC7kIkyJxBk=\", false, function () {\n  return [useData, useNavigate];\n});\n\n_c2 = FloorplanInformations;\nexport default FloorplanInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"FloorplanInformations\");","map":{"version":3,"sources":["/Users/anwarbouzoubaa/Desktop/gitRepo/lento_design/src/Pages/LivingPlaceRegistration/FloorplanInformations.js"],"names":["React","Formik","Form","Field","FieldArray","getIn","Yup","useNavigate","Button","FormLabel","TextField","FormControl","Add","DeleteForever","useData","LivingPlaceRegistrationTimeline","LivingPlaceRegistrationTimelineState","validationSchema","object","shape","floorplan","array","of","floor","number","required","area","ErrorMessage","name","form","error","errors","touch","touched","initialValues","FloorplanInformations","maxStep","setValues","data","navigate","previewStep","step","console","log","marginTop","complex","complex_name","street","complex_house_number","postal_code","city","country","values","handleChange","remove","push","length","map","room","index","color","marginBottom","gridColumn","justifySelf","gap","display","justifyContent","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField, FormControl } from '@mui/material'\nimport { Add, DeleteForever } from '@mui/icons-material/'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../../Styles/Pages/LivingPlaceRegistration.scss'\n\nconst validationSchema = Yup.object().shape({\n    floorplan: Yup.array().of(\n        Yup.object().shape({\n          floor: Yup.number().required('Test'),\n          area: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nconst initialValues = {\n    floorplan: [\n    {\n      floor: '',\n      area: ''\n    }\n  ]\n}\n\nconst FloorplanInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 4\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        setValues(data)\n        LivingPlaceRegistrationTimelineState.step = 3\n        navigate('/living_place_registration/residence_informations')\n        console.log(data)\n    }\n\n    return (\n        <div className='container_form'>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Floorplan informations</h5>\n\n            <div id='complexInfos__div'>\n                <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                <p className='p-medium' style={{marginTop: '-10px'}}>\n                    {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                    {data.complex.street}\n                    {' '}\n                    {data.complex.complex_house_number}\n                    {', '}\n                    {data.complex.postal_code}\n                    {' '}\n                    {data.complex.city}\n                    {' ('}\n                    {data.complex.country}\n                    {')'}\n                </p>\n            </div>\n\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    setValues(data)\n                    LivingPlaceRegistrationTimelineState.step = 5\n                    navigate('/living_place_registration/rooms_informations')\n                    console.log(data)\n                }}\n            >\n                {({ values, handleChange, touched, errors }) => (\n                    <Form>\n                        <FieldArray name='floorplan'>\n                            {({ remove, push }) => (\n                                <div>\n                                    {values.floorplan.length > 0 && values.floorplan.map((room, index) => (\n                                        <div className='form_living_place_register two_rows' key={index} >\n                                            <FormControl >\n                                                {/* FLOOR */}\n                                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                                <TextField\n                                                    size='small'\n                                                    name={`floorplan.${index}.floor`}\n                                                    value={room.floor}\n                                                    onChange={handleChange}\n                                                />\n                                                <ErrorMessage name={`floorplan.${index}.floor`} />\n                                            </FormControl>\n\n                              \n\n                                            <FormControl >\n                                                {/* AREA */}\n                                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                                                <TextField\n                                                    size='small'\n                                                    name={`floorplan.${index}.area`}\n                                                    value={room.area}\n                                                    onChange={handleChange}\n                                                />\n                                                <ErrorMessage name={`floorplan.${index}.area`} />\n                                            </FormControl>\n\n                                            <div className='row' style={{gridColumn: '1/3', justifySelf: 'end', gap: '10px'}}>\n                                                Remove room\n                                                <Button variant='contained' onClick={() => remove(index)}><DeleteForever /></Button>\n                                            </div>\n                                        </div>\n                                    ))}\n\n                                    <div className='row' style={{display: 'flex', justifyContent: 'end', flexDirection: 'row', alignItems: 'center', gap: '10px'}}>\n                                         Add room\n                                        <Button variant='contained' onClick={() => push({ floor: '', area: '' })}><Add /></Button>\n                                    </div>\n\n\n\n                                    \n                                </div>\n                            )}\n                        </FieldArray>\n\n                        <div className='button_wrapper'>\n                            {/* PREVIEW */}\n                            <Button variant='contained' type='submit' onClick={previewStep}>\n                                Previous\n                            </Button>\n\n                            {/* NEXT */}\n                            <Button color='primary' variant='contained' type='submit'>\n                                Next\n                            </Button>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    )\n}\n\nexport default FloorplanInformations"]},"metadata":{},"sourceType":"module"}