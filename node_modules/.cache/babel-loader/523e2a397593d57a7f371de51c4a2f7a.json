{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/FloorplanInformations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, useFormik, Field, Form, ErrorMessage, FieldArray } from 'formik';\nimport axios from 'axios';\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  floorplan: [{\n    floor: '',\n    area: ''\n  }]\n};\n\nconst FloorplanInformations = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      floorplan: []\n    },\n\n    /* validationSchema: validationSchema, */\n    onSubmit: data => {\n      props.next(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: ({\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"floorplan\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [values.floorplan.length > 0 && values.floorplan.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                style: {\n                  color: 'black',\n                  marginBottom: '10px'\n                },\n                children: \"House number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"residence.house_number\",\n                value: formik.values.residence.house_number,\n                onChange: formik.handleChange\n                /* error={getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number'))}\n                helperText={getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')} */\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `floorplan.${index}.floor`,\n                  children: \"Floor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: `floorplan.${index}.floor`,\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `floorplan.${index}.area`,\n                  children: \"Area\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: `floorplan.${index}.area`,\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"secondary\",\n                  onClick: () => remove(index),\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 41\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"secondary\",\n              onClick: () => push({\n                floor: '',\n                area: ''\n              }),\n              children: \"Add room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FloorplanInformations, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = FloorplanInformations;\nexport default FloorplanInformations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FloorplanInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/FloorplanInformations.js"],"names":["React","Formik","useFormik","Field","Form","ErrorMessage","FieldArray","axios","Button","FormLabel","TextField","FormControl","FormGroup","FormControlLabel","Checkbox","Radio","RadioGroup","initialValues","floorplan","floor","area","FloorplanInformations","props","formik","onSubmit","data","next","handleSubmit","values","remove","push","length","map","room","index","color","marginBottom","residence","house_number","handleChange"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Formik, useFormik, Field, Form, ErrorMessage, FieldArray } from 'formik'\n\nimport axios from 'axios'\n\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup} from '@mui/material'\n\nconst initialValues = {\n    floorplan: [\n    {\n      floor: '',\n      area: ''\n    }\n  ]\n}\n\nconst FloorplanInformations = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            floorplan: []\n        },\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            props.next(data)\n        }\n    })\n\n    return (\n        <>\n            <form onSubmit={formik.handleSubmit}>\n                {({ values }) => (\n                    <Form>\n                        <FieldArray name='floorplan'>\n                            {({ remove, push }) => (\n                                <div>\n                                    {values.floorplan.length > 0 && values.floorplan.map((room, index) => (\n                                        <div className='row' key={index}>\n\n                                            {/* HOUSE NUMBER */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                                            <TextField\n                                                name='residence.house_number'\n                                                value={formik.values.residence.house_number}\n                                                onChange={formik.handleChange}\n                                                /* error={getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number'))}\n                                                helperText={getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')} */\n                                            />\n\n                                            <div className='col'>\n                                                <label htmlFor={`floorplan.${index}.floor`}>Floor</label>\n                                                <Field\n                                                    name={`floorplan.${index}.floor`}\n                                                    type='text'\n                                                />\n                                                {/* <ErrorMessage\n                                                    name={`friends.${index}.name`}\n                                                    component='div'\n                                                    className='field-error'\n                                                /> */}\n                                            </div>\n                                            <div className='col'>\n                                                <label htmlFor={`floorplan.${index}.area`}>Area</label>\n                                                <Field\n                                                    name={`floorplan.${index}.area`}\n                                                    type='text'\n                                                />\n                                                {/* <ErrorMessage\n                                                    name={`friends.${index}.name`}\n                                                    component='div'\n                                                    className='field-error'\n                                                /> */}\n                                            </div>\n                                            <div className='col'>\n                                                <button type='button' className='secondary' onClick={() => remove(index)}>X</button>\n                                            </div>\n                                        </div>\n                                    ))}\n                                    <button type='button' className='secondary' onClick={() => push({ floor: '', area: '' })}>Add room</button>\n                                </div>\n                            )}\n                        </FieldArray>\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </form>\n        </>\n    )\n}\n\nexport default FloorplanInformations\n"]},"metadata":{},"sourceType":"module"}