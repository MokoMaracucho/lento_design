{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, FieldArray } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Colors = ({\n  friend,\n  name\n}) => /*#__PURE__*/_jsxDEV(FieldArray, {\n  name: name,\n  render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '8px',\n      backgroundColor: 'rgba(0,0,0,0.1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        arrayHelpers.move(0, 1);\n      },\n      children: \"Move Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), friend.likedColors.length ? friend.likedColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: `${name}.${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n        ,\n        children: \"remove Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.insert(index, '') // insert an empty string at a position\n        ,\n        children: \"Add Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => arrayHelpers.push(''),\n      children: \"Add a color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Colors;\n\nconst Basic = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Anywhere in your app!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      friends: [{\n        name: 'Russell',\n        isActive: true,\n        likedColors: ['blue', 'red']\n      }, {\n        name: 'Seth',\n        isActive: true,\n        likedColors: ['yellow']\n      }]\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n      /* and other goodies */\n\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"friends\",\n          render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                arrayHelpers.move(0, 3);\n              },\n              children: \"Move\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), values.friends && values.friends.length > 0 ? values.friends.map((friend, index) => !friend.isActive ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '24px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: `friends.${index}.name`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                ,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.insert(index, {\n                  name: '',\n                  isActive: true,\n                  likedColors: []\n                }) // insert an empty string at a position\n                ,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Colors, {\n                name: `friends.${index}.likedColors`,\n                friend: friend\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 27\n            }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.push({\n                name: '',\n                isActive: true,\n                likedColors: []\n              }),\n              children: \"Add a friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n\n_c2 = Basic;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello CodeSandbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Basic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = App;\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 178,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Colors\");\n$RefreshReg$(_c2, \"Basic\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js"],"names":["React","ReactDOM","Formik","Field","FieldArray","Colors","friend","name","arrayHelpers","marginTop","backgroundColor","move","likedColors","length","map","color","index","remove","insert","push","Basic","email","password","friends","isActive","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","App","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Formik, Field, FieldArray } from 'formik'\n\nconst Colors = ({ friend, name }) => (\n  <FieldArray\n    name={name}\n    render={arrayHelpers => (\n        <div style={{ marginTop: '8px', backgroundColor: 'rgba(0,0,0,0.1' }}>\n            <button type='button' onClick={() => { arrayHelpers.move(0, 1) }}>Move Colors</button>\n            {friend.likedColors.length ? (\n            friend.likedColors.map((color, index) => (\n                <div key={index}>\n                <Field name={`${name}.${index}`} />\n                <button\n                    type='button'\n                    onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\n                >\n                    remove Color\n                </button>\n                <button\n                    type='button'\n                    onClick={() => arrayHelpers.insert(index, '')} // insert an empty string at a position\n                >\n                    Add Color\n                </button>\n                </div>\n            ))\n            ) : (\n            <button type='button' onClick={() => arrayHelpers.push('')}>\n                {/* show this when user has removed all friends from the list */}\n                Add a color\n            </button>\n            )}\n        </div>\n        )}\n  />\n)\n\nconst Basic = () => (\n  <div>\n    <h1>Anywhere in your app!</h1>\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        friends: [\n          { name: 'Russell', isActive: true, likedColors: ['blue', 'red'] },\n          { name: 'Seth', isActive: true, likedColors: ['yellow'] }\n        ]\n      }}\n      validate={values => {\n        let errors = {}\n        if (!values.email) {\n          errors.email = 'Required'\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address'\n        }\n        return errors\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2))\n          setSubmitting(false)\n        }, 400)\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => {\n        return (\n          <form onSubmit={handleSubmit}>\n            <input\n              type='email'\n              name='email'\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            {errors.email && touched.email && errors.email}\n            <input\n              type='password'\n              name='password'\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            <FieldArray\n              name='friends'\n              render={arrayHelpers => (\n                <div>\n                  <button\n                    type='button'\n                    onClick={() => {\n                      arrayHelpers.move(0, 3)\n                    }}\n                  >\n                    Move\n                  </button>\n                  {values.friends && values.friends.length > 0 ? (\n                    values.friends.map(\n                      (friend, index) =>\n                        !friend.isActive ? null : (\n                          <div key={index} style={{ marginTop: '24px' }}>\n                            <Field name={`friends.${index}.name`} />\n                            <button\n                              type='button'\n                              onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\n                            >\n                              -\n                            </button>\n                            <button\n                              type='button'\n                              onClick={() =>\n                                arrayHelpers.insert(index, {\n                                  name: '',\n                                  isActive: true,\n                                  likedColors: []\n                                })\n                              } // insert an empty string at a position\n                            >\n                              +\n                            </button>\n                            <Colors\n                              name={`friends.${index}.likedColors`}\n                              friend={friend}\n                            />\n                          </div>\n                        )\n                    )\n                  ) : (\n                    <button\n                      type='button'\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: '',\n                          isActive: true,\n                          likedColors: []\n                        })\n                      }\n                    >\n                      {/* show this when user has removed all friends from the list */}\n                      Add a friend\n                    </button>\n                  )}\n                  <div>\n                    <button type='submit'>Submit</button>\n                  </div>\n                </div>\n              )}\n            />\n          </form>\n        )\n      }}\n    </Formik>\n  </div>\n)\n\nfunction App() {\n  return (\n    <div className='App'>\n      <h1>Hello CodeSandbox</h1>\n      <Basic />\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"]},"metadata":{},"sourceType":"module"}