{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst stepOneValidationSchema = yup.object({\n  name: yup.object({\n    first_name: yup.string().required().label('First name'),\n    last_name: yup.string().required().label('Last name')\n  })\n});\nconst stepTwoValidationSchema = yup.object({\n  email: yup.string().required().email().label('Email'),\n  password: yup.string().required().label('Password')\n});\n\nconst Formik2 = () => {\n  _s();\n\n  const [data, setData] = useState({\n    name: {\n      first_name: '',\n      last_name: ''\n    },\n    email: '',\n    password: ''\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = formData => {\n    console.log('form is submitted', formData);\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev,\n      ...newData\n    }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev,\n      ...newData\n    }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const steps = [/*#__PURE__*/_jsxDEV(StepOne, {\n    next: handleNextStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(StepTwo, {\n    next: handleNextStep,\n    prev: handlePrevStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: steps[currentStep]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Formik2, \"xcderAgrQo6AxZGay1wIzq1APFc=\");\n\n_c = Formik2;\n\nconst StepOne = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: stepOneValidationSchema,\n    initialValues: props.data,\n    onSubmit: handleSubmit,\n    children: () => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"name.first_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"name.first_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"last_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"name.last_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = StepOne;\n\nconst StepTwo = props => {\n  const handleSubmit = values => {\n    props.next(values, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: stepTwoValidationSchema,\n    initialValues: props.data,\n    onSubmit: handleSubmit,\n    children: ({\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => props.prev(values),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = StepTwo;\nexport default Formik2;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Formik2\");\n$RefreshReg$(_c2, \"StepOne\");\n$RefreshReg$(_c3, \"StepTwo\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik2.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","yup","stepOneValidationSchema","object","name","first_name","string","required","label","last_name","stepTwoValidationSchema","email","password","Formik2","data","setData","currentStep","setCurrentStep","makeRequest","formData","console","log","handleNextStep","newData","final","prev","handlePrevStep","steps","StepOne","props","handleSubmit","values","next","StepTwo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport * as yup from 'yup'\n\nconst stepOneValidationSchema = yup.object({\n    name: yup.object({\n        first_name: yup.string().required().label('First name'),\n        last_name: yup.string().required().label('Last name')\n    })\n})\n\nconst stepTwoValidationSchema = yup.object({\n    email: yup.string().required().email().label('Email'),\n    password: yup.string().required().label('Password')\n})\n\nconst Formik2 = () => {\n    const [data, setData] = useState({\n        name: {\n            first_name: '',\n            last_name: '',\n        },\n        email: '',\n        password: ''\n    })\n\n    const [currentStep, setCurrentStep] = useState(0)\n\n    const makeRequest = (formData) => {\n        console.log('form is submitted', formData)\n    }\n\n    const handleNextStep = (newData, final = false) => {\n        setData((prev) => ({ ...prev, ...newData }))\n\n        if(final) {\n            makeRequest(newData)\n            return\n        }\n\n        setCurrentStep((prev) => prev + 1);\n    }\n\n    const handlePrevStep = (newData) => {\n      setData((prev) => ({ ...prev, ...newData }))\n      setCurrentStep((prev) => prev - 1);\n    }\n\n    const steps = [\n        <StepOne next={handleNextStep} data={data} />, \n        <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />\n    ]\n\n    return (\n        <>\n            <div>\n                {steps[currentStep]}\n            </div>\n        </>\n    )\n}\n\nconst StepOne = (props) => {\n\n    const handleSubmit = (values) => {\n        props.next(values)\n    }\n\n    return (\n        <Formik\n            validationSchema={stepOneValidationSchema}\n            initialValues={props.data}\n            onSubmit={handleSubmit}\n        >\n                {() => (\n                    <Form>\n                        <p>First name</p>\n                        <Field name='name.first_name'/>\n                        <ErrorMessage name='name.first_name' />\n\n                        <p>Last name</p>\n                        <Field name='last_name'/>\n                        <ErrorMessage name='name.last_name' />\n\n                        <button type='submit'>Next</button>\n                    </Form>\n                )}\n        </Formik>\n    )\n}\n\nconst StepTwo = (props) => {\n\n    const handleSubmit = (values) => {\n        props.next(values, true)\n    }\n\n    return (\n        <Formik\n            validationSchema={stepTwoValidationSchema}\n            initialValues={props.data}\n            onSubmit={handleSubmit}\n        >\n            {({ values }) => (\n                <Form>\n\n                    <p>Email</p>\n                    <Field name='email'/>\n                    <ErrorMessage name='email' />\n\n                    <p>Password</p>\n                    <Field name='password'/>\n                    <ErrorMessage name='password' />\n\n                    <button type='button' onClick={() => props.prev(values)}>Back</button>\n                    <button type='submit'>Submit</button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default Formik2\n"]},"metadata":{},"sourceType":"module"}