{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/SomeQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SomeQuestions = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      part_of_complex: '',\n      is_existing_complex: '',\n      introduction: {\n        existing_complex_name: '',\n        residence_type: '',\n        vhe_type: ''\n      }\n    },\n\n    /* validationSchema: validationSchema, */\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Is the residence part of a complex?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            onChange: formik.handleChange,\n            name: \"radioResult\",\n            value: formik.values.inCompliance,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 38\n              }, this),\n              label: \"True Label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 38\n              }, this),\n              label: \"False Label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            onChange: formik.handleChange,\n            name: \"radioResult\",\n            value: formik.values.inCompliance,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  'color': '#909090'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 69\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  'color': '#909090'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 70\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SomeQuestions, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SomeQuestions;\nexport default SomeQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"SomeQuestions\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/SomeQuestions.js"],"names":["React","useFormik","Button","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","SomeQuestions","formik","initialValues","part_of_complex","is_existing_complex","introduction","existing_complex_name","residence_type","vhe_type","onSubmit","values","console","log","handleSubmit","color","handleChange","inCompliance"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { useFormik } from 'formik'\n\nimport {\n    Button,\n    Radio,\n    RadioGroup,\n    FormControlLabel,\n    FormControl,\n    FormLabel\n} from '@mui/material'\n\nconst SomeQuestions = () => {\n\n    const formik = useFormik({\n        initialValues: {\n            part_of_complex: '',\n            is_existing_complex: '',\n            introduction: {\n                existing_complex_name: '',\n                residence_type: '',\n                vhe_type: ''\n            }\n        },\n        /* validationSchema: validationSchema, */\n        onSubmit: (values) => {\n            console.log(values)\n        }\n    })\n\n    return (\n        <>\n            <div>\n                <form onSubmit={formik.handleSubmit}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Is the residence part of a complex?</FormLabel>\n                        <RadioGroup\n                            onChange={formik.handleChange}\n                            name=\"radioResult\"\n                            value={formik.values.inCompliance}\n                        >\n                            <FormControlLabel\n                            value=\"true\"\n                            control={<Radio />}\n                            label=\"True Label\"\n                            />\n                            <FormControlLabel\n                            value=\"false\"\n                            control={<Radio />}\n                            label=\"False Label\"\n                            />\n                        </RadioGroup>\n                        <RadioGroup\n                            onChange={formik.handleChange}\n                            name='radioResult'\n                            value={formik.values.inCompliance}\n                        >\n                            <FormControlLabel value='true' control={<Radio style={{ 'color': '#909090'}} />} label='Yes' />\n                            <FormControlLabel value='false' control={<Radio style={{ 'color': '#909090'}} />} label='No' />\n                        </RadioGroup>\n                    </FormControl>\n                    \n                    <Button color='primary' variant='contained' fullWidth type='submit'>\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default SomeQuestions\n"]},"metadata":{},"sourceType":"module"}