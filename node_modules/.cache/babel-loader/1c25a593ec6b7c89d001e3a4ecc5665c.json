{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, FieldArray } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Colors = ({\n  friend,\n  name\n}) => /*#__PURE__*/_jsxDEV(FieldArray, {\n  name: name,\n  render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '8px',\n      backgroundColor: 'rgba(0,0,0,0.1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        arrayHelpers.move(0, 1);\n      },\n      children: \"Move Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), friend.likedColors.length ? friend.likedColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: `${name}.${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.remove(index),\n        children: \"remove Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.insert(index, ''),\n        children: \"Add Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => arrayHelpers.push(''),\n      children: \"Add a color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Colors;\n\nconst LivingPlaceInformations = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Anywhere in your app!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      friends: [{\n        name: 'Russell',\n        isActive: true,\n        likedColors: ['blue', 'red']\n      }, {\n        name: 'Seth',\n        isActive: true,\n        likedColors: ['yellow']\n      }]\n    },\n    onSubmit: data => {\n      console.log(data);\n      props.next(data);\n    },\n    children: ({\n      values,\n      handleChange\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"friends\",\n          render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                arrayHelpers.move(0, 3);\n              },\n              children: \"Move\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), values.friends && values.friends.length > 0 ? values.friends.map((friend, index) => !friend.isActive ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '24px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: `friends.${index}.name`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n                ,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => arrayHelpers.insert(index, {\n                  name: '',\n                  isActive: true,\n                  likedColors: []\n                }) // insert an empty string at a position\n                ,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Colors, {\n                name: `friends.${index}.likedColors`,\n                friend: friend\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.push({\n                name: '',\n                isActive: true,\n                likedColors: []\n              }),\n              children: \"Add a friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 5\n}, this);\n\n_c2 = LivingPlaceInformations;\nexport default LivingPlaceInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Colors\");\n$RefreshReg$(_c2, \"LivingPlaceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js"],"names":["React","ReactDOM","Formik","Field","FieldArray","Colors","friend","name","arrayHelpers","marginTop","backgroundColor","move","likedColors","length","map","color","index","remove","insert","push","LivingPlaceInformations","props","email","password","friends","isActive","data","console","log","next","values","handleChange","handleSubmit","handleBlur"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Formik, Field, FieldArray } from 'formik'\n\nconst Colors = ({ friend, name }) => (\n  <FieldArray\n    name={name}\n    render={arrayHelpers => (\n        <div style={{ marginTop: '8px', backgroundColor: 'rgba(0,0,0,0.1' }}>\n            <button type='button' onClick={() => { arrayHelpers.move(0, 1) }}>Move Colors</button>\n            {friend.likedColors.length ? (\n                friend.likedColors.map((color, index) => (\n                    <div key={index}>\n                        <Field name={`${name}.${index}`} />\n                        <button type='button' onClick={() => arrayHelpers.remove(index)}>remove Color</button>\n                        <button type='button' onClick={() => arrayHelpers.insert(index, '')}>Add Color</button>\n                    </div>\n                ))\n            ) : (\n                <button type='button' onClick={() => arrayHelpers.push('')}>Add a color</button>\n            )}\n        </div>\n    )}\n  />\n)\n\nconst LivingPlaceInformations = (props) => (\n    <div>\n        <h1>Anywhere in your app!</h1>\n        <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                friends: [\n                    { name: 'Russell', isActive: true, likedColors: ['blue', 'red'] },\n                    { name: 'Seth', isActive: true, likedColors: ['yellow'] }\n                ]\n            }}\n            onSubmit={(data) => {\n                console.log(data)\n                props.next(data)\n            }}\n        >\n            {({ values, handleChange }) => {\n                return (\n                <form onSubmit={handleSubmit}>\n                    <input\n                    type='email'\n                    name='email'\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    />\n                    <input\n                    type='password'\n                    name='password'\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                    />\n                    <FieldArray\n                    name='friends'\n                    render={arrayHelpers => (\n                        <div>\n                        <button\n                            type='button'\n                            onClick={() => {\n                            arrayHelpers.move(0, 3)\n                            }}\n                        >\n                            Move\n                        </button>\n                        {values.friends && values.friends.length > 0 ? (\n                            values.friends.map(\n                            (friend, index) =>\n                                !friend.isActive ? null : (\n                                <div key={index} style={{ marginTop: '24px' }}>\n                                    <Field name={`friends.${index}.name`} />\n                                    <button\n                                    type='button'\n                                    onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\n                                    >\n                                    -\n                                    </button>\n                                    <button\n                                    type='button'\n                                    onClick={() =>\n                                        arrayHelpers.insert(index, {\n                                        name: '',\n                                        isActive: true,\n                                        likedColors: []\n                                        })\n                                    } // insert an empty string at a position\n                                    >\n                                    +\n                                    </button>\n                                    <Colors\n                                    name={`friends.${index}.likedColors`}\n                                    friend={friend}\n                                    />\n                                </div>\n                                )\n                            )\n                        ) : (\n                            <button\n                            type='button'\n                            onClick={() =>\n                                arrayHelpers.push({\n                                name: '',\n                                isActive: true,\n                                likedColors: []\n                                })\n                            }\n                            >\n                            {/* show this when user has removed all friends from the list */}\n                            Add a friend\n                            </button>\n                        )}\n                        <div>\n                            <button type='submit'>Submit</button>\n                        </div>\n                        </div>\n                    )}\n                    />\n                </form>\n                )\n            }}\n        </Formik>\n    </div>\n)\n\nexport default LivingPlaceInformations\n"]},"metadata":{},"sourceType":"module"}