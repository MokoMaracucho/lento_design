{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/FloorplanInformations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, FormLabel, TextField } from '@mui/material';\nimport { AddIcon, DeleteForeverIcon } from '@mui/icons-material/';\nimport { useData } from '../../Context/LivingPlaceRegistrationContext';\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index';\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  floorplan: Yup.array().of(Yup.object().shape({\n    floor: Yup.number().required('Test'),\n    area: Yup.number().required('Test')\n  })).required('Test')\n});\n\nconst ErrorMessage = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: name,\n  render: ({\n    form\n  }) => {\n    const error = getIn(form.errors, name);\n    const touch = getIn(form.touched, name);\n    return touch && error ? error : null;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 5\n}, this);\n\n_c = ErrorMessage;\nconst initialValues = {\n  floorplan: [{\n    floor: '',\n    area: ''\n  }]\n};\n\nconst FloorplanInformations = () => {\n  _s();\n\n  LivingPlaceRegistrationTimelineState.maxStep = 4;\n  const {\n    setValues,\n    data\n  } = useData();\n  const navigate = useNavigate();\n\n  const previewStep = data => {\n    navigate('/living_place_registration/residence_informations');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Floorplan informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues\n      /* validationSchema={validationSchema} */\n      ,\n      onSubmit: data => {\n        navigate('/living_place_registration/floorplan_informations');\n        setValues(data);\n        console.log(data);\n      },\n      children: ({\n        values,\n        handleChange,\n        touched,\n        errors\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"floorplan\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [values.floorplan.length > 0 && values.floorplan.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                style: {\n                  color: 'black',\n                  marginBottom: '10px'\n                },\n                children: \"Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: `floorplan.${index}.floor`,\n                value: room.floor,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: `floorplan.${index}.floor`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                style: {\n                  color: 'black',\n                  marginBottom: '10px'\n                },\n                children: \"Area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: `floorplan.${index}.area`,\n                value: room.area,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: `floorplan.${index}.area`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Buttonn, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  onClick: () => remove(index),\n                  children: [/*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 122\n                  }, this), \">\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 41\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              onClick: () => push({\n                floor: '',\n                area: ''\n              }),\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 125\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: previewStep,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FloorplanInformations, \"r1U9ATBXB54+AqjIXC7kIkyJxBk=\", false, function () {\n  return [useData, useNavigate];\n});\n\n_c2 = FloorplanInformations;\nexport default FloorplanInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"FloorplanInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/FloorplanInformations.js"],"names":["React","Formik","Form","Field","FieldArray","getIn","Yup","useNavigate","Button","FormLabel","TextField","AddIcon","DeleteForeverIcon","useData","LivingPlaceRegistrationTimeline","LivingPlaceRegistrationTimelineState","validationSchema","object","shape","floorplan","array","of","floor","number","required","area","ErrorMessage","name","form","error","errors","touch","touched","initialValues","FloorplanInformations","maxStep","setValues","data","navigate","previewStep","console","log","values","handleChange","remove","push","length","map","room","index","color","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, FormLabel, TextField } from '@mui/material'\nimport { AddIcon, DeleteForeverIcon } from '@mui/icons-material/'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nconst validationSchema = Yup.object().shape({\n    floorplan: Yup.array().of(\n        Yup.object().shape({\n          floor: Yup.number().required('Test'),\n          area: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nconst initialValues = {\n    floorplan: [\n    {\n      floor: '',\n      area: ''\n    }\n  ]\n}\n\nconst FloorplanInformations = () => {\n\n    LivingPlaceRegistrationTimelineState.maxStep = 4\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        navigate('/living_place_registration/residence_informations')\n    }\n\n    return (\n        <>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Floorplan informations</h5>\n\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    navigate('/living_place_registration/floorplan_informations')\n                    setValues(data)\n                    console.log(data)\n                }}\n            >\n                {({ values, handleChange, touched, errors }) => (\n                    <Form>\n                        <FieldArray name='floorplan'>\n                            {({ remove, push }) => (\n                                <div>\n                                    {values.floorplan.length > 0 && values.floorplan.map((room, index) => (\n                                        <div className='row' key={index}>\n\n                                            {/* FLOOR */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                            <TextField\n                                                name={`floorplan.${index}.floor`}\n                                                value={room.floor}\n                                                onChange={handleChange}\n                                            />\n                                            <ErrorMessage name={`floorplan.${index}.floor`} />\n\n                                            {/* AREA */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                                            <TextField\n                                                name={`floorplan.${index}.area`}\n                                                value={room.area}\n                                                onChange={handleChange}\n                                            />\n                                            <ErrorMessage name={`floorplan.${index}.area`} />\n\n                                            <div className='col'>\n                                                <Buttonn type='submit' variant='contained' onClick={() => remove(index)}><DeleteForeverIcon />></Buttonn>\n                                            </div>\n                                        </div>\n                                    ))}\n                                    <Button type='submit' variant='contained' onClick={() => push({ floor: '', area: '' })}><AddIcon /></Button>\n                                </div>\n                            )}\n                        </FieldArray>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' variant='contained' onClick={previewStep}>\n                            Previous\n                        </Button>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' color='primary' variant='contained'>\n                            Next\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default FloorplanInformations"]},"metadata":{},"sourceType":"module"}