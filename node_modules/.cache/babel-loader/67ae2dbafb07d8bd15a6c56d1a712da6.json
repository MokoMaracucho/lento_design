{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/DataContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const setValues = values => {\n    setData(prevData => ({ ...prevData,\n      ...values\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      data,\n      setValues\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataProvider, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c = DataProvider;\nexport const useData = () => {\n  _s2();\n\n  return useContext(DataContext);\n};\n\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Context/DataContext.js"],"names":["React","createContext","useState","useContext","DataContext","DataProvider","children","data","setData","setValues","values","prevData","useData"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,OAAO,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,SAAS,GAAIC,MAAD,IAAY;AAC1BF,IAAAA,OAAO,CAAEG,QAAD,KAAe,EACnB,GAAGA,QADgB;AAEnB,SAAGD;AAFgB,KAAf,CAAD,CAAP;AAIH,GALD;;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAA7B;AAAA,cACMH;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;;GAAMD,Y;;KAAAA,Y;AAkBb,OAAO,MAAMO,OAAO,GAAG;AAAA;;AAAA,SAAMT,UAAU,CAACC,WAAD,CAAhB;AAAA,CAAhB;;IAAMQ,O","sourcesContent":["import React, { createContext, useState, useContext } from 'react'\n\nconst DataContext = createContext()\n\nexport const DataProvider = ({ children }) => {\n\n    const [data, setData] = useState({})\n\n    const setValues = (values) => {\n        setData((prevData) => ({\n            ...prevData,\n            ...values\n        }))\n    }\n\n    return (\n        <DataContext.Provider value={{ data, setValues }}>\n            { children }\n        </DataContext.Provider>\n    )\n}\n\nexport const useData = () => useContext(DataContext)"]},"metadata":{},"sourceType":"module"}