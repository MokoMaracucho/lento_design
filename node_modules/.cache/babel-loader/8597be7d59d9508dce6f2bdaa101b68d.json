{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/RoomsInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, useFormik, Form, Field, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material';\nimport { useData } from '../../Context/LivingPlaceRegistrationContext';\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index';\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState';\nimport roomTypes from '../../Json/RoomTypes';\nimport roomFacilities from '../../Json/RoomFacilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialValues = {\n  rooms: ''\n};\nlet roomsArray = [];\nconst room = {\n  room_type: '',\n  room_number: '',\n  floor: '',\n  dimension_m2: '',\n  coliving_allowed: '',\n  number_of_living_places: '',\n  room_facility_type: {\n    wardrobe: '',\n    sink: '',\n    working_space: '',\n    fridge: '',\n    built_in_wardrobe: ''\n  },\n  vhes: []\n};\nconst validationSchema = Yup.object().shape({\n  rooms: Yup.array().of(Yup.object().shape({\n    room_type: Yup.string().required('Test'),\n    room_number: Yup.number().required('Test'),\n    floor: Yup.number().required('Test'),\n    dimension_m2: Yup.number().required('Test'),\n    coliving_allowed: Yup.boolean().required('Test'),\n    number_of_living_places: Yup.number().required('Test')\n  })).required('Test')\n});\n\nconst ErrorMessage = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: name,\n  render: ({\n    form\n  }) => {\n    const error = getIn(form.errors, name);\n    const touch = getIn(form.touched, name);\n    return touch && error ? error : null;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 5\n}, this);\n\n_c = ErrorMessage;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst RoomsInformations = () => {\n  _s();\n\n  const [roomsArrayCreated, setRoomsArrayCreated] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  LivingPlaceRegistrationTimelineState.maxStep = 5;\n  const {\n    setValues,\n    data\n  } = useData();\n  const navigate = useNavigate();\n\n  const previewStep = data => {\n    LivingPlaceRegistrationTimelineState.step = 4;\n    navigate('/living_place_registration/floorplan_informations');\n  };\n\n  const numberOfRooms = parseInt(data.residence.number_rooms_with_vhes);\n\n  const setRoomsArray = numberOfRooms => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      roomsArray.push(room);\n    }\n  };\n\n  useEffect(() => {\n    setRoomsArray(numberOfRooms);\n    setRoomsArrayCreated(true);\n  }, [numberOfRooms]);\n  initialValues.rooms = roomsArray;\n  const formik = useFormik({\n    initialValues: initialValues,\n\n    /* validationSchema: validationSchema, */\n    onSubmit: data => {\n      setValues(data);\n      LivingPlaceRegistrationTimelineState.step = 6;\n      navigate('/living_place_registration/living_places_informations');\n      console.log(data);\n    }\n  });\n  if (!roomsArrayCreated) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Rooms informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"complexInfos__div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-large blue_COLOR\",\n        style: {\n          marginTop: '10px'\n        },\n        children: data.complex.complex_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-medium\",\n        style: {\n          marginTop: '-10px'\n        },\n        children: [data.complex.street, ' ', data.complex.complex_house_number, ', ', data.complex.postal_code, ' ', data.complex.city, ' (', data.complex.country, ')']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"rooms\",\n        children: ({\n          remove,\n          push,\n          touched,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                borderBottom: 1,\n                borderColor: 'divider'\n              },\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: value,\n                onChange: handleChangeTab,\n                \"aria-label\": \"basic tabs example\",\n                centered: true,\n                children: Array.from(Array(numberOfRooms), (e, index) => {\n                  return /*#__PURE__*/_jsxDEV(Tab, {\n                    label: `Room ${index + 1}`,\n                    ...a11yProps(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 57\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this), data.residence.number_rooms_with_vhes > 0 && data.rooms.map((room, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: value,\n              index: index,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: [\"Living place type \", index]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    name: `rooms.${index}.room_type`,\n                    value: formik.room.room_type,\n                    onChange: formik.handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: \"Choose a room type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 61\n                    }, this), roomTypes.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item.value,\n                      children: item.label\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 65\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `rooms.${index}.room_type`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    color: 'black',\n                    marginBottom: '10px'\n                  },\n                  children: \"Room number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: `rooms.${index}.room_number`,\n                  value: formik.room.room_number,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `rooms.${index}.room_number`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    color: 'black',\n                    marginBottom: '10px'\n                  },\n                  children: \"Floor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: `rooms.${index}.floor`,\n                  value: formik.room.floor,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `rooms.${index}.floor`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    color: 'black',\n                    marginBottom: '10px'\n                  },\n                  children: \"Dimension in m2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: `rooms.${index}.dimension_m2`,\n                  value: formik.room.dimension_m2,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `rooms.${index}.dimension_m2`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  component: \"fieldset\",\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black'\n                    },\n                    children: \"Coliving allowed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    name: `rooms.${index}.coliving_allowed`,\n                    value: formik.room.coliving_allowed,\n                    onChange: formik.handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"true\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 74\n                      }, this),\n                      label: \"True\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"false\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 74\n                      }, this),\n                      label: \"False\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `rooms.${index}.coliving_allowed`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  component: \"legend\",\n                  style: {\n                    color: 'black',\n                    marginBottom: '10px'\n                  },\n                  children: \"Number of living places\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: `rooms.${index}.number_of_living_places`,\n                  value: formik.room.number_of_living_places,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: `rooms.${index}.number_of_living_places`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Facility types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: roomFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        onChange: e => {\n                          formik.setFieldValue(`complex.complex_facility_type.${item.value}`, e.target.checked);\n                        },\n                        name: `complex.complex_facility_type.${item.value}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 73\n                      }, this),\n                      label: item.label\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 65\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        onClick: previewStep,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RoomsInformations, \"CQzuoS9chnTSqcpcxO+31pr9mqw=\", false, function () {\n  return [useData, useNavigate, useFormik];\n});\n\n_c3 = RoomsInformations;\nexport default RoomsInformations;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"RoomsInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/RoomsInformations.js"],"names":["React","useState","useEffect","Formik","useFormik","Form","Field","FieldArray","getIn","Yup","useNavigate","PropTypes","Button","Box","Tabs","Tab","Typography","FormLabel","TextField","FormControl","Select","MenuItem","RadioGroup","FormControlLabel","Radio","FormGroup","Checkbox","useData","LivingPlaceRegistrationTimeline","LivingPlaceRegistrationTimelineState","roomTypes","roomFacilities","initialValues","rooms","roomsArray","room","room_type","room_number","floor","dimension_m2","coliving_allowed","number_of_living_places","room_facility_type","wardrobe","sink","working_space","fridge","built_in_wardrobe","vhes","validationSchema","object","shape","array","of","string","required","number","boolean","ErrorMessage","name","form","error","errors","touch","touched","TabPanel","props","children","value","index","other","p","propTypes","node","isRequired","a11yProps","id","RoomsInformations","roomsArrayCreated","setRoomsArrayCreated","setValue","handleChangeTab","event","newValue","maxStep","setValues","data","navigate","previewStep","step","numberOfRooms","parseInt","residence","number_rooms_with_vhes","setRoomsArray","i","push","formik","onSubmit","console","log","marginTop","complex","complex_name","street","complex_house_number","postal_code","city","country","remove","width","borderBottom","borderColor","Array","from","e","map","color","marginBottom","handleChange","item","label","setFieldValue","target","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Formik, useFormik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Button, Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport roomTypes from '../../Json/RoomTypes'\nimport roomFacilities from '../../Json/RoomFacilities'\n\nlet initialValues = {\n    rooms: ''\n}\n\nlet roomsArray = []\n\nconst room = {\n    room_type: '',\n    room_number: '',\n    floor: '',\n    dimension_m2: '',\n    coliving_allowed: '',\n    number_of_living_places: '',\n    room_facility_type:  {\n        wardrobe: '',\n        sink: '',\n        working_space: '',\n        fridge: '',\n        built_in_wardrobe: ''\n    },\n    vhes: []\n}\n\nconst validationSchema = Yup.object().shape({\n    rooms: Yup.array().of(\n        Yup.object().shape({\n            room_type: Yup.string().required('Test'),\n            room_number: Yup.number().required('Test'),\n            floor: Yup.number().required('Test'),\n            dimension_m2: Yup.number().required('Test'),\n            coliving_allowed: Yup.boolean().required('Test'),\n            number_of_living_places: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst RoomsInformations = () => {\n\n    const [roomsArrayCreated, setRoomsArrayCreated] = useState(false)\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    LivingPlaceRegistrationTimelineState.maxStep = 5\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 4\n        navigate('/living_place_registration/floorplan_informations')\n    }\n\n    const numberOfRooms = parseInt(data.residence.number_rooms_with_vhes)\n    \n    const setRoomsArray = (numberOfRooms) => {\n        for (let i = 0; i < numberOfRooms; i++) {\n            roomsArray.push(room)\n        }\n    }\n\n    useEffect(() => {\n        setRoomsArray(numberOfRooms)\n        setRoomsArrayCreated(true)\n    }, [numberOfRooms])\n\n    initialValues.rooms = roomsArray\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        /* validationSchema: validationSchema, */\n        onSubmit: (data) => {\n            setValues(data)\n            LivingPlaceRegistrationTimelineState.step = 6\n            navigate('/living_place_registration/living_places_informations')\n            console.log(data)\n        }\n    })\n\n    if(!roomsArrayCreated) return null\n\n    return (\n        <>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Rooms informations</h5>\n\n            <div id='complexInfos__div'>\n                <p className='p-large blue_COLOR' style={{marginTop: '10px'}}>{data.complex.complex_name}</p>\n                <p className='p-medium' style={{marginTop: '-10px'}}>\n                    {/* Van Koetsveldstraat 25, 3532 ES Utrecht (NL) */}\n                    {data.complex.street}\n                    {' '}\n                    {data.complex.complex_house_number}\n                    {', '}\n                    {data.complex.postal_code}\n                    {' '}\n                    {data.complex.city}\n                    {' ('}\n                    {data.complex.country}\n                    {')'}\n                </p>\n            </div>\n\n            {/* <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(data) => {\n                    setValues(data)\n                    LivingPlaceRegistrationTimelineState.step = 6\n                    navigate('/living_place_registration/living_places_informations')\n                    console.log(data)\n                }}\n            > */}\n                {/* {({ values, formik.handleChange, setFieldValue }) => ( */}\n                    {/* <Form> */}\n                    <form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push, touched, errors }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label={`Room ${index + 1}`} {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {data.residence.number_rooms_with_vhes > 0 && data.rooms.map((room, index) => (\n                                            <TabPanel value={value} index={index}>\n            \n                                                {/* LIVING PLACE TYPE */}\n                                                <div>\n                                                    <FormControl>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type {index}</FormLabel>\n                                                        <Select\n                                                            name={`rooms.${index}.room_type`}\n                                                            value={formik.room.room_type}\n                                                            onChange={formik.handleChange}\n                                                        >\n                                                            <MenuItem value=''>Choose a room type</MenuItem>\n                                                            {roomTypes.map((item, index) => (\n                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                            ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                    <ErrorMessage name={`rooms.${index}.room_type`} />\n                                                </div>\n\n                                                {/* ROOM NUMBER */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Room number</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.room_number`}\n                                                        value={formik.room.room_number}\n                                                        onChange={formik.handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.room_number`} />\n                                                </div>\n\n                                                {/* FLOOR */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.floor`}\n                                                        value={formik.room.floor}\n                                                        onChange={formik.handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.floor`} />\n                                                </div>\n\n                                                {/* DIMENSION M2 */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Dimension in m2</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.dimension_m2`}\n                                                        value={formik.room.dimension_m2}\n                                                        onChange={formik.handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.dimension_m2`} />\n                                                </div>\n\n                                                {/* COLIVING ALLOWED */}\n                                                <div>\n                                                    <FormControl component='fieldset'>\n                                                        <FormLabel component='legend' style={{ color: 'black'}}>Coliving allowed</FormLabel>\n                                                        <RadioGroup\n                                                            name={`rooms.${index}.coliving_allowed`}\n                                                            value={formik.room.coliving_allowed}\n                                                            onChange={formik.handleChange}\n                                                        >\n                                                            <FormControlLabel\n                                                                value='true'\n                                                                control={<Radio />}\n                                                                label='True'\n                                                            />\n                                                            <FormControlLabel\n                                                                value='false'\n                                                                control={<Radio />}\n                                                                label='False'\n                                                            />\n                                                        </RadioGroup>\n                                                    </FormControl>\n                                                    <ErrorMessage name={`rooms.${index}.coliving_allowed`} />\n                                                </div>\n\n                                                {/* NUMBER OF LIVING PLACES */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of living places</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.number_of_living_places`}\n                                                        value={formik.room.number_of_living_places}\n                                                        onChange={formik.handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.number_of_living_places`} />\n                                                </div>\n\n                                                {/* FACILITY TYPES */}\n                                                <div>\n                                                    <FormGroup>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                        <FormGroup>\n                                                            {roomFacilities.map((item, index) => (\n                                                                <FormControlLabel key={index}\n                                                                    control={\n                                                                        <Checkbox\n                                                                            onChange={(e) => {\n                                                                                formik.setFieldValue(`complex.complex_facility_type.${item.value}`, e.target.checked)\n                                                                            }}\n                                                                            name={`complex.complex_facility_type.${item.value}`}\n                                                                        />}\n                                                                    label={item.label}\n                                                                />\n                                                            ))}\n                                                        </FormGroup>\n                                                    </FormGroup>\n                                                </div>\n                                            </TabPanel>\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' variant='contained' onClick={previewStep}>\n                            Previous\n                        </Button>\n\n                        {/* NEXT */}\n                        <Button type='submit' color='primary' variant='contained'>\n                            Next\n                        </Button>\n                    </form>\n                    {/* </Form> */}\n                {/* )} */}\n            {/* </Formik> */}\n        </>\n    )\n}\n\nexport default RoomsInformations"]},"metadata":{},"sourceType":"module"}