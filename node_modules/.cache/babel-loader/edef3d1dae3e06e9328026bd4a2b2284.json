{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/ResidenceInformations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik, getIn } from 'formik';\nimport * as yup from 'yup';\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup } from '@mui/material';\nimport residenceFacilities from '../../Json/ResidenceFacilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  residence: yup.object({\n    house_number: yup.number().required('test'),\n    floor: yup.number().integer().required('test'),\n    rental_permit: yup.boolean().required('test'),\n    visible_on_platform: yup.boolean().required('test'),\n    snf_certificate_approved: yup.boolean().required('test'),\n    akf_certificate_approved: yup.boolean().required('test'),\n    number_rooms: yup.number().integer().required('test'),\n    number_rooms_with_vhes: yup.number().integer().required('test'),\n    residence_facility_type: {\n      kitchen: '',\n      bathroom: '',\n      common_room: ''\n    }\n  })\n});\n\nconst ResidenceInformations = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      residence: {\n        house_number: '',\n        house_number_extension: '',\n        floor: '',\n        rental_permit: '',\n        visible_on_platform: '',\n        snf_certificate_approved: '',\n        akf_certificate_approved: '',\n        number_rooms: '',\n        number_rooms_with_vhes: '',\n        residence_facility_type: {\n          kitchen: '',\n          bathroom: '',\n          common_room: ''\n        }\n      }\n    },\n    validationSchema: validationSchema,\n    onSubmit: data => {\n      console.log(data);\n      props.next(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"House number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"complex.complex_name\",\n          value: formik.values.complex.complex_name,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name')),\n          helperText: getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"House number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"residence.house_number\",\n          value: formik.values.residence.house_number,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number')),\n          helperText: getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"House number extension\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"residence.house_number_extension\",\n          value: formik.values.residence.house_number_extension,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"residence.floor\",\n          value: formik.values.residence.floor,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.floor') && Boolean(getIn(formik.errors, 'residence.floor')),\n          helperText: getIn(formik.touched, 'residence.floor') && getIn(formik.errors, 'residence.floor')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Rental permit?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"residence.rental_permit\",\n            value: formik.values.residence.rental_permit,\n            onChange: formik.handleChange,\n            error: getIn(formik.touched, 'residence.rental_permit') && Boolean(getIn(formik.errors, 'residence.rental_permit')),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 42\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 42\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), getIn(formik.touched, 'residence.rental_permit') && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getIn(formik.errors, 'residence.rental_permit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Always visible?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"residence.visible_on_platform\",\n            value: formik.values.residence.visible_on_platform,\n            onChange: formik.handleChange,\n            error: getIn(formik.touched, 'residence.visible_on_platform') && Boolean(getIn(formik.errors, 'residence.visible_on_platform')),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 42\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 42\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), getIn(formik.touched, 'residence.visible_on_platform') && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getIn(formik.errors, 'residence.visible_on_platform')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"SNF certificate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"residence.snf_certificate_approved\",\n            value: formik.values.residence.snf_certificate_approved,\n            onChange: formik.handleChange,\n            error: getIn(formik.touched, 'residence.snf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.snf_certificate_approved')),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 42\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 42\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), getIn(formik.touched, 'residence.snf_certificate_approved') && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getIn(formik.errors, 'residence.snf_certificate_approved')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"SNF certificate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"residence.akf_certificate_approved\",\n            value: formik.values.residence.akf_certificate_approved,\n            onChange: formik.handleChange,\n            error: getIn(formik.touched, 'residence.akf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.akf_certificate_approved')),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 42\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 42\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), getIn(formik.touched, 'residence.akf_certificate_approved') && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getIn(formik.errors, 'residence.akf_certificate_approved')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"Number of rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"residence.number_rooms\",\n          value: formik.values.residence.number_rooms,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.number_rooms') && Boolean(getIn(formik.errors, 'residence.number_rooms')),\n          helperText: getIn(formik.touched, 'residence.number_rooms') && getIn(formik.errors, 'residence.number_rooms')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          component: \"legend\",\n          style: {\n            color: 'black',\n            marginBottom: '10px'\n          },\n          children: \"... with living place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"residence.number_rooms_with_vhes\",\n          value: formik.values.residence.number_rooms_with_vhes,\n          onChange: formik.handleChange,\n          error: getIn(formik.touched, 'residence.number_rooms_with_vhes') && Boolean(getIn(formik.errors, 'residence.number_rooms_with_vhes')),\n          helperText: getIn(formik.touched, 'residence.number_rooms_with_vhes') && getIn(formik.errors, 'residence.number_rooms_with_vhes')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Facility types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: residenceFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              name: `residence.residence_facility_type.${item.value}`,\n              onChange: formik.handleChange,\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 160\n              }, this),\n              label: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResidenceInformations, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ResidenceInformations;\nexport default ResidenceInformations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidenceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/ResidenceInformations.js"],"names":["React","useFormik","getIn","yup","Button","FormLabel","TextField","FormControl","FormGroup","FormControlLabel","Checkbox","Radio","RadioGroup","residenceFacilities","validationSchema","object","residence","house_number","number","required","floor","integer","rental_permit","boolean","visible_on_platform","snf_certificate_approved","akf_certificate_approved","number_rooms","number_rooms_with_vhes","residence_facility_type","kitchen","bathroom","common_room","ResidenceInformations","props","formik","initialValues","house_number_extension","onSubmit","data","console","log","next","handleSubmit","color","marginBottom","values","complex","complex_name","handleChange","touched","Boolean","errors","map","item","index","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,QAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,WAAvC,EAAoDC,SAApD,EAA+DC,gBAA/D,EAAiFC,QAAjF,EAA2FC,KAA3F,EAAkGC,UAAlG,QAAmH,eAAnH;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC;;;AAEA,MAAMC,gBAAgB,GAAGX,GAAG,CAACY,MAAJ,CAAW;AAChCC,EAAAA,SAAS,EAAEb,GAAG,CAACY,MAAJ,CAAW;AAClBE,IAAAA,YAAY,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,MAAtB,CADI;AAElBC,IAAAA,KAAK,EAAEjB,GAAG,CAACe,MAAJ,GAAaG,OAAb,GAAuBF,QAAvB,CAAgC,MAAhC,CAFW;AAGlBG,IAAAA,aAAa,EAAEnB,GAAG,CAACoB,OAAJ,GAAcJ,QAAd,CAAuB,MAAvB,CAHG;AAIlBK,IAAAA,mBAAmB,EAAErB,GAAG,CAACoB,OAAJ,GAAcJ,QAAd,CAAuB,MAAvB,CAJH;AAKlBM,IAAAA,wBAAwB,EAAEtB,GAAG,CAACoB,OAAJ,GAAcJ,QAAd,CAAuB,MAAvB,CALR;AAMlBO,IAAAA,wBAAwB,EAAEvB,GAAG,CAACoB,OAAJ,GAAcJ,QAAd,CAAuB,MAAvB,CANR;AAOlBQ,IAAAA,YAAY,EAAExB,GAAG,CAACe,MAAJ,GAAaG,OAAb,GAAuBF,QAAvB,CAAgC,MAAhC,CAPI;AAQlBS,IAAAA,sBAAsB,EAAEzB,GAAG,CAACe,MAAJ,GAAaG,OAAb,GAAuBF,QAAvB,CAAgC,MAAhC,CARN;AASlBU,IAAAA,uBAAuB,EAAE;AACrBC,MAAAA,OAAO,EAAE,EADY;AAErBC,MAAAA,QAAQ,EAAE,EAFW;AAGrBC,MAAAA,WAAW,EAAE;AAHQ;AATP,GAAX;AADqB,CAAX,CAAzB;;AAkBA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAErC,QAAMC,MAAM,GAAGlC,SAAS,CAAC;AACrBmC,IAAAA,aAAa,EAAE;AACXpB,MAAAA,SAAS,EAAE;AACPC,QAAAA,YAAY,EAAE,EADP;AAEPoB,QAAAA,sBAAsB,EAAE,EAFjB;AAGPjB,QAAAA,KAAK,EAAE,EAHA;AAIPE,QAAAA,aAAa,EAAE,EAJR;AAKPE,QAAAA,mBAAmB,EAAE,EALd;AAMPC,QAAAA,wBAAwB,EAAE,EANnB;AAOPC,QAAAA,wBAAwB,EAAE,EAPnB;AAQPC,QAAAA,YAAY,EAAE,EARP;AASPC,QAAAA,sBAAsB,EAAE,EATjB;AAUPC,QAAAA,uBAAuB,EAAE;AACrBC,UAAAA,OAAO,EAAE,EADY;AAErBC,UAAAA,QAAQ,EAAE,EAFW;AAGrBC,UAAAA,WAAW,EAAE;AAHQ;AAVlB;AADA,KADM;AAmBrBlB,IAAAA,gBAAgB,EAAEA,gBAnBG;AAoBrBwB,IAAAA,QAAQ,EAAGC,IAAD,IAAU;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,KAAK,CAACQ,IAAN,CAAWH,IAAX;AACH;AAvBoB,GAAD,CAAxB;AA0BA,sBACI;AAAA,2BACI;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEJ,MAAM,CAACQ,YAAvB;AAAA,gCAGI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,sBADT;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAcC,OAAd,CAAsBC,YAFjC;AAGI,UAAA,QAAQ,EAAEb,MAAM,CAACc,YAHrB;AAII,UAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,sBAAjB,CAAL,IAAiDC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,sBAAhB,CAAN,CAJnE;AAKI,UAAA,UAAU,EAAElD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,sBAAjB,CAAL,IAAiDhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,sBAAhB;AALtE;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAaI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAER,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,wBADT;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBC,YAFnC;AAGI,UAAA,QAAQ,EAAEkB,MAAM,CAACc,YAHrB;AAII,UAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,wBAAjB,CAAL,IAAmDC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,wBAAhB,CAAN,CAJrE;AAKI,UAAA,UAAU,EAAElD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,wBAAjB,CAAL,IAAmDhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,wBAAhB;AALxE;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAuBI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAER,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eAwBI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,kCADT;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBqB,sBAFnC;AAGI,UAAA,QAAQ,EAAEF,MAAM,CAACc;AAHrB;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eA+BI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAEL,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAgCI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,iBADT;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBI,KAFnC;AAGI,UAAA,QAAQ,EAAEe,MAAM,CAACc,YAHrB;AAII,UAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,iBAAjB,CAAL,IAA4CC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,iBAAhB,CAAN,CAJ9D;AAKI,UAAA,UAAU,EAAElD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,iBAAjB,CAAL,IAA4ChD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,iBAAhB;AALjE;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAyCI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,QAArB;AAA8B,YAAA,KAAK,EAAE;AAAER,cAAAA,KAAK,EAAE;AAAT,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,yBADT;AAEI,YAAA,KAAK,EAAET,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBM,aAFnC;AAGI,YAAA,QAAQ,EAAEa,MAAM,CAACc,YAHrB;AAII,YAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,yBAAjB,CAAL,IAAoDC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,yBAAhB,CAAN,CAJtE;AAAA,oCAMI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,OADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAmBKlD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,yBAAjB,CAAL,iBACG;AAAA,sBACKhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,yBAAhB;AADV;AAAA;AAAA;AAAA;AAAA,kBApBR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCJ,eAoEI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,QAArB;AAA8B,YAAA,KAAK,EAAE;AAAER,cAAAA,KAAK,EAAE;AAAT,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,+BADT;AAEI,YAAA,KAAK,EAAET,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBQ,mBAFnC;AAGI,YAAA,QAAQ,EAAEW,MAAM,CAACc,YAHrB;AAII,YAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,+BAAjB,CAAL,IAA0DC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,+BAAhB,CAAN,CAJ5E;AAAA,oCAMI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,OADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAmBKlD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,+BAAjB,CAAL,iBACG;AAAA,sBACKhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,+BAAhB;AADV;AAAA;AAAA;AAAA;AAAA,kBApBR;AAAA;AAAA;AAAA;AAAA;AAAA,gBApEJ,eA+FI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,QAArB;AAA8B,YAAA,KAAK,EAAE;AAAER,cAAAA,KAAK,EAAE;AAAT,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,oCADT;AAEI,YAAA,KAAK,EAAET,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBS,wBAFnC;AAGI,YAAA,QAAQ,EAAEU,MAAM,CAACc,YAHrB;AAII,YAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,oCAAjB,CAAL,IAA+DC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,oCAAhB,CAAN,CAJjF;AAAA,oCAMI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,OADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAmBKlD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,oCAAjB,CAAL,iBACG;AAAA,sBACKhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,oCAAhB;AADV;AAAA;AAAA;AAAA;AAAA,kBApBR;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/FJ,eA0HI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,QAArB;AAA8B,YAAA,KAAK,EAAE;AAAER,cAAAA,KAAK,EAAE;AAAT,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,oCADT;AAEI,YAAA,KAAK,EAAET,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBU,wBAFnC;AAGI,YAAA,QAAQ,EAAES,MAAM,CAACc,YAHrB;AAII,YAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,oCAAjB,CAAL,IAA+DC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,oCAAhB,CAAN,CAJjF;AAAA,oCAMI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWI,QAAC,gBAAD;AACI,cAAA,KAAK,EAAC,OADV;AAEI,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAFb;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAmBKlD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,oCAAjB,CAAL,iBACG;AAAA,sBACKhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,oCAAhB;AADV;AAAA;AAAA;AAAA;AAAA,kBApBR;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1HJ,eAqJI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAER,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArJJ,eAsJI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,wBADT;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBW,YAFnC;AAGI,UAAA,QAAQ,EAAEQ,MAAM,CAACc,YAHrB;AAII,UAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,wBAAjB,CAAL,IAAmDC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,wBAAhB,CAAN,CAJrE;AAKI,UAAA,UAAU,EAAElD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,wBAAjB,CAAL,IAAmDhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,wBAAhB;AALxE;AAAA;AAAA;AAAA;AAAA,gBAtJJ,eA+JI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAER,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/JJ,eAgKI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,kCADT;AAEI,UAAA,KAAK,EAAEV,MAAM,CAACW,MAAP,CAAc9B,SAAd,CAAwBY,sBAFnC;AAGI,UAAA,QAAQ,EAAEO,MAAM,CAACc,YAHrB;AAII,UAAA,KAAK,EAAE/C,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,kCAAjB,CAAL,IAA6DC,OAAO,CAACjD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,kCAAhB,CAAN,CAJ/E;AAKI,UAAA,UAAU,EAAElD,KAAK,CAACiC,MAAM,CAACe,OAAR,EAAiB,kCAAjB,CAAL,IAA6DhD,KAAK,CAACiC,MAAM,CAACiB,MAAR,EAAgB,kCAAhB;AALlF;AAAA;AAAA;AAAA;AAAA,gBAhKJ,eAwKI,QAAC,SAAD;AAAA,kCACI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,QAArB;AAA8B,YAAA,KAAK,EAAE;AAAER,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,YAAY,EAAE;AAAhC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA,sBACKhC,mBAAmB,CAACwC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBACrB,QAAC,gBAAD;AAA8B,cAAA,IAAI,EAAG,qCAAoCD,IAAI,CAACE,KAAM,EAApF;AAAuF,cAAA,QAAQ,EAAErB,MAAM,CAACc,YAAxG;AAAsH,cAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBAA/H;AAA4I,cAAA,KAAK,EAAEK,IAAI,CAACG;AAAxJ,eAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxKJ,eAiLI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAC,WAAhC;AAA4C,UAAA,SAAS,MAArD;AAAsD,UAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjLJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2LH,CAvND;;GAAMtB,qB;UAEahC,S;;;KAFbgC,qB;AAyNN,eAAeA,qBAAf","sourcesContent":["import React from 'react'\n\nimport { useFormik, getIn } from 'formik'\nimport * as yup from 'yup'\n\nimport { Button, FormLabel, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, Radio, RadioGroup} from '@mui/material'\n\nimport residenceFacilities from '../../Json/ResidenceFacilities'\n\nconst validationSchema = yup.object({\n    residence: yup.object({\n        house_number: yup.number().required('test'),\n        floor: yup.number().integer().required('test'),\n        rental_permit: yup.boolean().required('test'),\n        visible_on_platform: yup.boolean().required('test'),\n        snf_certificate_approved: yup.boolean().required('test'),\n        akf_certificate_approved: yup.boolean().required('test'),\n        number_rooms: yup.number().integer().required('test'),\n        number_rooms_with_vhes: yup.number().integer().required('test'),\n        residence_facility_type: {\n            kitchen: '',\n            bathroom: '',\n            common_room: ''\n        }\n    })\n})\n\nconst ResidenceInformations = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            residence: {\n                house_number: '',\n                house_number_extension: '',\n                floor: '',\n                rental_permit: '',\n                visible_on_platform: '',\n                snf_certificate_approved: '',\n                akf_certificate_approved: '',\n                number_rooms: '',\n                number_rooms_with_vhes: '',\n                residence_facility_type: {\n                    kitchen: '',\n                    bathroom: '',\n                    common_room: ''\n                }\n            }\n        },\n        validationSchema: validationSchema,\n        onSubmit: (data) => {\n            console.log(data)\n            props.next(data)\n        }\n    })\n\n    return (\n        <>\n            <div>\n                <form onSubmit={formik.handleSubmit}>\n\n                    {/* COMPLEX NAME */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                    <TextField\n                        name='complex.complex_name'\n                        value={formik.values.complex.complex_name}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')}\n                    />\n\n                    {/* HOUSE NUMBER */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number</FormLabel>\n                    <TextField\n                        name='residence.house_number'\n                        value={formik.values.residence.house_number}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.house_number') && Boolean(getIn(formik.errors, 'residence.house_number'))}\n                        helperText={getIn(formik.touched, 'residence.house_number') && getIn(formik.errors, 'residence.house_number')}\n                    />\n\n                    {/* HOUSE NUMBER EXTENSION */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>House number extension</FormLabel>\n                    <TextField\n                        name='residence.house_number_extension'\n                        value={formik.values.residence.house_number_extension}\n                        onChange={formik.handleChange}\n                    />\n\n                    {/* FLOOR */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                    <TextField\n                        name='residence.floor'\n                        value={formik.values.residence.floor}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.floor') && Boolean(getIn(formik.errors, 'residence.floor'))}\n                        helperText={getIn(formik.touched, 'residence.floor') && getIn(formik.errors, 'residence.floor')}\n                    />\n\n                    {/* RENTAL PERMIT */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Rental permit?</FormLabel>\n                        <RadioGroup\n                            name='residence.rental_permit'\n                            value={formik.values.residence.rental_permit}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.rental_permit') && Boolean(getIn(formik.errors, 'residence.rental_permit'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.rental_permit') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.rental_permit')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                    {/* ALWAYS VISIBLE */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>Always visible?</FormLabel>\n                        <RadioGroup\n                            name='residence.visible_on_platform'\n                            value={formik.values.residence.visible_on_platform}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.visible_on_platform') && Boolean(getIn(formik.errors, 'residence.visible_on_platform'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.visible_on_platform') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.visible_on_platform')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                    {/* SNF CERTIFICATE */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                        <RadioGroup\n                            name='residence.snf_certificate_approved'\n                            value={formik.values.residence.snf_certificate_approved}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.snf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.snf_certificate_approved'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.snf_certificate_approved') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.snf_certificate_approved')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                    {/* AKF CERTIFICATE */}\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend' style={{ color: 'black'}}>SNF certificate</FormLabel>\n                        <RadioGroup\n                            name='residence.akf_certificate_approved'\n                            value={formik.values.residence.akf_certificate_approved}\n                            onChange={formik.handleChange}\n                            error={getIn(formik.touched, 'residence.akf_certificate_approved') && Boolean(getIn(formik.errors, 'residence.akf_certificate_approved'))}\n                        >\n                            <FormControlLabel\n                                value='true'\n                                control={<Radio />}\n                                label='Yes'\n                            />\n                            <FormControlLabel\n                                value='false'\n                                control={<Radio />}\n                                label='No'\n                            />\n                        </RadioGroup>\n                        {getIn(formik.touched, 'residence.akf_certificate_approved') && (\n                            <div>\n                                {getIn(formik.errors, 'residence.akf_certificate_approved')}\n                            </div>\n                        )}\n                    </FormControl>\n\n                    {/* NUMBER OF ROOMS */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of rooms</FormLabel>\n                    <TextField\n                        name='residence.number_rooms'\n                        value={formik.values.residence.number_rooms}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.number_rooms') && Boolean(getIn(formik.errors, 'residence.number_rooms'))}\n                        helperText={getIn(formik.touched, 'residence.number_rooms') && getIn(formik.errors, 'residence.number_rooms')}\n                    />\n\n                    {/* NUMBER OF ROOMS WITH LIVING PLACES */}\n                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>... with living place</FormLabel>\n                    <TextField\n                        name='residence.number_rooms_with_vhes'\n                        value={formik.values.residence.number_rooms_with_vhes}\n                        onChange={formik.handleChange}\n                        error={getIn(formik.touched, 'residence.number_rooms_with_vhes') && Boolean(getIn(formik.errors, 'residence.number_rooms_with_vhes'))}\n                        helperText={getIn(formik.touched, 'residence.number_rooms_with_vhes') && getIn(formik.errors, 'residence.number_rooms_with_vhes')}\n                    />\n\n                    <FormGroup>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                        <FormGroup>\n                            {residenceFacilities.map((item, index) => (\n                                <FormControlLabel key={index} name={`residence.residence_facility_type.${item.value}`} onChange={formik.handleChange} control={<Checkbox />}label={item.label} />\n                            ))}\n                        </FormGroup>\n                    </FormGroup>\n                    \n                    <Button color='primary' variant='contained' fullWidth type='submit'>\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default ResidenceInformations\n"]},"metadata":{},"sourceType":"module"}