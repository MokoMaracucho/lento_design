{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration';\nimport { ComplexInformations, FloorplanInformations, SomeQuestions } from '../Components/LivingPlaceRegistration/Registration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_FORM_STATE = {\n  part_of_complex: '',\n  is_existing_complex: '',\n  introduction: {\n    existing_complex_name: '',\n    residence_type: '',\n    vhe_type: ''\n  },\n  complex_informations: {\n    complex_name: '',\n    house_number: '',\n    city: '',\n    postal_code: '',\n    phone_number: '',\n    email: '',\n    street: '',\n    house_number_extension: '',\n    country: '',\n    phone_number_landcode: '',\n    opening_hours: '',\n    facility_types: []\n  }\n};\n\nconst LivingPlaceRegistration = () => {\n  _s();\n\n  const [data, setData] = useState(INITIAL_FORM_STATE);\n  console.log('data', data);\n\n  const makeRequest = formData => {\n    console.log('form is submitted', formData);\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev,\n      ...newData\n    }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePreviewStep = newData => {\n    setData(prev => ({ ...prev,\n      ...newData\n    }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  const [currentStep, setCurrentStep] = useState(0);\n  const steps = [/*#__PURE__*/_jsxDEV(SomeQuestions, {\n    next: handleNextStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(ComplexInformations, {\n    next: handleNextStep,\n    prev: handlePreviewStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(FloorplanInformations, {\n    next: handleNextStep,\n    prev: handlePreviewStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timelineForm__container\",\n      children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: steps[currentStep]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceRegistration, \"NNlTu7VOxC+L/X5d/2pdOTYYPoE=\");\n\n_c = LivingPlaceRegistration;\nexport default LivingPlaceRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivingPlaceRegistration\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration.js"],"names":["React","useState","LivingPlaceRegistrationTimeline","ComplexInformations","FloorplanInformations","SomeQuestions","INITIAL_FORM_STATE","part_of_complex","is_existing_complex","introduction","existing_complex_name","residence_type","vhe_type","complex_informations","complex_name","house_number","city","postal_code","phone_number","email","street","house_number_extension","country","phone_number_landcode","opening_hours","facility_types","LivingPlaceRegistration","data","setData","console","log","makeRequest","formData","handleNextStep","newData","final","prev","setCurrentStep","handlePreviewStep","currentStep","steps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport {\n    LivingPlaceRegistrationTimeline\n} from '../Components/Registration'\n\n import {\n    ComplexInformations,\n    FloorplanInformations,\n    SomeQuestions\n} from '../Components/LivingPlaceRegistration/Registration'\n\nconst INITIAL_FORM_STATE = {\n    part_of_complex: '',\n    is_existing_complex: '',\n    introduction: {\n        existing_complex_name: '',\n        residence_type: '',\n        vhe_type: ''\n    },\n    complex_informations: {\n        complex_name: '',\n        house_number: '',\n        city: '',\n        postal_code: '',\n        phone_number: '',\n        email: '',\n        street: '',\n        house_number_extension: '',\n        country: '',\n        phone_number_landcode: '',\n        opening_hours: '',\n        facility_types: []\n    }\n}\n\nconst LivingPlaceRegistration = () => {\n\n    const [data, setData] = useState(INITIAL_FORM_STATE)\n    \n    console.log('data', data)\n\n    const makeRequest = (formData) => {\n        console.log('form is submitted', formData)\n    }\n\n    const handleNextStep = (newData, final = false) => {\n        setData((prev) => ({ ...prev, ...newData }))\n        if(final) {\n            makeRequest(newData)\n            return\n        }\n        setCurrentStep((prev) => prev + 1);\n    }\n\n    const handlePreviewStep = (newData) => {\n      setData((prev) => ({ ...prev, ...newData }))\n      setCurrentStep((prev) => prev - 1);\n    }\n\n    const [currentStep, setCurrentStep] = useState(0)\n\n    const steps = [\n        <SomeQuestions next={handleNextStep} data={data} />, \n        <ComplexInformations next={handleNextStep} prev={handlePreviewStep} data={data} />,\n        <FloorplanInformations next={handleNextStep} prev={handlePreviewStep} data={data} />\n    ]\n\n    return (\n        <>\n            <div className='timelineForm__container'>\n                <LivingPlaceRegistrationTimeline />\n                <div>\n                    {steps[currentStep]}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default LivingPlaceRegistration\n"]},"metadata":{},"sourceType":"module"}