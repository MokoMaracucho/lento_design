{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationSomeQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Select, MenuItem } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Info } from '@material-ui/icons';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index';\nimport { useData } from '../Context/DataContext';\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState';\nimport '../Styles/Pages/LivingPlaceRegistrationSomeQuestions.scss';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LivingPlaceRegistrationSomeQuestions = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    setValues,\n    data\n  } = useData();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      part_of_complex: data.part_of_complex,\n      is_existing_complex: data.is_existing_complex,\n      some_questions: {\n        existing_complex_name: data.existing_complex_name,\n        residence_type: data.residence_type,\n        vhe_type: data.vhe_type\n      }\n    }\n  });\n  const partOfAComplex = watch('part_of_complex');\n  const existingComplex = watch('is_existing_complex');\n  const existingComplexName = watch('existing_complex_name');\n  /* const fetchComplexNames = () => {\n      axios.get('http://10.0.4.5:8000/api/v1/vhe/complexname')\n  } */\n\n  /*  useEffect(() => {\n       if(existingComplex) {\n           fetchComplexNames()\n       }\n   }, [existingComplex]) */\n\n  const onSubmit = data => {\n    navigate('/living_place_registration/complex_informations');\n    LivingPlaceRegistrationTimelineState.step = 2;\n    setValues(data);\n    console.log(data);\n    /* const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/introduction/', data)\n    res.then(res => { console.log('res', res) }).catch( error => { console.log(error) }) */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"timelineFrom__container\",\n      children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Questions about the residence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"partOfAComplex__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Is the residence part of a complex?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...register('part_of_complex'),\n            defaultValue: data.part_of_complex,\n            style: {\n              display: 'initial'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  color: '#eeeeee'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  color: '#eeeeee'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), partOfAComplex && /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"partOfAComplex__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black'\n            },\n            children: \"Does it already exist in the platform?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...register('is_existing_complex'),\n            defaultValue: data.is_existing_complex,\n            style: {\n              display: 'initial'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"true\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  color: '#eeeeee'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this),\n              label: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"false\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                style: {\n                  color: '#eeeeee'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this),\n              label: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), partOfAComplex && existingComplex && /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"existingComplexName__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Choose a complex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"existingComplexNameError__div\",\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('some_questions.existing_complex_name', {\n                required: true\n              }),\n              value: watch('existing_complex_name', 'value'),\n              style: textFieldStyle,\n              children: existingComplexes__array.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.value,\n                children: item.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"existingComplexNameError__container\",\n            children: errors.existing_complex_name && errors.existing_complex_name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red_COLOR error_FORM\",\n              children: \"A complex name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 122\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"residenceType__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Residence type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"residenceTypeError__div\",\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('some_questions.residence_type', {\n                required: true\n              }),\n\n              /* defaultValue={data.some_questions.residence_type} */\n              style: textFieldStyle,\n              children: residenceTypes__array.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.value,\n                children: item.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"residenceTypeError__container\",\n            children: errors.residence_type && errors.residence_type.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red_COLOR error_FORM\",\n              children: \"A residence type is madatory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 100\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"vheType__div\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            style: {\n              color: 'black',\n              marginBottom: '10px'\n            },\n            children: \"Living place type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"vheTypeError__div\",\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('some_questions.vhe_type', {\n                required: true\n              }),\n\n              /* defaultValue={data.some_questions.vhe_type} */\n              style: textFieldStyle,\n              children: livingPlaceTypes__array.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.value,\n                children: item.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"vheTypeError__container\",\n            children: errors.vhe_type && errors.vhe_type.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red_COLOR error_FORM\",\n              children: \"A living place type is madatory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"someQuestionsNext__div\",\n        children: [/*#__PURE__*/_jsxDEV(Info, {\n          style: {\n            color: '#eeeeee'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          style: {\n            backgroundColor: '#5398D4',\n            borderRadius: 50,\n            fontFamily: 'DMSansMedium',\n            boxShadow: 'unset',\n            marginLeft: '10px'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceRegistrationSomeQuestions, \"uu+Tq2/D1F3goU6e0++2lfAPwV0=\", false, function () {\n  return [useNavigate, useData, useForm];\n});\n\n_c = LivingPlaceRegistrationSomeQuestions;\nconst existingComplexes__array = [{\n  value: '1',\n  label: 'Complex 1'\n}, {\n  value: '2',\n  label: 'Complex 2'\n}, {\n  value: '3',\n  label: 'Complex 3'\n}, {\n  value: '4',\n  label: 'Complex 4'\n}];\nconst residenceTypes__array = [{\n  value: '1',\n  label: 'Apartment'\n}, {\n  value: '2',\n  label: 'House'\n}, {\n  value: '3',\n  label: 'Mobil home'\n}, {\n  value: '4',\n  label: 'Studio'\n}];\nconst livingPlaceTypes__array = [{\n  value: '1',\n  label: 'Bed'\n}, {\n  value: '2',\n  label: 'Room'\n}, {\n  value: '3',\n  label: 'Residence'\n}];\nconst textFieldStyle = {\n  width: '300px',\n  height: '40px',\n  borderRadius: '5px',\n  background: '#eee',\n  paddingLeft: '15px',\n  paddingTop: '5px'\n};\nexport default LivingPlaceRegistrationSomeQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivingPlaceRegistrationSomeQuestions\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistrationSomeQuestions.js"],"names":["React","useState","useEffect","axios","useForm","useNavigate","Button","Select","MenuItem","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Info","CancelIcon","LivingPlaceRegistrationTimeline","useData","LivingPlaceRegistrationTimelineState","Box","LivingPlaceRegistrationSomeQuestions","navigate","setValues","data","register","handleSubmit","watch","formState","errors","defaultValues","part_of_complex","is_existing_complex","some_questions","existing_complex_name","residence_type","vhe_type","partOfAComplex","existingComplex","existingComplexName","onSubmit","step","console","log","color","display","marginBottom","required","textFieldStyle","existingComplexes__array","map","item","index","value","label","type","residenceTypes__array","livingPlaceTypes__array","backgroundColor","borderRadius","fontFamily","boxShadow","marginLeft","width","height","background","paddingLeft","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport { Button, Select, MenuItem } from '@material-ui/core'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { Info } from '@material-ui/icons'\nimport CancelIcon from '@mui/icons-material/Cancel'\n\nimport { LivingPlaceRegistrationTimeline } from '../Components/Registration/index'\n\nimport { useData } from '../Context/DataContext'\nimport LivingPlaceRegistrationTimelineState from '../Context/LivingPlaceRegistrationTimelineState'\n\nimport '../Styles/Pages/LivingPlaceRegistrationSomeQuestions.scss'\nimport { Box } from '@mui/system'\n\nconst LivingPlaceRegistrationSomeQuestions = () => {\n\n    const navigate = useNavigate()\n    const { setValues, data } = useData()\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({\n        defaultValues: {\n            part_of_complex: data.part_of_complex,\n            is_existing_complex: data.is_existing_complex,\n            some_questions: {\n                existing_complex_name: data.existing_complex_name,\n                residence_type: data.residence_type,\n                vhe_type: data.vhe_type\n            }\n        }\n    })\n    \n    const partOfAComplex = watch('part_of_complex')\n    const existingComplex = watch('is_existing_complex')\n    const existingComplexName = watch('existing_complex_name')\n      \n    /* const fetchComplexNames = () => {\n        axios.get('http://10.0.4.5:8000/api/v1/vhe/complexname')\n    } */\n\n   /*  useEffect(() => {\n        if(existingComplex) {\n            fetchComplexNames()\n        }\n    }, [existingComplex]) */\n\n    const onSubmit = (data) => {\n        navigate('/living_place_registration/complex_informations')\n        LivingPlaceRegistrationTimelineState.step = 2\n        setValues(data)\n        console.log(data)\n        /* const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/introduction/', data)\n        res.then(res => { console.log('res', res) }).catch( error => { console.log(error) }) */\n    }\n    \n    return (\n        <>\n            <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='timelineFrom__container'\n            >\n                <LivingPlaceRegistrationTimeline />\n                <h5>Questions about the residence</h5>\n\n                {/* PART OF A COMPLEX */}\n                    <FormControl component='fieldset'>\n                        <div id='partOfAComplex__div'>\n\n                            <FormLabel component='legend' style={{ color: 'black'}}>Is the residence part of a complex?</FormLabel>\n                            <RadioGroup\n                                {...register('part_of_complex')}\n                                defaultValue={data.part_of_complex}\n                                style={{ display: 'initial' }}\n                            >\n                                <FormControlLabel value='true' control={\n                                    <Radio\n                                        style={{ color: '#eeeeee' }}\n                                    />\n                                } label='Yes' />\n\n                                <FormControlLabel value='false' control={\n                                    <Radio\n                                        style={{ color: '#eeeeee' }}\n                                    />\n                                } label='No' />\n                            </RadioGroup>\n                        </div>\n                    </FormControl>\n\n\n                {/* EXISTING COMPLEX */}\n                {partOfAComplex && (\n                    <FormControl component='fieldset'>\n                        <div id='partOfAComplex__div'>\n\n                            <FormLabel component='legend' style={{ color: 'black'}}>Does it already exist in the platform?</FormLabel>\n                            <RadioGroup\n                                {...register('is_existing_complex')}\n                                defaultValue={data.is_existing_complex}\n                                style={{ display: 'initial' }}\n                            >\n                                <FormControlLabel value='true' control={\n                                    <Radio\n                                        style={{ color: '#eeeeee' }}\n                                    />\n                                } label='Yes' />\n\n                                <FormControlLabel value='false' control={\n                                    <Radio\n                                        style={{ color: '#eeeeee' }}\n                                    />\n                                } label='No' />\n                            </RadioGroup>\n                            \n                        </div>\n                    </FormControl>\n                )}\n                \n                {/* CHOOSE COMPLEX */}\n                {partOfAComplex && existingComplex && (\n                    <FormControl>\n                            <div id='existingComplexName__div'>\n                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Choose a complex</FormLabel>\n                                <div id='existingComplexNameError__div'>\n                                    <Select\n                                        {...register('some_questions.existing_complex_name', { required: true })}\n                                        value={watch('existing_complex_name', 'value')}\n                                        style={textFieldStyle}\n                                    >\n                                        {existingComplexes__array.map((item, index) => (\n                                            <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                        ))}\n                                    </Select>\n                            \n                                    {/* {errors.existing_complex_name && errors.existing_complex_name.type === \"required\" && <span className='red_COLOR'><CancelIcon style={{ fontSize: '35px', marginLeft: '10px'}} /></span>} */}\n                                </div>\n                                <div id='existingComplexNameError__container'>\n                                    {errors.existing_complex_name && errors.existing_complex_name.type === \"required\" && <span className='red_COLOR error_FORM'>A complex name is required</span>}\n                                </div>\n                            </div>\n                        </FormControl>\n                )}\n                \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <div id='residenceType__div'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Residence type</FormLabel>\n                        <div id='residenceTypeError__div'>\n                            <Select\n                                {...register('some_questions.residence_type', { required: true })}\n                                /* defaultValue={data.some_questions.residence_type} */\n                                style={textFieldStyle}\n                            >\n                            {residenceTypes__array.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                            </Select>\n                            \n                            {/* {errors.residence_type && errors.residence_type.type === \"required\" && <span className='red_COLOR'><CancelIcon style={{ fontSize: '35px', marginLeft: '10px'}} /></span>} */}\n                        </div>\n                        <div id='residenceTypeError__container'>\n                            {errors.residence_type && errors.residence_type.type === \"required\" && <span className='red_COLOR error_FORM'>A residence type is madatory</span>}\n                        </div>\n                        \n                    </div>\n                </FormControl>\n                \n                {/* RESIDENCE TYPE */}\n                <FormControl>\n                    <div id='vheType__div'>\n                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type</FormLabel>\n                        <div id='vheTypeError__div'>\n                            <Select\n                                {...register('some_questions.vhe_type', { required: true })}\n                                /* defaultValue={data.some_questions.vhe_type} */\n                                style={textFieldStyle}\n                            >\n                            {livingPlaceTypes__array.map((item, index) => (\n                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                            ))}\n                            </Select>\n                            \n                            {/* {errors.vhe_type && errors.vhe_type.type === \"required\" && <span className='red_COLOR'><CancelIcon style={{ fontSize: '35px', marginLeft: '10px'}} /></span>} */}\n                        </div>\n                        <div id='vheTypeError__container'>\n                            {errors.vhe_type && errors.vhe_type.type === \"required\" && <span className='red_COLOR error_FORM'>A living place type is madatory</span>}\n                        </div>\n                        \n                    </div>\n                </FormControl>\n\n                {/* <div id='floorplanInformationsButtons__div'> */}\n                    {/* NEXT */}\n                    <div id='someQuestionsNext__div'>\n                        <Info style={{ color: '#eeeeee' }}/>\n                        <Button\n                            type='submit'\n                            variant='contained'\n                            style={{\n                                backgroundColor: '#5398D4',\n                                borderRadius: 50,\n                                fontFamily: 'DMSansMedium',\n                                boxShadow: 'unset',\n                                marginLeft: '10px'\n                            }}\n                        >\n                            Next\n                        </Button>\n                    </div>\n                {/* </div> */}\n            </form>\n        </>\n    )\n}\n\nconst existingComplexes__array = [\n    {\n        value: '1',\n        label: 'Complex 1'\n    },\n    {\n        value: '2',\n        label: 'Complex 2'\n    },\n    {\n        value: '3',\n        label: 'Complex 3'\n    },\n    {\n        value: '4',\n        label: 'Complex 4'\n    }\n]\n\nconst residenceTypes__array = [\n    {\n        value: '1',\n        label: 'Apartment'\n    },\n    {\n        value: '2',\n        label: 'House'\n    },\n    {\n        value: '3',\n        label: 'Mobil home'\n    },\n    {\n        value: '4',\n        label: 'Studio'\n    }\n]\n\nconst livingPlaceTypes__array = [\n    {\n        value: '1',\n        label: 'Bed'\n    },\n    {\n        value: '2',\n        label: 'Room'\n    },\n    {\n        value: '3',\n        label: 'Residence'\n    }\n]\n\nconst textFieldStyle = {\n    width: '300px',\n    height: '40px',\n    borderRadius: '5px',\n    background: '#eee',\n    paddingLeft: '15px',\n    paddingTop: '5px'\n}\n\nexport default LivingPlaceRegistrationSomeQuestions\n"]},"metadata":{},"sourceType":"module"}