{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/FormUI/CheckboxWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckboxWrapper = ({\n  name,\n  label,\n  legend,\n  ...otherProps\n}) => {\n  _s();\n\n  const {\n    setFieldValue\n  } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = e => {\n    const {\n      checked\n    } = e.target;\n    setFieldValue(name, checked);\n  };\n\n  const configCheckbox = { ...field,\n    onChange: handleChange\n  };\n  const configFormControl = {};\n\n  if (meta && meta.touched && meta.error) {\n    configCheckbox.error = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, { ...configFormControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: legend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, { ...configCheckbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 34\n          }, this),\n          label: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CheckboxWrapper, \"nZJVWYi6lCZusqN9F3PpQPH1wVo=\", false, function () {\n  return [useFormikContext, useField];\n});\n\n_c = CheckboxWrapper;\nexport default CheckboxWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxWrapper\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/FormUI/CheckboxWrapper.js"],"names":["React","useField","useFormikContext","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","CheckboxWrapper","name","label","legend","otherProps","setFieldValue","field","meta","handleChange","e","checked","target","configCheckbox","onChange","configFormControl","touched","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AAEA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,SAAlD,EAA6DC,SAA7D,QAA8E,eAA9E;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACrBC,EAAAA,IADqB;AAErBC,EAAAA,KAFqB;AAGrBC,EAAAA,MAHqB;AAIrB,KAAGC;AAJkB,CAAD,KAKlB;AAAA;;AAEF,QAAM;AAAEC,IAAAA;AAAF,MAAoBX,gBAAgB,EAA1C;AACA,QAAM,CAACY,KAAD,EAAQC,IAAR,IAAgBd,QAAQ,CAACQ,IAAD,CAA9B;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAcD,CAAC,CAACE,MAAtB;AACAN,IAAAA,aAAa,CAACJ,IAAD,EAAOS,OAAP,CAAb;AACH,GAHD;;AAKA,QAAME,cAAc,GAAG,EACnB,GAAGN,KADgB;AAEnBO,IAAAA,QAAQ,EAAEL;AAFS,GAAvB;AAKA,QAAMM,iBAAiB,GAAG,EAA1B;;AACA,MAAGP,IAAI,IAAIA,IAAI,CAACQ,OAAb,IAAwBR,IAAI,CAACS,KAAhC,EAAuC;AACnCJ,IAAAA,cAAc,CAACI,KAAf,GAAuB,IAAvB;AACH;;AAED,sBACI;AAAA,2BACI,QAAC,WAAD,OAAiBF,iBAAjB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAAA,kBAA+BX;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,gBAAD;AACI,UAAA,OAAO,eAAE,QAAC,QAAD,OAAcS;AAAd;AAAA;AAAA;AAAA;AAAA,kBADb;AAEI,UAAA,KAAK,EAAEV;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CAtCD;;GAAMF,e;UAOwBN,gB,EACJD,Q;;;KARpBO,e;AAwCN,eAAeA,eAAf","sourcesContent":["import React from 'react'\n\nimport { useField, useFormikContext } from 'formik'\n\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@mui/material'\n\nconst CheckboxWrapper = ({\n    name,\n    label,\n    legend,\n    ...otherProps\n}) => {\n    \n    const { setFieldValue } = useFormikContext()\n    const [field, meta] = useField(name)\n\n    const handleChange = (e) => {\n        const { checked } = e.target\n        setFieldValue(name, checked)\n    }\n\n    const configCheckbox = {\n        ...field,\n        onChange: handleChange\n    }\n\n    const configFormControl = {}\n    if(meta && meta.touched && meta.error) {\n        configCheckbox.error = true\n    }\n\n    return (\n        <>\n            <FormControl {...configFormControl}>\n                <FormLabel component='legend'>{legend}</FormLabel>\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox {...configCheckbox} />}\n                        label={label}\n                    />\n                </FormGroup>\n            </FormControl>\n        </>\n    )\n}\n\nexport default CheckboxWrapper\n"]},"metadata":{},"sourceType":"module"}