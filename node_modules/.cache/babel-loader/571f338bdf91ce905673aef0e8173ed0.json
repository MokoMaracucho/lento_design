{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/RoomsInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material';\nimport { useData } from '../../Context/LivingPlaceRegistrationContext';\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index';\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState';\nimport roomTypes from '../../Json/RoomTypes';\nimport roomFacilities from '../../Json/RoomFacilities';\nimport '../../Styles/Pages/LivingPlaceRegistration/LivingPlacesRegistration.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialValues = {\n  rooms: ''\n};\nlet roomsArray = [];\nconst room = {\n  room_type: '',\n  room_number: '',\n  floor: '',\n  dimension_m2: '',\n  coliving_allowed: '',\n  number_of_living_places: '',\n  room_facility_type: {\n    wardrobe: '',\n    sink: '',\n    working_space: '',\n    fridge: '',\n    built_in_wardrobe: ''\n  },\n  vhes: []\n};\nconst validationSchema = Yup.object().shape({\n  rooms: Yup.array().of(Yup.object().shape({\n    room_type: Yup.string().required('Test'),\n    room_number: Yup.number().required('Test'),\n    floor: Yup.number().required('Test'),\n    dimension_m2: Yup.number().required('Test'),\n    coliving_allowed: Yup.boolean().required('Test'),\n    number_of_living_places: Yup.number().required('Test')\n  })).required('Test')\n});\n\nconst ErrorMessage = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: name,\n  render: ({\n    form\n  }) => {\n    const error = getIn(form.errors, name);\n    const touch = getIn(form.touched, name);\n    return touch && error ? error : null;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 5\n}, this);\n\n_c = ErrorMessage;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst RoomsInformations = () => {\n  _s();\n\n  const [roomsArrayCreated, setRoomsArrayCreated] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  LivingPlaceRegistrationTimelineState.maxStep = 5;\n  const {\n    setValues,\n    data\n  } = useData();\n  const navigate = useNavigate();\n\n  const previewStep = data => {\n    LivingPlaceRegistrationTimelineState.step = 4;\n    navigate('/living_place_registration/floorplan_informations');\n  };\n\n  const numberOfRooms = parseInt(data.residence.number_rooms_with_vhes);\n\n  const setRoomsArray = numberOfRooms => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      roomsArray.push(room);\n    }\n  };\n\n  useEffect(() => {\n    setRoomsArray(numberOfRooms);\n    setRoomsArrayCreated(true);\n  }, [numberOfRooms]);\n  initialValues.rooms = roomsArray;\n  if (!roomsArrayCreated) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LivingPlaceRegistrationTimeline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Rooms informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues\n      /* validationSchema={validationSchema} */\n      ,\n      onSubmit: data => {\n        setValues(data);\n        navigate('/living_place_registration/living_places_informations');\n        console.log(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push,\n            touched,\n            errors\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Tabs, {\n                  value: value,\n                  onChange: handleChangeTab,\n                  \"aria-label\": \"basic tabs example\",\n                  centered: true,\n                  children: Array.from(Array(numberOfRooms), (e, index) => {\n                    return /*#__PURE__*/_jsxDEV(Tab, {\n                      label: \"Item One\",\n                      ...a11yProps(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this), data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n                value: value,\n                index: index,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      style: {\n                        color: 'black',\n                        marginBottom: '10px'\n                      },\n                      children: [\"Living place type \", index]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      name: `rooms.${index}.room_type`,\n                      value: room.room_type,\n                      onChange: handleChange,\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"\",\n                        children: \"Choose a living place type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 61\n                      }, this), roomTypes.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: item.value,\n                        children: item.label\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 65\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `rooms.${index}.room_type`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Room number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.room_number`,\n                    value: room.room_number,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `rooms.${index}.room_number`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Floor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.floor`,\n                    value: room.floor,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `rooms.${index}.floor`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Dimension in m2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.dimension_m2`,\n                    value: room.dimension_m2,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `rooms.${index}.dimension_m2`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    component: \"fieldset\",\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      style: {\n                        color: 'black'\n                      },\n                      children: \"Coliving allowed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      name: `rooms.${index}.coliving_allowed`,\n                      value: room.coliving_allowed,\n                      onChange: handleChange,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"true\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 233,\n                          columnNumber: 74\n                        }, this),\n                        label: \"True\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"false\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 74\n                        }, this),\n                        label: \"False\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `rooms.${index}.coliving_allowed`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    component: \"legend\",\n                    style: {\n                      color: 'black',\n                      marginBottom: '10px'\n                    },\n                    children: \"Number of living places\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `rooms.${index}.number_of_living_places`,\n                    value: room.number_of_living_places,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: `rooms.${index}.number_of_living_places`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      component: \"legend\",\n                      style: {\n                        color: 'black',\n                        marginBottom: '10px'\n                      },\n                      children: \"Facility types\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      children: roomFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        name: `rooms.${index}.room_facility_type.${item.value}`,\n                        onChange: handleChange,\n                        control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 263,\n                          columnNumber: 185\n                        }, this),\n                        label: item.label\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 65\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: previewStep,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RoomsInformations, \"tgBqcwfWsQWrszvXHphdJ21ymT4=\", false, function () {\n  return [useData, useNavigate];\n});\n\n_c3 = RoomsInformations;\nexport default RoomsInformations;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"RoomsInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Pages/LivingPlaceRegistration/RoomsInformations.js"],"names":["React","useState","useEffect","Formik","Form","Field","FieldArray","getIn","Yup","useNavigate","PropTypes","Button","Box","Tabs","Tab","Typography","FormLabel","TextField","FormControl","Select","MenuItem","RadioGroup","FormControlLabel","Radio","FormGroup","Checkbox","useData","LivingPlaceRegistrationTimeline","LivingPlaceRegistrationTimelineState","roomTypes","roomFacilities","initialValues","rooms","roomsArray","room","room_type","room_number","floor","dimension_m2","coliving_allowed","number_of_living_places","room_facility_type","wardrobe","sink","working_space","fridge","built_in_wardrobe","vhes","validationSchema","object","shape","array","of","string","required","number","boolean","ErrorMessage","name","form","error","errors","touch","touched","TabPanel","props","children","value","index","other","p","propTypes","node","isRequired","a11yProps","id","RoomsInformations","roomsArrayCreated","setRoomsArrayCreated","setValue","handleChangeTab","event","newValue","maxStep","setValues","data","navigate","previewStep","step","numberOfRooms","parseInt","residence","number_rooms_with_vhes","setRoomsArray","i","push","console","log","values","handleChange","remove","width","borderBottom","borderColor","Array","from","e","map","color","marginBottom","item","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Button, Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material'\n\nimport { useData } from '../../Context/LivingPlaceRegistrationContext'\n\nimport { LivingPlaceRegistrationTimeline } from '../../Components/Registration/index'\nimport LivingPlaceRegistrationTimelineState from '../../Context/LivingPlaceRegistrationTimelineState'\n\nimport roomTypes from '../../Json/RoomTypes'\nimport roomFacilities from '../../Json/RoomFacilities'\n\nimport '../../Styles/Pages/LivingPlaceRegistration/LivingPlacesRegistration.scss'\n\nlet initialValues = {\n    rooms: ''\n}\n\nlet roomsArray = []\n\nconst room = {\n    room_type: '',\n    room_number: '',\n    floor: '',\n    dimension_m2: '',\n    coliving_allowed: '',\n    number_of_living_places: '',\n    room_facility_type:  {\n        wardrobe: '',\n        sink: '',\n        working_space: '',\n        fridge: '',\n        built_in_wardrobe: ''\n    },\n    vhes: []\n}\n\nconst validationSchema = Yup.object().shape({\n    rooms: Yup.array().of(\n        Yup.object().shape({\n            room_type: Yup.string().required('Test'),\n            room_number: Yup.number().required('Test'),\n            floor: Yup.number().required('Test'),\n            dimension_m2: Yup.number().required('Test'),\n            coliving_allowed: Yup.boolean().required('Test'),\n            number_of_living_places: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst RoomsInformations = () => {\n\n    const [roomsArrayCreated, setRoomsArrayCreated] = useState(false)\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    LivingPlaceRegistrationTimelineState.maxStep = 5\n\n    const { setValues, data } = useData()\n\n    const navigate = useNavigate()\n\n    const previewStep = (data) => {\n        LivingPlaceRegistrationTimelineState.step = 4\n        navigate('/living_place_registration/floorplan_informations')\n    }\n\n    const numberOfRooms = parseInt(data.residence.number_rooms_with_vhes)\n    \n    const setRoomsArray = (numberOfRooms) => {\n        for (let i = 0; i < numberOfRooms; i++) {\n            roomsArray.push(room)\n        }\n    }\n\n    useEffect(() => {\n        setRoomsArray(numberOfRooms)\n        setRoomsArrayCreated(true)\n    }, [numberOfRooms])\n\n    initialValues.rooms = roomsArray\n\n    if(!roomsArrayCreated) return null\n\n    return (\n        <>\n            <LivingPlaceRegistrationTimeline />\n\n            <h5>Rooms informations</h5>\n\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    setValues(data)\n                    navigate('/living_place_registration/living_places_informations')\n                    console.log(data)\n                }}\n            >\n                {({ values, handleChange }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push, touched, errors }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label='Item One' {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => (\n                                            <TabPanel value={value} index={index}>\n            \n                                                {/* LIVING PLACE TYPE */}\n                                                <div>\n                                                    <FormControl>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Living place type {index}</FormLabel>\n                                                        <Select\n                                                            name={`rooms.${index}.room_type`}\n                                                            value={room.room_type}\n                                                            onChange={handleChange}\n                                                        >\n                                                            <MenuItem value=''>Choose a living place type</MenuItem>\n                                                            {roomTypes.map((item, index) => (\n                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                            ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                    <ErrorMessage name={`rooms.${index}.room_type`} />\n                                                </div>\n\n                                                {/* ROOM NUMBER */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Room number</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.room_number`}\n                                                        value={room.room_number}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.room_number`} />\n                                                </div>\n\n                                                {/* FLOOR */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.floor`}\n                                                        value={room.floor}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.floor`} />\n                                                </div>\n\n                                                {/* DIMENSION M2 */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Dimension in m2</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.dimension_m2`}\n                                                        value={room.dimension_m2}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.dimension_m2`} />\n                                                </div>\n\n                                                {/* COLIVING ALLOWED */}\n                                                <div>\n                                                    <FormControl component='fieldset'>\n                                                        <FormLabel component='legend' style={{ color: 'black'}}>Coliving allowed</FormLabel>\n                                                        <RadioGroup\n                                                            name={`rooms.${index}.coliving_allowed`}\n                                                            value={room.coliving_allowed}\n                                                            onChange={handleChange}\n                                                        >\n                                                            <FormControlLabel\n                                                                value='true'\n                                                                control={<Radio />}\n                                                                label='True'\n                                                            />\n                                                            <FormControlLabel\n                                                                value='false'\n                                                                control={<Radio />}\n                                                                label='False'\n                                                            />\n                                                        </RadioGroup>\n                                                    </FormControl>\n                                                    <ErrorMessage name={`rooms.${index}.coliving_allowed`} />\n                                                </div>\n\n                                                {/* NUMBER OF LIVING PLACES */}\n                                                <div>\n                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Number of living places</FormLabel>\n                                                    <TextField\n                                                        name={`rooms.${index}.number_of_living_places`}\n                                                        value={room.number_of_living_places}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <ErrorMessage name={`rooms.${index}.number_of_living_places`} />\n                                                </div>\n\n                                                {/* FACILITY TYPES */}\n                                                <div>\n                                                    <FormGroup>\n                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                        <FormGroup>\n                                                            {roomFacilities.map((item, index) => (\n                                                                <FormControlLabel key={index} name={`rooms.${index}.room_facility_type.${item.value}`} onChange={handleChange} control={<Checkbox />}label={item.label} />\n                                                            ))}\n                                                        </FormGroup>\n                                                    </FormGroup>\n                                                </div>\n                                            </TabPanel>\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' variant='contained' onClick={previewStep}>\n                            Previous\n                        </Button>\n\n                        {/* PREVIEW */}\n                        <Button type='submit' color='primary' variant='contained'>\n                            Next\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default RoomsInformations"]},"metadata":{},"sourceType":"module"}