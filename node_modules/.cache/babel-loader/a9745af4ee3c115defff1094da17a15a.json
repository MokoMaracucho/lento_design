{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, FieldArray } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField } from '@mui/material';\nimport maximumStayDuration from '../../Json/MaximumStayDuration';\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering';\nimport serviceCostTerm from '../../Json/ServiceCostTerm';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst LivingPlaceInformations = props => {\n  _s();\n\n  let initialValues = {\n    rooms: ''\n  };\n  initialValues.rooms = props.data.rooms;\n  console.log('initialValues', initialValues);\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes);\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n  let numberOfLivingPlaces = [];\n\n  for (let i = 0; i < numberOfRooms; i++) {\n    numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places));\n    console.log(numberOfLivingPlaces);\n  }\n\n  for (let i = 0; i < numberOfRooms; i++) {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: data => {\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Tabs, {\n                  value: value,\n                  onChange: handleChangeTab,\n                  \"aria-label\": \"basic tabs example\",\n                  centered: true,\n                  children: Array.from(Array(numberOfRooms), (e, index) => {\n                    return /*#__PURE__*/_jsxDEV(Tab, {\n                      label: \"Item One\",\n                      ...a11yProps(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n                value: value,\n                index: index,\n                children: /*#__PURE__*/_jsxDEV(Carousel, {\n                  style: {\n                    backgroundColor: 'red'\n                  },\n                  interval: 20,\n                  wrap: false,\n                  children: Array.from(Array(numberOfLivingPlaces[index]), (e, indexVhe) => {\n                    return /*#__PURE__*/_jsxDEV(Carousel.Item, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(FormControl, {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Maximum stay duration\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 108,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: `rooms.${index}.vhe_list.${indexVhe}.max_stay_duration`\n                            /* value={formik.values.complex.phone_number_landcode}\n                            onChange={formik.handleChange} */\n\n                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                            ,\n                            children: maximumStayDuration.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: item.value,\n                              children: item.label\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 117,\n                              columnNumber: 81\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 109,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Complex name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 125,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.description`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Changeover time\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.changeover_time`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(FormControl, {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Status at point of registering\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 150,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: `rooms.${index}.vhe_list.${indexVhe}.status_at_point_of_registering`\n                            /* value={formik.values.complex.phone_number_landcode}\n                            onChange={formik.handleChange} */\n\n                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                            ,\n                            children: statusAtPointOfRegestering.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: item.value,\n                              children: item.label\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 159,\n                              columnNumber: 81\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 151,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"B2B deposit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.b2b_deposit`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"B2C deposit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.b2c_deposit`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"Service cost\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.service_cost`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"B2B rental price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.b2b_rental_price`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                          component: \"legend\",\n                          style: {\n                            color: 'black',\n                            marginBottom: '10px'\n                          },\n                          children: \"B2C rental price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                          name: `rooms.${index}.vhe_list.${indexVhe}.b2c_rental_price`\n                          /* value={formik.values.complex.complex_name}\n                          onChange={formik.handleChange} */\n\n                          /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                          helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(FormControl, {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Service cost term\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 228,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: `rooms.${index}.vhe_list.${indexVhe}.service_cost_term`\n                            /* value={formik.values.complex.phone_number_landcode}\n                            onChange={formik.handleChange} */\n\n                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                            ,\n                            children: serviceCostTerm.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: item.value,\n                              children: item.label\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 237,\n                              columnNumber: 81\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 229,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceInformations, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c2 = LivingPlaceInformations;\nexport default LivingPlaceInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"LivingPlaceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js"],"names":["React","useState","Formik","Form","FieldArray","PropTypes","Box","Tabs","Tab","Typography","FormControl","FormLabel","Select","MenuItem","TextField","maximumStayDuration","statusAtPointOfRegestering","serviceCostTerm","Carousel","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","LivingPlaceInformations","initialValues","rooms","data","console","log","setValue","handleChangeTab","event","newValue","residence","number_rooms_with_vhes","numberOfRooms","parseInt","numberOfLivingPlaces","i","push","number_of_living_places","next","values","handleChange","remove","width","borderBottom","borderColor","Array","from","e","map","room","backgroundColor","indexVhe","color","marginBottom","item","label"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Formik, Form, FieldArray } from 'formik'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField } from '@mui/material'\n\nimport maximumStayDuration from '../../Json/MaximumStayDuration'\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering'\nimport serviceCostTerm from '../../Json/ServiceCostTerm'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Carousel from 'react-bootstrap/Carousel'\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceInformations = (props) => {\n\n    let initialValues = {\n        rooms: ''\n    }\n    \n    initialValues.rooms = props.data.rooms\n    console.log('initialValues', initialValues)\n\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes)\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    let numberOfLivingPlaces = []\n    for(let i = 0; i < numberOfRooms; i++) {\n        numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places))\n        console.log(numberOfLivingPlaces)\n    }\n\n    for(let i = 0; i <numberOfRooms; i++) {\n\n    }\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(data) => {\n                    props.next(data)\n                }}\n            >\n                {({ values, handleChange }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push }) => (\n                                <div>\n                                    <Box sx={{ width: '100%' }}>\n                                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                            <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                {Array.from(Array(numberOfRooms), (e, index) => {\n                                                    return (\n                                                        <Tab label='Item One' {...a11yProps(index)} />\n                                                    )\n                                                })}\n                                            </Tabs>\n                                        </Box>\n                                        {props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => (\n                                            <TabPanel value={value} index={index}>\n                                                <Carousel style={{ backgroundColor: 'red' }} interval={20} wrap={false}>\n                                                    {Array.from(Array(numberOfLivingPlaces[index]), (e, indexVhe) => {\n                                                        return (\n                                                            <Carousel.Item>\n                                                                <div>\n                                                                    {/* MAXIMUM STAY DURATION */}\n                                                                    <FormControl>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Maximum stay duration</FormLabel>\n                                                                        <Select\n                                                                            name={`rooms.${index}.vhe_list.${indexVhe}.max_stay_duration`}\n                                                                            /* value={formik.values.complex.phone_number_landcode}\n                                                                            onChange={formik.handleChange} */\n                                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                        >\n                                                                            {maximumStayDuration.map((item, index) => (\n                                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                            ))}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* DESCRIPTION */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Complex name</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.description`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* CHANGEOVER TIME */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Changeover time</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.changeover_time`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* STATUS AT POINT OF REGESTERING */}\n                                                                    <FormControl>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Status at point of registering</FormLabel>\n                                                                        <Select\n                                                                            name={`rooms.${index}.vhe_list.${indexVhe}.status_at_point_of_registering`}\n                                                                            /* value={formik.values.complex.phone_number_landcode}\n                                                                            onChange={formik.handleChange} */\n                                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                        >\n                                                                            {statusAtPointOfRegestering.map((item, index) => (\n                                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                            ))}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* B2B DEPOSIT */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2B deposit</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.b2b_deposit`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* B2C DEPOSIT */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2C deposit</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.b2c_deposit`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* SERVICE COST */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.service_cost`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* B2B RENTAL PRICE */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2B rental price</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.b2b_rental_price`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* B2C RENTAL PRICE */}\n                                                                    <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2C rental price</FormLabel>\n                                                                    <TextField\n                                                                        name={`rooms.${index}.vhe_list.${indexVhe}.b2c_rental_price`}\n                                                                        /* value={formik.values.complex.complex_name}\n                                                                        onChange={formik.handleChange} */\n                                                                        /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                        helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                    />\n                                                                </div>\n\n                                                                <div>\n                                                                    {/* SERVICE COST TERM */}\n                                                                    <FormControl>\n                                                                        <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost term</FormLabel>\n                                                                        <Select\n                                                                            name={`rooms.${index}.vhe_list.${indexVhe}.service_cost_term`}\n                                                                            /* value={formik.values.complex.phone_number_landcode}\n                                                                            onChange={formik.handleChange} */\n                                                                            /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                            helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                        >\n                                                                            {serviceCostTerm.map((item, index) => (\n                                                                                <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                            ))}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </div>\n                                                            </Carousel.Item>\n                                                        )\n                                                    })}\n                                                </Carousel>\n                                            </TabPanel>\n                                        ))}\n                                    </Box>\n                                </div>\n                            )}\n                        </FieldArray>\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default LivingPlaceInformations\n"]},"metadata":{},"sourceType":"module"}