{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, FieldArray } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField, FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport maximumStayDuration from '../../Json/MaximumStayDuration';\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering';\nimport serviceCostTerm from '../../Json/ServiceCostTerm';\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialValues = {\n  vhes: ''\n};\nlet vhesArray = [];\nconst livingPlace = {\n  room_id: '',\n  max_stay_duration: '',\n  rental_price_term: '',\n  description: '',\n  changeover_time: '',\n  deposit: '',\n  service_costs: '',\n  rentalprice: '',\n  b2b_price: '',\n  b2c_price: '',\n  vhe_facility_types: {\n    welcome_pack: '',\n    bed_sheets: '',\n    towels: '',\n    bike: '',\n    weekly_cleaning: '',\n    final_cleaning: '',\n    kitchen_supplies: '',\n    wifi: '',\n    wifi_television: ''\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst LivingPlaceInformations = props => {\n  _s();\n\n  const [vhesArrayCreated, setVhesArrayCreated] = useState(false);\n  let initialValues = {\n    vhes: ''\n  };\n  /*   \n     let rooms = props.data.rooms */\n\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n  let numberOfLivingPlaces = 0;\n\n  const setNumberOfLivingPlaces = () => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      numberOfLivingPlaces += parseInt(props.data.rooms[i].number_of_living_places);\n    }\n  };\n\n  let numberOfLivingPlacesArray = [];\n\n  const setNumberOfLivingPlacesArray = () => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      numberOfLivingPlacesArray.push(parseInt(props.data.rooms[i].number_of_living_places));\n    }\n  };\n\n  const setVhesArrays = () => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      for (let j = 0; j < numberOfLivingPlacesArray[i]; j++) {\n        vhesArray.push(livingPlace);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setNumberOfLivingPlaces();\n    console.log(numberOfLivingPlaces);\n    setNumberOfLivingPlacesArray();\n    console.log(numberOfLivingPlacesArray);\n    setVhesArrays();\n    console.log(vhesArray);\n  });\n  /* const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n   let numberOfLivingPlaces = []\n   for(let i = 0; i < numberOfRooms; i++) {\n       numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places))\n   }\n    const setVhesArrays = (rooms, numberOfRooms, numberOfLivingPlaces) => {\n       for(let i = 0; i <numberOfRooms; i++) {\n           vhesArray = []\n           for(let j = 0; j < numberOfLivingPlaces[i]; j++ ){\n               vhesArray.push(livingPlace)\n           }\n           rooms[i].vhes = vhesArray\n       }\n       return rooms\n   }\n    useEffect(() => {\n       rooms = setVhesArrays(rooms, numberOfRooms, numberOfLivingPlaces)\n       initialValues.rooms = rooms\n       console.log(initialValues)\n       setVhesArraysCreated(true)\n   }, [rooms, numberOfRooms, numberOfLivingPlaces])\n    if(!vhesArraysCreated) return null */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: data => {\n        console.log(data);\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  borderBottom: 1,\n                  borderColor: 'divider'\n                },\n                children: /*#__PURE__*/_jsxDEV(Tabs, {\n                  value: value,\n                  onChange: handleChangeTab,\n                  \"aria-label\": \"basic tabs example\",\n                  centered: true,\n                  children: Array.from(Array(numberOfRooms), (e, index) => {\n                    return /*#__PURE__*/_jsxDEV(Tab, {\n                      label: \"Item One\",\n                      ...a11yProps(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), Array.from(Array(numberOfRooms), (e, index) => {\n                /*#__PURE__*/\n                _jsxDEV(TabPanel, {\n                  value: value,\n                  index: index,\n                  children: /*#__PURE__*/_jsxDEV(Carousel, {\n                    style: {\n                      backgroundColor: 'red'\n                    },\n                    interval: 20,\n                    wrap: false,\n                    children: Array.from(Array(numberOfLivingPlaces[index]), (e, indexVhe) => {\n                      /*#__PURE__*/\n                      _jsxDEV(Carousel.Item, {\n                        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Test\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 187,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceInformations, \"+w80Au+0st3MuiRvCcOz53siuf4=\");\n\n_c2 = LivingPlaceInformations;\nexport default LivingPlaceInformations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"LivingPlaceInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformations.js"],"names":["React","useState","useEffect","Formik","Form","FieldArray","PropTypes","Box","Tabs","Tab","Typography","FormControl","FormLabel","Select","MenuItem","TextField","FormGroup","FormControlLabel","Checkbox","maximumStayDuration","statusAtPointOfRegestering","serviceCostTerm","livingPlaceFacilities","Carousel","initialValues","vhes","vhesArray","livingPlace","room_id","max_stay_duration","rental_price_term","description","changeover_time","deposit","service_costs","rentalprice","b2b_price","b2c_price","vhe_facility_types","welcome_pack","bed_sheets","towels","bike","weekly_cleaning","final_cleaning","kitchen_supplies","wifi","wifi_television","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","LivingPlaceInformations","vhesArrayCreated","setVhesArrayCreated","setValue","handleChangeTab","event","newValue","numberOfRooms","parseInt","data","residence","number_rooms_with_vhes","numberOfLivingPlaces","setNumberOfLivingPlaces","i","rooms","number_of_living_places","numberOfLivingPlacesArray","setNumberOfLivingPlacesArray","push","setVhesArrays","j","console","log","next","values","handleChange","remove","width","borderBottom","borderColor","Array","from","e","backgroundColor","indexVhe"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Formik, Form, FieldArray } from 'formik'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField, FormGroup, FormControlLabel, Checkbox } from '@mui/material'\n\nimport maximumStayDuration from '../../Json/MaximumStayDuration'\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering'\nimport serviceCostTerm from '../../Json/ServiceCostTerm'\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Carousel from 'react-bootstrap/Carousel'\n\nlet initialValues = {\n    vhes: ''\n}\n\nlet vhesArray = []\n\nconst livingPlace = {\n    room_id: '',\n    max_stay_duration: '',\n    rental_price_term: '',\n    description: '',\n    changeover_time: '',\n    deposit: '',\n    service_costs: '',\n    rentalprice: '',\n    b2b_price: '',\n    b2c_price: '',\n    vhe_facility_types: {\n        welcome_pack: '',\n        bed_sheets: '',\n        towels: '',\n        bike: '',\n        weekly_cleaning: '',\n        final_cleaning: '',\n        kitchen_supplies: '',\n        wifi: '',\n        wifi_television: ''\n    }\n}\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceInformations = (props) => {\n\n    const [vhesArrayCreated, setVhesArrayCreated] = useState(false)\n\n    let initialValues = {\n        vhes: ''\n    }\n\n  /*   \n\n    let rooms = props.data.rooms */\n\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    let numberOfLivingPlaces = 0\n\n    const setNumberOfLivingPlaces = () => {\n        for(let i = 0; i < numberOfRooms; i++) {\n            numberOfLivingPlaces += parseInt(props.data.rooms[i].number_of_living_places)\n        }\n    }\n\n    let numberOfLivingPlacesArray = []\n\n    const setNumberOfLivingPlacesArray = () => {\n        for(let i = 0; i < numberOfRooms; i++) {\n            numberOfLivingPlacesArray.push(parseInt(props.data.rooms[i].number_of_living_places))\n        }\n    }\n\n    const setVhesArrays = () => {\n        for(let i = 0; i <numberOfRooms; i++) {\n            for(let j = 0; j < numberOfLivingPlacesArray[i]; j++ ){\n                vhesArray.push(livingPlace)\n            }\n        }\n    }\n\n    useEffect(() => {\n        setNumberOfLivingPlaces()\n        console.log(numberOfLivingPlaces)\n        setNumberOfLivingPlacesArray()\n        console.log(numberOfLivingPlacesArray)\n        setVhesArrays()\n        console.log(vhesArray)\n    })\n    \n   /* const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    let numberOfLivingPlaces = []\n    for(let i = 0; i < numberOfRooms; i++) {\n        numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places))\n    }\n\n    const setVhesArrays = (rooms, numberOfRooms, numberOfLivingPlaces) => {\n        for(let i = 0; i <numberOfRooms; i++) {\n            vhesArray = []\n            for(let j = 0; j < numberOfLivingPlaces[i]; j++ ){\n                vhesArray.push(livingPlace)\n            }\n            rooms[i].vhes = vhesArray\n        }\n        return rooms\n    }\n\n    useEffect(() => {\n        rooms = setVhesArrays(rooms, numberOfRooms, numberOfLivingPlaces)\n        initialValues.rooms = rooms\n        console.log(initialValues)\n        setVhesArraysCreated(true)\n    }, [rooms, numberOfRooms, numberOfLivingPlaces])\n\n    if(!vhesArraysCreated) return null */\n\n    return (\n        <>\n        <Formik\n            initialValues={initialValues}\n            onSubmit={(data) => {\n                console.log(data)\n                props.next(data)\n            }}\n        >\n            {({ values, handleChange }) => (\n                <Form>\n                    <FieldArray name='rooms'>\n                        {({ remove, push }) => (\n                            <div>\n                                <Box sx={{ width: '100%' }}>\n                                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                        <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                            {Array.from(Array(numberOfRooms), (e, index) => {\n                                                return (\n                                                    <Tab label='Item One' {...a11yProps(index)} />\n                                                )\n                                            })}\n                                        </Tabs>\n                                    </Box>\n                                    {Array.from(Array(numberOfRooms), (e, index) => {\n                                        <TabPanel value={value} index={index}>\n                                            <Carousel style={{ backgroundColor: 'red' }} interval={20} wrap={false}>\n                                                {Array.from(Array( numberOfLivingPlaces[index]), (e, indexVhe) => {\n                                                            <Carousel.Item>\n                                                                <h3>Test</h3>\n                                                            </Carousel.Item>\n                                                })}\n                                            </Carousel>\n                                        </TabPanel>\n                                    })}\n                                </Box>\n                            </div>\n                        )}\n                    </FieldArray>\n                    <button type='submit'>Submit</button>\n                </Form>\n            )}\n        </Formik>\n        </>\n    )\n}\n\nexport default LivingPlaceInformations\n"]},"metadata":{},"sourceType":"module"}