{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Formik2 = () => {\n  _s();\n\n  const [data, setData] = useState({\n    name: {\n      first_name: '',\n      last_name: ''\n    },\n    email: '',\n    password: ''\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const makeRequest = formData => {\n    console.log('form is submitted', formData);\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev,\n      ...newData\n    }));\n\n    if (final) {\n      makeRequest(newData);\n      return;\n    }\n\n    setCurrentStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev,\n      ...newData\n    }));\n    setCurrentStep(prev => prev - 1);\n  };\n\n  console.log('data', data);\n  const steps = [/*#__PURE__*/_jsxDEV(StepOne, {\n    next: handleNextStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(StepTwo, {\n    next: handleNextStep,\n    prev: handlePrevStep,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: steps[currentStep]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Formik2, \"xcderAgrQo6AxZGay1wIzq1APFc=\");\n\n_c = Formik2;\n\nconst StepOne = props => {\n  const handleSubmit = values => {\n    props.next(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.data,\n    onSubmit: handleSubmit,\n    children: () => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"First name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"first_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"last_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = StepOne;\n\nconst StepTwo = props => {\n  const handleSubmit = values => {\n    props.next(values, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.data,\n    onSubmit: handleSubmit,\n    children: ({\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => props.prev(values),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = StepTwo;\nexport default Formik2;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Formik2\");\n$RefreshReg$(_c2, \"StepOne\");\n$RefreshReg$(_c3, \"StepTwo\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/Formik2.js"],"names":["React","useState","Formik","Form","Field","Formik2","data","setData","name","first_name","last_name","email","password","currentStep","setCurrentStep","makeRequest","formData","console","log","handleNextStep","newData","final","prev","handlePrevStep","steps","StepOne","props","handleSubmit","values","next","StepTwo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Formik, Form, Field } from 'formik'\n\nconst Formik2 = () => {\n    const [data, setData] = useState({\n        name: {\n            first_name: '',\n            last_name: '',\n        },\n        email: '',\n        password: ''\n    })\n\n    const [currentStep, setCurrentStep] = useState(0)\n\n    const makeRequest = (formData) => {\n        console.log('form is submitted', formData)\n    }\n\n    const handleNextStep = (newData, final = false) => {\n        setData((prev) => ({ ...prev, ...newData }))\n\n        if(final) {\n            makeRequest(newData)\n            return\n        }\n\n        setCurrentStep((prev) => prev + 1);\n    }\n\n    const handlePrevStep = (newData) => {\n      setData((prev) => ({ ...prev, ...newData }))\n      setCurrentStep((prev) => prev - 1);\n    }\n    \n    console.log('data', data)\n\n    const steps = [\n        <StepOne next={handleNextStep} data={data} />, \n        <StepTwo next={handleNextStep} prev={handlePrevStep} data={data} />\n    ]\n\n    return (\n        <>\n            <div>\n                {steps[currentStep]}\n            </div>\n        </>\n    )\n}\n\nconst StepOne = (props) => {\n\n    const handleSubmit = (values) => {\n        props.next(values)\n    }\n\n    return (\n        <Formik\n            initialValues={props.data}\n            onSubmit={handleSubmit}\n        >\n            {() => (\n                <Form>\n                    <p>First name</p>\n                    <Field name='first_name'/>\n                    <p>Last name</p>\n                    <Field name='last_name'/>\n                    <button type='submit'>Next</button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nconst StepTwo = (props) => {\n\n    const handleSubmit = (values) => {\n        props.next(values, true)\n    }\n\n    return (\n        <Formik\n            initialValues={props.data}\n            onSubmit={handleSubmit}\n        >\n            {({ values }) => (\n                <Form>\n                    <p>Email</p>\n                    <Field name='password'/>\n                    <p>Password</p>\n                    <Field name='email'/>\n                    <button type='button' onClick={() => props.prev(values)}>Back</button>\n                    <button type='submit'>Submit</button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default Formik2\n"]},"metadata":{},"sourceType":"module"}