{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformationsWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField, FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport maximumStayDuration from '../../Json/MaximumStayDuration';\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering';\nimport serviceCostTerm from '../../Json/ServiceCostTerm';\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst livingPlace = {\n  max_stay_duration: '',\n  rental_price_term: '',\n  description: '',\n  changeover_time: '',\n  deposit: '',\n  service_costs: '',\n  rentalprice: '',\n  b2b_price: '',\n  b2c_price: '',\n  vhe_facility_types: {\n    welcome_pack: true,\n    bed_sheets: false,\n    towels: false,\n    bike: false,\n    weekly_cleaning: false,\n    final_cleaning: false,\n    kitchen_supplies: false,\n    wifi: false,\n    wifi_television: false\n  }\n};\nconst validationSchema = Yup.object().shape({\n  rooms: Yup.array().of(Yup.object().shape({\n    vhes: Yup.array().of(Yup.object().shape({\n      max_stay_duration: Yup.string().required('Test')\n    })).required('Test')\n  })).required('Test')\n});\n\nconst ErrorMessage = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: name,\n  render: ({\n    form\n  }) => {\n    const error = getIn(form.errors, name);\n    const touch = getIn(form.touched, name);\n    return touch && error ? error : null;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this);\n\n_c = ErrorMessage;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst LivingPlaceInformations = ({\n  name,\n  room\n}) => /*#__PURE__*/_jsxDEV(FieldArray, {\n  name: name,\n  render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '8px',\n      backgroundColor: 'rgba(0, 0, 0, 0.1'\n    },\n    children: room.vhes.map((vhe, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: `${name}.${index}.max_stay_duration`,\n          value: room.vhes[index].max_stay_duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: `${name}.${index}.max_stay_duration`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => arrayHelpers.remove(index),\n          children: \"remove Vhe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => arrayHelpers.insert(index, ''),\n          children: \"Add Vhe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 5\n}, this);\n\n_c3 = LivingPlaceInformations;\n\nconst LivingPlaceInformationsWrapper = props => {\n  _s();\n\n  const [vhesArraysCreated, setVhesArraysCreated] = useState(false);\n  let initialValues = {\n    rooms: ''\n  };\n  let vhesArray = [];\n  let rooms = props.data.rooms;\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n  let numberOfLivingPlaces = [];\n\n  for (let i = 0; i < numberOfRooms; i++) {\n    numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places));\n  }\n\n  const setVhesArrays = (rooms, numberOfRooms, numberOfLivingPlaces) => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      vhesArray = [];\n\n      for (let j = 0; j < numberOfLivingPlaces[i]; j++) {\n        vhesArray.push(livingPlace);\n      }\n\n      rooms[i].vhes = vhesArray;\n    }\n\n    return rooms;\n  };\n\n  useEffect(() => {\n    rooms = setVhesArrays(rooms, numberOfRooms, numberOfLivingPlaces);\n    initialValues.rooms = props.data.rooms;\n    setVhesArraysCreated(true);\n  });\n  if (!vhesArraysCreated) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues\n      /* validationSchema={validationSchema} */\n      ,\n      onSubmit: data => {\n        console.log(data);\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleSubmit\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"rooms\",\n            render: arrayHelpers => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      borderBottom: 1,\n                      borderColor: 'divider'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Tabs, {\n                      value: value,\n                      onChange: handleChangeTab,\n                      \"aria-label\": \"basic tabs example\",\n                      centered: true,\n                      children: Array.from(Array(numberOfRooms), (e, index) => {\n                        return /*#__PURE__*/_jsxDEV(Tab, {\n                          label: \"Item One\",\n                          ...a11yProps(index)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 65\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 49\n                  }, this), props.data.residence.number_rooms_with_vhes > 0 && rooms.map((room, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n                    value: value,\n                    index: index,\n                    children: /*#__PURE__*/_jsxDEV(Carousel, {\n                      style: {\n                        backgroundColor: 'red'\n                      },\n                      interval: 20,\n                      wrap: false,\n                      children: rooms[index].vhes.map((vhe, indexVhe) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [\"Room index: \", index]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: [\"Vhe index: \", indexVhe]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 196,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: `rooms.${index}.vhes.${indexVhe}.max_stay_duration`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 197,\n                            columnNumber: 77\n                          }, this), indexVhe, /*#__PURE__*/_jsxDEV(FormControl, {\n                            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                              component: \"legend\",\n                              style: {\n                                color: 'black',\n                                marginBottom: '10px'\n                              },\n                              children: \"Maximum stay duration\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 201,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(Select\n                            /* name={`rooms.${index}.vhes.${indexVhe}.max_stay_duration`} */\n                            , {\n                              name: vhe.max_stay_duration\n                              /* value={'short_stay'} */\n                              ,\n                              onChange: handleChange\n                              /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                              helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                              ,\n                              children: maximumStayDuration.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                                value: item.value,\n                                children: item.label\n                              }, index, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 211,\n                                columnNumber: 89\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 202,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Description\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 219,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            name: `rooms.${index}.vhes.${indexVhe}.description`\n                            /* value={formik.values.complex.complex_name} */\n                            ,\n                            onChange: handleChange\n                            /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                            helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 220,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Changeover time\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 231,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            name: `rooms.${index}.vhes.${indexVhe}.changeover_time`\n                            /* value={formik.values.complex.complex_name} */\n                            ,\n                            onChange: handleChange\n                            /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                            helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 232,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(FormControl, {\n                            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                              component: \"legend\",\n                              style: {\n                                color: 'black',\n                                marginBottom: '10px'\n                              },\n                              children: \"Status at point of registering\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 244,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(Select, {\n                              name: `rooms.${index}.vhes.${indexVhe}.status_at_point_of_registering`\n                              /* value={formik.values.complex.phone_number_landcode} */\n                              ,\n                              onChange: handleChange\n                              /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                              helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                              ,\n                              children: statusAtPointOfRegestering.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                                value: item.value,\n                                children: item.label\n                              }, index, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 253,\n                                columnNumber: 89\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 245,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 243,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Deposit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 261,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            name: `rooms.${index}.vhes.${indexVhe}.deposit`\n                            /* value={formik.values.complex.complex_name}\n                            onChange={formik.handleChange} */\n\n                            /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                            helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 262,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"Service cost\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 273,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            name: `rooms.${index}.vhes.${indexVhe}.service_cost`\n                            /* value={formik.values.complex.complex_name} */\n                            ,\n                            onChange: handleChange\n                            /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                            helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 274,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"B2B rental price\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 285,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            name: `rooms.${index}.vhes.${indexVhe}.b2b_rental_price`\n                            /* value={formik.values.complex.complex_name} */\n                            ,\n                            onChange: handleChange\n                            /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                            helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 286,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                            component: \"legend\",\n                            style: {\n                              color: 'black',\n                              marginBottom: '10px'\n                            },\n                            children: \"B2C rental price\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 297,\n                            columnNumber: 77\n                          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                            name: `rooms.${index}.vhes.${indexVhe}.b2c_rental_price`\n                            /* value={formik.values.complex.complex_name} */\n                            ,\n                            onChange: handleChange\n                            /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                            helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 298,\n                            columnNumber: 77\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(FormControl, {\n                            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                              component: \"legend\",\n                              style: {\n                                color: 'black',\n                                marginBottom: '10px'\n                              },\n                              children: \"Service cost term\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 310,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(Select, {\n                              name: `rooms.${index}.vhes.${indexVhe}.service_cost_term`\n                              /* value={formik.values.complex.phone_number_landcode} */\n                              ,\n                              onChange: handleChange\n                              /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                              helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                              ,\n                              children: serviceCostTerm.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                                value: item.value,\n                                children: item.label\n                              }, index, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 319,\n                                columnNumber: 89\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 311,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 309,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 73\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                              component: \"legend\",\n                              style: {\n                                color: 'black',\n                                marginBottom: '10px'\n                              },\n                              children: \"Facility types\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 328,\n                              columnNumber: 81\n                            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                              children: livingPlaceFacilities.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                                name: `rooms.${index}.vhes.vhe_facility_type.${item.value}`,\n                                onChange: handleChange,\n                                control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 331,\n                                  columnNumber: 213\n                                }, this),\n                                label: item.label\n                              }, index, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 331,\n                                columnNumber: 89\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 329,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 327,\n                            columnNumber: 77\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 73\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 69\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 53\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LivingPlaceInformationsWrapper, \"aq9ilF3yGT8xo0orTE/pxkEPMPA=\");\n\n_c4 = LivingPlaceInformationsWrapper;\nexport default LivingPlaceInformationsWrapper;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"LivingPlaceInformations\");\n$RefreshReg$(_c4, \"LivingPlaceInformationsWrapper\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformationsWrapper.js"],"names":["React","useState","useEffect","Formik","Field","Form","FieldArray","getIn","Yup","PropTypes","Box","Tabs","Tab","Typography","FormControl","FormLabel","Select","MenuItem","TextField","FormGroup","FormControlLabel","Checkbox","maximumStayDuration","statusAtPointOfRegestering","serviceCostTerm","livingPlaceFacilities","Carousel","livingPlace","max_stay_duration","rental_price_term","description","changeover_time","deposit","service_costs","rentalprice","b2b_price","b2c_price","vhe_facility_types","welcome_pack","bed_sheets","towels","bike","weekly_cleaning","final_cleaning","kitchen_supplies","wifi","wifi_television","validationSchema","object","shape","rooms","array","of","vhes","string","required","ErrorMessage","name","form","error","errors","touch","touched","TabPanel","props","children","value","index","other","p","propTypes","node","number","isRequired","a11yProps","id","LivingPlaceInformations","room","arrayHelpers","marginTop","backgroundColor","map","vhe","remove","insert","LivingPlaceInformationsWrapper","vhesArraysCreated","setVhesArraysCreated","initialValues","vhesArray","data","setValue","handleChangeTab","event","newValue","numberOfRooms","parseInt","residence","number_rooms_with_vhes","numberOfLivingPlaces","i","push","number_of_living_places","setVhesArrays","j","console","log","next","values","handleSubmit","width","borderBottom","borderColor","Array","from","e","indexVhe","color","marginBottom","handleChange","item","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Formik, Field, Form, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormControl, FormLabel, Select, MenuItem, TextField, FormGroup, FormControlLabel, Checkbox } from '@mui/material'\n\nimport maximumStayDuration from '../../Json/MaximumStayDuration'\nimport statusAtPointOfRegestering from '../../Json/StatusAtPointOfRegestering'\nimport serviceCostTerm from '../../Json/ServiceCostTerm'\nimport livingPlaceFacilities from '../../Json/LivingPlaceFacilities'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst livingPlace = {\n    max_stay_duration: '',\n    rental_price_term: '',\n    description: '',\n    changeover_time: '',\n    deposit: '',\n    service_costs: '',\n    rentalprice: '',\n    b2b_price: '',\n    b2c_price: '',\n    vhe_facility_types: {\n        welcome_pack: true,\n        bed_sheets: false,\n        towels: false,\n        bike: false,\n        weekly_cleaning: false,\n        final_cleaning: false,\n        kitchen_supplies: false,\n        wifi: false,\n        wifi_television: false\n    }\n}\n\nconst validationSchema = Yup.object().shape({\n    rooms: Yup.array().of(\n        Yup.object().shape({\n            vhes: Yup.array().of(\n                Yup.object().shape({\n                    max_stay_duration: Yup.string().required('Test')\n                })).required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nfunction TabPanel(props) {\n\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst LivingPlaceInformations = ({ name, room }) => (\n    <FieldArray\n        name={name}\n        render={arrayHelpers => (\n            <div style={{ marginTop: '8px', backgroundColor: 'rgba(0, 0, 0, 0.1' }}>\n                {room.vhes.map((vhe, index) => (\n                    <>\n                        <div key={index}>\n                            <Field\n                                name={`${name}.${index}.max_stay_duration`}\n                                value={room.vhes[index].max_stay_duration}\n                            />\n                            <ErrorMessage name={`${name}.${index}.max_stay_duration`} />\n                            <button type='button' onClick={() => arrayHelpers.remove(index)}>remove Vhe</button>\n                            <button type='button' onClick={() => arrayHelpers.insert(index, '')}>Add Vhe</button>\n                        </div>\n                    </>\n                ))}\n            </div>\n        )}\n    />\n)\n\nconst LivingPlaceInformationsWrapper = (props) => {\n\n    const [vhesArraysCreated, setVhesArraysCreated] = useState(false)\n\n    let initialValues = {\n        rooms: ''\n    }\n\n    let vhesArray = []\n\n    let rooms = props.data.rooms\n\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    let numberOfLivingPlaces = []\n    for(let i = 0; i < numberOfRooms; i++) {\n        numberOfLivingPlaces.push(parseInt(props.data.rooms[i].number_of_living_places))\n    }\n\n    const setVhesArrays = (rooms, numberOfRooms, numberOfLivingPlaces) => {\n        for(let i = 0; i <numberOfRooms; i++) {\n            vhesArray = []\n            for(let j = 0; j < numberOfLivingPlaces[i]; j++ ){\n                vhesArray.push(livingPlace)\n            }\n            rooms[i].vhes = vhesArray\n        }\n        return rooms\n    }\n\n    useEffect(() => {\n        rooms = setVhesArrays(rooms, numberOfRooms, numberOfLivingPlaces)\n        initialValues.rooms = props.data.rooms\n        setVhesArraysCreated(true)\n    })\n\n    if(!vhesArraysCreated) return null\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                /* validationSchema={validationSchema} */\n                onSubmit={(data) => {\n                    console.log(data)\n                    props.next(data)\n                }}\n            >\n                {({ values, handleSubmit }) => {\n                    return (\n                        <form onSubmit={handleSubmit}>\n                            <FieldArray\n                                name='rooms'\n                                render={arrayHelpers => (\n                                    <>\n                                        <div>\n                                            <Box sx={{ width: '100%' }}>\n                                                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                                    <Tabs value={value} onChange={handleChangeTab} aria-label='basic tabs example' centered>\n                                                        {Array.from(Array(numberOfRooms), (e, index) => {\n                                                            return (\n                                                                <Tab label='Item One' {...a11yProps(index)} />\n                                                            )\n                                                        })}\n                                                    </Tabs>\n                                                </Box>\n                                                {props.data.residence.number_rooms_with_vhes > 0 && rooms.map((room, index) => (\n                                                    <TabPanel value={value} index={index}>\n                                                        <Carousel style={{ backgroundColor: 'red' }} interval={20} wrap={false}>\n                                                            {rooms[index].vhes.map((vhe, indexVhe) => (\n                                                                    <Carousel.Item>\n                                                                        <div>\n                                                                            <p>Room index: {index}</p>\n                                                                            <p>Vhe index: {indexVhe}</p>\n                                                                            <p>{`rooms.${index}.vhes.${indexVhe}.max_stay_duration`}</p>\n                                                                            {indexVhe}\n                                                                            {/* MAXIMUM STAY DURATION */}\n                                                                            <FormControl>\n                                                                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Maximum stay duration</FormLabel>\n                                                                                <Select\n                                                                                    /* name={`rooms.${index}.vhes.${indexVhe}.max_stay_duration`} */\n                                                                                    name={vhe.max_stay_duration}\n                                                                                    /* value={'short_stay'} */\n                                                                                    onChange={handleChange}\n                                                                                    /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                                    helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                                >\n                                                                                    {maximumStayDuration.map((item, index) => (\n                                                                                        <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                                    ))}\n                                                                                </Select>\n                                                                            </FormControl>\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* DESCRIPTION */}\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Description</FormLabel>\n                                                                            <TextField\n                                                                                name={`rooms.${index}.vhes.${indexVhe}.description`}\n                                                                                /* value={formik.values.complex.complex_name} */\n                                                                                onChange={handleChange}\n                                                                                /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                                helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                            />\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* CHANGEOVER TIME */}\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Changeover time</FormLabel>\n                                                                            <TextField\n                                                                                name={`rooms.${index}.vhes.${indexVhe}.changeover_time`}\n                                                                                /* value={formik.values.complex.complex_name} */\n                                                                                onChange={handleChange}\n                                                                                /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                                helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                            />\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* STATUS AT POINT OF REGESTERING */}\n                                                                            <FormControl>\n                                                                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Status at point of registering</FormLabel>\n                                                                                <Select\n                                                                                    name={`rooms.${index}.vhes.${indexVhe}.status_at_point_of_registering`}\n                                                                                    /* value={formik.values.complex.phone_number_landcode} */\n                                                                                    onChange={handleChange}\n                                                                                    /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                                    helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                                >\n                                                                                    {statusAtPointOfRegestering.map((item, index) => (\n                                                                                        <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                                    ))}\n                                                                                </Select>\n                                                                            </FormControl>\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* DEPOSIT */}\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Deposit</FormLabel>\n                                                                            <TextField\n                                                                                name={`rooms.${index}.vhes.${indexVhe}.deposit`}\n                                                                                /* value={formik.values.complex.complex_name}\n                                                                                onChange={formik.handleChange} */\n                                                                                /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                                helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                            />\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* SERVICE COST */}\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost</FormLabel>\n                                                                            <TextField\n                                                                                name={`rooms.${index}.vhes.${indexVhe}.service_cost`}\n                                                                                /* value={formik.values.complex.complex_name} */\n                                                                                onChange={handleChange}\n                                                                                /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                                helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                            />\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* B2B RENTAL PRICE */}\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2B rental price</FormLabel>\n                                                                            <TextField\n                                                                                name={`rooms.${index}.vhes.${indexVhe}.b2b_rental_price`}\n                                                                                /* value={formik.values.complex.complex_name} */\n                                                                                onChange={handleChange}\n                                                                                /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                                helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                            />\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* B2C RENTAL PRICE */}\n                                                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>B2C rental price</FormLabel>\n                                                                            <TextField\n                                                                                name={`rooms.${index}.vhes.${indexVhe}.b2c_rental_price`}\n                                                                                /* value={formik.values.complex.complex_name} */\n                                                                                onChange={handleChange}\n                                                                                /* error={getIn(formik.touched, 'complex.complex_name') && Boolean(getIn(formik.errors, 'complex.complex_name'))}\n                                                                                helperText={getIn(formik.touched, 'complex.complex_name') && getIn(formik.errors, 'complex.complex_name')} */\n                                                                            />\n                                                                        </div>\n        \n                                                                        <div>\n                                                                            {/* SERVICE COST TERM */}\n                                                                            <FormControl>\n                                                                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Service cost term</FormLabel>\n                                                                                <Select\n                                                                                    name={`rooms.${index}.vhes.${indexVhe}.service_cost_term`}\n                                                                                    /* value={formik.values.complex.phone_number_landcode} */\n                                                                                    onChange={handleChange}\n                                                                                    /* error={formik.touched.introduction.vhe_type && Boolean(formik.errors.introduction.vhe_type)}\n                                                                                    helperText={formik.touched.vhe_type && formik.errors.vhe_type} */\n                                                                                >\n                                                                                    {serviceCostTerm.map((item, index) => (\n                                                                                        <MenuItem key={index} value={item.value}>{item.label}</MenuItem>\n                                                                                    ))}\n                                                                                </Select>\n                                                                            </FormControl>\n                                                                        </div>\n        \n                                                                        <div>\n        \n                                                                            <FormGroup>\n                                                                                <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Facility types</FormLabel>\n                                                                                <FormGroup>\n                                                                                    {livingPlaceFacilities.map((item, index) => (\n                                                                                        <FormControlLabel key={index} name={`rooms.${index}.vhes.vhe_facility_type.${item.value}`} onChange={handleChange} control={<Checkbox />}label={item.label} />\n                                                                                    ))}\n                                                                                </FormGroup>\n                                                                            </FormGroup>\n                                                                        </div>\n                                                                    </Carousel.Item>\n                                                                ))}\n                                                        </Carousel>\n                                                    </TabPanel>\n                                                ))}\n                                            </Box>\n                                        </div>\n                                    </>\n                                )}\n                            />\n                        </form>\n                    )\n                }}\n            </Formik>\n        </>\n    )\n}\n\nexport default LivingPlaceInformationsWrapper\n"]},"metadata":{},"sourceType":"module"}