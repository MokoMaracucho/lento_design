{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/RoomsInformations.js\";\nimport React from 'react';\nimport { Formik, Form, FieldArray } from 'formik';\nimport { FormLabel, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  rooms: [{\n    room_type: '',\n    room_number: '',\n    floor: '',\n    dimension_m2: '',\n    coliving_allowed: '',\n    room_facility_type: {\n      wardrobe: '',\n      sink: '',\n      working_space: '',\n      fridge: '',\n      built_in_wardrobe: ''\n    }\n  }]\n};\n\nconst RoomsInformations = props => {\n  console.log(props.data.residence.number_rooms_with_vhes);\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: data => {\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"rooms\",\n          children: ({\n            remove,\n            push\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [Array.from(Array(numberOfRooms), (e, i) => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this);\n            }), props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                style: {\n                  color: 'black',\n                  marginBottom: '10px'\n                },\n                children: \"Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: `floorplan.${index}.floor`,\n                value: room.floor,\n                onChange: handleChange\n                /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                style: {\n                  color: 'black',\n                  marginBottom: '10px'\n                },\n                children: \"Area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                name: `floorplan.${index}.area`,\n                value: room.area,\n                onChange: handleChange\n                /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = RoomsInformations;\nexport default RoomsInformations;\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomsInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/RoomsInformations.js"],"names":["React","Formik","Form","FieldArray","FormLabel","TextField","initialValues","rooms","room_type","room_number","floor","dimension_m2","coliving_allowed","room_facility_type","wardrobe","sink","working_space","fridge","built_in_wardrobe","RoomsInformations","props","console","log","data","residence","number_rooms_with_vhes","numberOfRooms","parseInt","next","values","handleChange","remove","push","Array","from","e","i","map","room","index","color","marginBottom","area"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Formik, Form, FieldArray } from 'formik'\n\nimport { FormLabel, TextField } from '@mui/material'\n\nconst initialValues = {\n    rooms: [\n        {\n            room_type: '',\n            room_number: '',\n            floor: '',\n            dimension_m2: '',\n            coliving_allowed: '',\n            room_facility_type:  {\n                wardrobe: '',\n                sink: '',\n                working_space: '',\n                fridge: '',\n                built_in_wardrobe: ''\n            }\n        }\n    ]\n}\n\nconst RoomsInformations = (props) => {\n\n    console.log(props.data.residence.number_rooms_with_vhes)\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={(data) => {\n                    props.next(data)\n                }}\n            >\n                {({ values, handleChange }) => (\n                    <Form>\n                        <FieldArray name='rooms'>\n                            {({ remove, push }) => (\n                                <div>\n                                    {Array.from(Array(numberOfRooms), (e, i) => {\n                                        return (\n                                            <p>Test</p>\n                                        )\n                                    })}\n                                    {props.data.residence.number_rooms_with_vhes > 0 && values.rooms.map((room, index) => (\n                                        <div className='row' key={index}>\n\n                                            {/* FLOOR */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Floor</FormLabel>\n                                            <TextField\n                                                name={`floorplan.${index}.floor`}\n                                                value={room.floor}\n                                                onChange={handleChange}\n                                                /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                                helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                            />\n\n                                            {/* AREA */}\n                                            <FormLabel component='legend' style={{ color: 'black', marginBottom: '10px'}}>Area</FormLabel>\n                                            <TextField\n                                                name={`floorplan.${index}.area`}\n                                                value={room.area}\n                                                onChange={handleChange}\n                                                /* error={getIn(formik.touched, 'residence.house_number_extension') && Boolean(getIn(formik.errors, 'residence.house_number_extension'))}\n                                                helperText={getIn(formik.touched, 'residence.house_number_extension') && getIn(formik.errors, 'residence.house_number_extension')} */\n                                            />\n\n                                            {/* <div className='col'>\n                                                <button type='button' className='secondary' onClick={() => remove(index)}>X</button>\n                                            </div> */}\n                                        </div>\n                                    ))}\n                                    {/* <button type='button' className='secondary' onClick={() => push({ room_type: '', room_number: '' })}>Add room</button> */}\n                                </div>\n                            )}\n                        </FieldArray>\n                        <button type='submit'>Submit</button>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    )\n}\n\nexport default RoomsInformations\n\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */"]},"metadata":{},"sourceType":"module"}