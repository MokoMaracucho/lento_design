{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu/src/html/map/GoogleMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport CustomMarker from './CustomMarker';\nimport mapStyle from './css/MapStyle';\nimport './css/GoogleMap.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GoogleMap = props => {\n  _s();\n\n  const _mapLoaded = (mapProps, map) => {\n    map.setOptions({\n      styles: mapStyle\n    });\n  };\n  /* const [mapStyle, setMapStyle] = useState([]) */\n\n  /* const drawMarker = () => {\n      const state = {\n          cords: [\n              {latitude: 51.54015818523244, longitude: 5.995251772262631}\n          ]\n      }\n       return state.cords.map((store, i) => {\n          return ( \n              <Marker\n                  key={i}\n                  id={i}\n                  position={{\n                      lat: store.latitude,\n                      lng: store.longitude\n                  }}\n                  onClick={() => console.log(\"Event Hanlder Called\")}\n              >\n                  TEST\n              </Marker>\n          )\n      })\n  } */\n\n\n  useEffect(() => {\n    /* drawMarker() */\n  });\n\n  const image = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '200px',\n          height: '200px',\n          backgroundColor: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      class: props.map_CLASSNAME,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        style: {\n          height: props.height\n        },\n        google: props.google,\n        onReady: (mapProps, map) => _mapLoaded(mapProps, map),\n        zoom: 11,\n        initialCenter: {\n          lat: 51.54015818523244,\n          lng: 5.995251772262631\n        },\n        defaultOptions: {\n          mapId: 'dbb29a4f0be1f983',\n          disableDefaultUI: true,\n          // disable default map UI\n          draggable: true,\n          // make map draggable\n          keyboardShortcuts: false,\n          // disable keyboard shortcuts\n          scaleControl: true,\n          // allow scale controle\n          scrollwheel: true // allow scroll wheel\n\n          /* styles: mapStyle // change default map styles */\n\n        },\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          icon: image,\n          position: {\n            lat: 51.54015818523244,\n            // latitude to position the marker\n            lng: 5.995251772262631 // longitude to position the marker\n\n          },\n          children: /*#__PURE__*/_jsxDEV(CustomMarker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(GoogleMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GoogleMap;\nconsole.log(process.env.REACT_APP_GOOGLE_MAP_API);\nconsole.log(process.env.REACT_APP_URL);\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAP_API\n})(GoogleMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu/src/html/map/GoogleMap.js"],"names":["React","useEffect","Map","Marker","GoogleApiWrapper","CustomMarker","mapStyle","GoogleMap","props","_mapLoaded","mapProps","map","setOptions","styles","image","width","height","backgroundColor","map_CLASSNAME","google","lat","lng","mapId","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","console","log","process","env","REACT_APP_GOOGLE_MAP_API","REACT_APP_URL","apiKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,gBAAtB,QAA8C,mBAA9C;AAEA,OAAOC,YAAP,MAA0B,gBAA1B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,sBAAP;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAClCA,IAAAA,GAAG,CAACC,UAAJ,CAAe;AACXC,MAAAA,MAAM,EAAEP;AADG,KAAf;AAGH,GAJD;AAMA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGIL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACH,GAFQ,CAAT;;AAIA,QAAMa,KAAK,GAAG,MAAM;AAChB,wBACI;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,MAAM,EAAE,OAAzB;AAAkCC,UAAAA,eAAe,EAAE;AAAnD;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH,GAND;;AAQA,sBACI;AAAA,2BACI;AACI,MAAA,EAAE,EAAC,KADP;AAEI,MAAA,KAAK,EAAET,KAAK,CAACU,aAFjB;AAAA,6BAII,QAAC,GAAD;AACI,QAAA,KAAK,EAAE;AAACF,UAAAA,MAAM,EAAER,KAAK,CAACQ;AAAf,SADX;AAEI,QAAA,MAAM,EAAER,KAAK,CAACW,MAFlB;AAGI,QAAA,OAAO,EAAE,CAACT,QAAD,EAAWC,GAAX,KAAmBF,UAAU,CAACC,QAAD,EAAWC,GAAX,CAH1C;AAII,QAAA,IAAI,EAAE,EAJV;AAKI,QAAA,aAAa,EAAE;AACXS,UAAAA,GAAG,EAAE,iBADM;AAEXC,UAAAA,GAAG,EAAE;AAFM,SALnB;AASI,QAAA,cAAc,EAAE;AACZC,UAAAA,KAAK,EAAE,kBADK;AAEZC,UAAAA,gBAAgB,EAAE,IAFN;AAEY;AACxBC,UAAAA,SAAS,EAAE,IAHC;AAGK;AACjBC,UAAAA,iBAAiB,EAAE,KAJP;AAIc;AAC1BC,UAAAA,YAAY,EAAE,IALF;AAKQ;AACpBC,UAAAA,WAAW,EAAE,IAND,CAMO;;AACnB;;AAPY,SATpB;AAAA,+BAmBI,QAAC,MAAD;AACI,UAAA,IAAI,EAAEb,KADV;AAEI,UAAA,QAAQ,EAAE;AACNM,YAAAA,GAAG,EAAE,iBADC;AACkB;AACxBC,YAAAA,GAAG,EAAE,iBAFC,CAEiB;;AAFjB,WAFd;AAAA,iCAOI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuCH,CArFD;;GAAMd,S;;KAAAA,S;AAuFNqB,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,wBAAxB;AACAJ,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYE,aAAxB;AAEA,eAAe7B,gBAAgB,CAAC;AAC5B8B,EAAAA,MAAM,EAAEJ,OAAO,CAACC,GAAR,CAAYC;AADQ,CAAD,CAAhB,CAEVzB,SAFU,CAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react'\n\nimport CustomMarker  from './CustomMarker'\n\nimport mapStyle from './css/MapStyle'\n\nimport './css/GoogleMap.scss'\n\nconst GoogleMap = (props) => {\n \n    const _mapLoaded = (mapProps, map) => {\n        map.setOptions({\n            styles: mapStyle\n        })\n    }\n\n    /* const [mapStyle, setMapStyle] = useState([]) */\n\n    /* const drawMarker = () => {\n        const state = {\n            cords: [\n                {latitude: 51.54015818523244, longitude: 5.995251772262631}\n            ]\n        }\n\n        return state.cords.map((store, i) => {\n            return ( \n                <Marker\n                    key={i}\n                    id={i}\n                    position={{\n                        lat: store.latitude,\n                        lng: store.longitude\n                    }}\n                    onClick={() => console.log(\"Event Hanlder Called\")}\n                >\n                    TEST\n                </Marker>\n            )\n        })\n    } */\n\n    useEffect(() => {\n        /* drawMarker() */\n    })\n\n    const image = () => {\n        return (\n            <> \n                <div style={{width: '200px', height: '200px', backgroundColor: 'red'}}></div>\n            </>\n        )   \n    }\n\n    return (\n        <>\n            <div\n                id='map'\n                class={props.map_CLASSNAME}\n            >\n                <Map\n                    style={{height: props.height}}\n                    google={props.google}\n                    onReady={(mapProps, map) => _mapLoaded(mapProps, map)}\n                    zoom={11}\n                    initialCenter={{ \n                        lat: 51.54015818523244, \n                        lng: 5.995251772262631\n                    }}\n                    defaultOptions={{\n                        mapId: 'dbb29a4f0be1f983',\n                        disableDefaultUI: true, // disable default map UI\n                        draggable: true, // make map draggable\n                        keyboardShortcuts: false, // disable keyboard shortcuts\n                        scaleControl: true, // allow scale controle\n                        scrollwheel: true, // allow scroll wheel\n                        /* styles: mapStyle // change default map styles */\n                    }}\n                >\n                    <Marker\n                        icon={image}\n                        position={{\n                            lat: 51.54015818523244, // latitude to position the marker\n                            lng: 5.995251772262631 // longitude to position the marker\n                        }}\n                    >\n                        <CustomMarker />\n                    </Marker>\n                    {/* {drawMarker()} */}\n                </Map>\n            </div>\n        </>\n    )\n}\n\nconsole.log(process.env.REACT_APP_GOOGLE_MAP_API)\nconsole.log(process.env.REACT_APP_URL)\n\nexport default GoogleApiWrapper({\n    apiKey: process.env.REACT_APP_GOOGLE_MAP_API\n  })(GoogleMap)"]},"metadata":{},"sourceType":"module"}