{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/InviteFriends.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  friends: [{\n    name: '',\n    email: ''\n  }]\n};\n\nconst InviteFriends = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Invite friends\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: async values => {\n      await new Promise(r => setTimeout(r, 500));\n      alert(JSON.stringify(values, null, 2));\n    },\n    children: ({\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"friends\",\n        children: ({\n          insert,\n          remove,\n          push\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [values.friends.length > 0 && values.friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `friends.${index}.name`,\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: `friends.${index}.name`,\n                placeholder: \"Jane Doe\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: `friends.${index}.name`,\n                component: \"div\",\n                className: \"field-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `friends.${index}.email`,\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: `friends.${index}.email`,\n                placeholder: \"jane@acme.com\",\n                type: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: `friends.${index}.name`,\n                component: \"div\",\n                className: \"field-error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"secondary\",\n                onClick: () => remove(index),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"secondary\",\n            onClick: () => push({\n              name: '',\n              email: ''\n            }),\n            children: \" Add Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n\n_c = InviteFriends;\nReactDOM.render( /*#__PURE__*/_jsxDEV(InviteFriends, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"InviteFriends\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Tests/InviteFriends.js"],"names":["React","ReactDOM","Formik","Field","Form","ErrorMessage","FieldArray","initialValues","friends","name","email","InviteFriends","values","Promise","r","setTimeout","alert","JSON","stringify","insert","remove","push","length","map","friend","index","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Formik, Field, Form, ErrorMessage, FieldArray } from 'formik'\n\nconst initialValues = {\n    friends: [\n        {\n            name: '',\n            email: ''\n        },\n    ]\n}\n\nconst InviteFriends = () => (\n    <div>\n        <h1>Invite friends</h1>\n        <Formik\n        initialValues={initialValues}\n        onSubmit={async (values) => {\n            await new Promise((r) => setTimeout(r, 500))\n            alert(JSON.stringify(values, null, 2))\n        }}\n        >\n        {({ values }) => (\n            <Form>\n                <FieldArray name='friends'>\n                    {({ insert, remove, push }) => (\n                        <div>\n                            {values.friends.length > 0 && values.friends.map((friend, index) => (\n                                <div className='row' key={index}>\n                                    <div className='col'>\n                                        <label htmlFor={`friends.${index}.name`}>Name</label>\n                                        <Field name={`friends.${index}.name`} placeholder='Jane Doe' type='text' />\n                                        <ErrorMessage name={`friends.${index}.name`} component='div' className='field-error' />\n                                    </div>\n                                    <div className='col'>\n                                        <label htmlFor={`friends.${index}.email`}>Email</label>\n                                        <Field name={`friends.${index}.email`} placeholder='jane@acme.com' type='email' />\n                                        <ErrorMessage name={`friends.${index}.name`} component='div' className='field-error' />\n                                    </div>\n                                    <div className='col'>\n                                        <button type='button' className='secondary' onClick={() => remove(index)}>X</button>\n                                    </div>\n                                </div>\n                            ))}\n                            <button type='button' className='secondary' onClick={() => push({ name: '', email: '' })}> Add Friend</button>\n                        </div>\n                    )}\n                </FieldArray>\n                <button type='submit'>Invite</button>\n            </Form>\n        )}\n    </Formik>\n  </div>\n)\n\nReactDOM.render(<InviteFriends />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}