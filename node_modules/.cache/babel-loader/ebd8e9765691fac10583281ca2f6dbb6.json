{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformationsWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material';\nimport roomTypes from '../../Json/RoomTypes';\nimport roomFacilities from '../../Json/RoomFacilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialValues = {\n  rooms: ''\n};\nlet livingPlaceArray = [];\nconst livingPlace = {\n  max_stay_duration: '',\n  rental_price_term: '',\n  description: '',\n  changeover_time: '',\n  deposit: '',\n  service_costs: '',\n  rentalprice: '',\n  b2b_price: '',\n  b2c_price: '',\n  vhe_facility_types: {\n    welcome_pack: '',\n    bed_sheets: '',\n    towels: '',\n    bike: '',\n    weekly_cleaning: '',\n    final_cleaning: '',\n    kitchen_supplies: '',\n    wifi: '',\n    wifi_television: ''\n  }\n};\nconst validationSchema = Yup.object().shape({\n  rooms: Yup.array().of(Yup.object().shape({\n    room_type: Yup.string().required('Test'),\n    room_number: Yup.number().required('Test'),\n    floor: Yup.number().required('Test'),\n    dimension_m2: Yup.number().required('Test'),\n    coliving_allowed: Yup.boolean().required('Test'),\n    number_of_living_places: Yup.number().required('Test')\n  })).required('Test')\n});\n\nconst ErrorMessage = ({\n  name\n}) => /*#__PURE__*/_jsxDEV(Field, {\n  name: name,\n  render: ({\n    form\n  }) => {\n    const error = getIn(form.errors, name);\n    const touch = getIn(form.touched, name);\n    return touch && error ? error : null;\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 5\n}, this);\n\n_c = ErrorMessage;\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst RoomsInformations = props => {\n  _s();\n\n  const [roomsArrayCreated, setRoomsArrayCreated] = useState(false);\n  const [value, setValue] = useState(0);\n\n  const handleChangeTab = (event, newValue) => {\n    setValue(newValue, true);\n  };\n  /* console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes) */\n\n\n  const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes);\n\n  const setRoomsArray = numberOfRooms => {\n    for (let i = 0; i < numberOfRooms; i++) {\n      roomsArray.push(room);\n      /* console.log(roomsArray) */\n    }\n  };\n\n  useEffect(() => {\n    setRoomsArray(numberOfRooms);\n    setRoomsArrayCreated(true);\n  }, [numberOfRooms]);\n  /* console.log('roomsArray', roomsArray) */\n\n  initialValues.rooms = roomsArray;\n  /* console.log('initialValues.rooms', initialValues.rooms) */\n\n  if (!roomsArrayCreated) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RoomsInformations, \"klPubNyd3BdDewJ2uWsOOMa0Tnc=\");\n\n_c3 = RoomsInformations;\nexport default RoomsInformations;\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"TabPanel\");\n$RefreshReg$(_c3, \"RoomsInformations\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/LivingPlaceRegistration/LivingPlaceInformationsWrapper.js"],"names":["React","useState","useEffect","Formik","Form","Field","FieldArray","getIn","Yup","PropTypes","Box","Tabs","Tab","Typography","FormLabel","TextField","FormControl","Select","MenuItem","RadioGroup","FormControlLabel","Radio","FormGroup","Checkbox","roomTypes","roomFacilities","initialValues","rooms","livingPlaceArray","livingPlace","max_stay_duration","rental_price_term","description","changeover_time","deposit","service_costs","rentalprice","b2b_price","b2c_price","vhe_facility_types","welcome_pack","bed_sheets","towels","bike","weekly_cleaning","final_cleaning","kitchen_supplies","wifi","wifi_television","validationSchema","object","shape","array","of","room_type","string","required","room_number","number","floor","dimension_m2","coliving_allowed","boolean","number_of_living_places","ErrorMessage","name","form","error","errors","touch","touched","TabPanel","props","children","value","index","other","p","propTypes","node","isRequired","a11yProps","id","RoomsInformations","roomsArrayCreated","setRoomsArrayCreated","setValue","handleChangeTab","event","newValue","numberOfRooms","parseInt","data","residence","number_rooms_with_vhes","setRoomsArray","i","roomsArray","push","room"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Formik, Form, Field, FieldArray, getIn } from 'formik'\nimport * as Yup from 'yup'\n\nimport PropTypes from 'prop-types'\nimport { Box, Tabs, Tab, Typography, FormLabel, TextField, FormControl, Select, MenuItem, RadioGroup, FormControlLabel, Radio, FormGroup, Checkbox } from '@mui/material'\n\nimport roomTypes from '../../Json/RoomTypes'\nimport roomFacilities from '../../Json/RoomFacilities'\n\nlet initialValues = {\n    rooms: ''\n}\n\nlet livingPlaceArray = []\n\nconst livingPlace = {\n    max_stay_duration: '',\n    rental_price_term: '',\n    description: '',\n    changeover_time: '',\n    deposit: '',\n    service_costs: '',\n    rentalprice: '',\n    b2b_price: '',\n    b2c_price: '',\n    vhe_facility_types: {\n        welcome_pack: '',\n        bed_sheets: '',\n        towels: '',\n        bike: '',\n        weekly_cleaning: '',\n        final_cleaning: '',\n        kitchen_supplies: '',\n        wifi: '',\n        wifi_television: ''\n    }\n}\n\nconst validationSchema = Yup.object().shape({\n    rooms: Yup.array().of(\n        Yup.object().shape({\n            room_type: Yup.string().required('Test'),\n            room_number: Yup.number().required('Test'),\n            floor: Yup.number().required('Test'),\n            dimension_m2: Yup.number().required('Test'),\n            coliving_allowed: Yup.boolean().required('Test'),\n            number_of_living_places: Yup.number().required('Test')\n        })).required('Test')\n})\n \nconst ErrorMessage = ({ name }) => (\n    <Field\n        name={name}\n        render={({ form }) => {\n            const error = getIn(form.errors, name);\n            const touch = getIn(form.touched, name);\n            return touch && error ? error : null;\n        }}\n    />\n)\n\nfunction TabPanel(props) {\n    \n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\nconst RoomsInformations = (props) => {\n\n    const [roomsArrayCreated, setRoomsArrayCreated] = useState(false)\n    const [value, setValue] = useState(0)\n\n    const handleChangeTab = (event, newValue) => {\n        setValue(newValue, true)\n    }\n\n    /* console.log('number_of_rooms_with_living_places', props.data.residence.number_rooms_with_vhes) */\n    const numberOfRooms = parseInt(props.data.residence.number_rooms_with_vhes)\n    \n    const setRoomsArray = (numberOfRooms) => {\n        for (let i = 0; i < numberOfRooms; i++) {\n            roomsArray.push(room)\n            /* console.log(roomsArray) */\n        }\n    }\n\n    useEffect(() => {\n        setRoomsArray(numberOfRooms)\n        setRoomsArrayCreated(true)\n    }, [numberOfRooms])\n\n    /* console.log('roomsArray', roomsArray) */\n    initialValues.rooms = roomsArray\n    /* console.log('initialValues.rooms', initialValues.rooms) */\n\n    if(!roomsArrayCreated) return null\n\n    return (\n        <>\n            <h3>Tests</h3>\n        </>\n    )\n}\n\nexport default RoomsInformations\n\n/* https://codesandbox.io/s/f7rkz?file=/src/form.js:1198-1210 */"]},"metadata":{},"sourceType":"module"}