{"ast":null,"code":"var _jsxFileName = \"/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/FloorplanInformationsFormik.js\";\nimport React, { Fragment } from 'react';\nimport axios from 'axios';\nimport { Formik, Field, Form, FieldArray, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FloorplanInformationsFormik = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        floorplan_informations: [{\n          room: '',\n          floor: '',\n          area: ''\n        }]\n      },\n      onSubmit: data => {\n        console.log(data);\n        /* const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/registerintroduction/', data)\n        res.then(res => { console.log('res', res) }).catch( error => { console.log(error) }) */\n\n        props.next(data);\n      },\n      children: ({\n        values,\n        handleChange,\n        handleBlur\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n          name: 'floorplan_informations',\n          children: ({\n            push,\n            remove\n          }) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [values.floorplan_informations.length > 0 && values.floorplan_informations.map((room, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `floorplan_informations.${index}.room`,\n                      children: \"Room\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      name: `floorplan_informations.${index}.room`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `floorplan_informations.${index}.floor`,\n                      children: \"Floor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      name: `floorplan_informations.${index}.floor`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `floorplan_informations.${index}.area`,\n                      children: \"Area\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      name: `floorplan_informations.${index}.area`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 53\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"secondary\",\n                    onClick: () => remove(index),\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => push({\n                  room: '',\n                  floor: '',\n                  area: ''\n                }),\n                children: \"Add room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = FloorplanInformationsFormik;\nexport default FloorplanInformationsFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"FloorplanInformationsFormik\");","map":{"version":3,"sources":["/Users/moko/Desktop/TheBrink/lentoeu_frontend/src/Components/FloorplanInformationsFormik.js"],"names":["React","Fragment","axios","Formik","Field","Form","FieldArray","ErrorMessage","FloorplanInformationsFormik","props","floorplan_informations","room","floor","area","data","console","log","next","values","handleChange","handleBlur","push","remove","length","map","index"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\n\nimport axios from 'axios'\n\nimport { Formik, Field, Form, FieldArray, ErrorMessage } from 'formik'\n\nconst FloorplanInformationsFormik = (props) => {\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    floorplan_informations: [\n                        {\n                            room: '',\n                            floor: '',\n                            area: ''\n                        }\n                    ]\n                }}\n                onSubmit={( data ) => {\n                    console.log(data)\n                    /* const res = axios.post('http://10.0.4.5:8000/api/v1/vhe/registerintroduction/', data)\n                    res.then(res => { console.log('res', res) }).catch( error => { console.log(error) }) */\n                    props.next(data)\n                }}\n            >\n            {({\n                values,\n                handleChange,\n                handleBlur\n            }) => (\n                <Form>\n                    <FieldArray name={'floorplan_informations'}>\n                        {({push, remove}) => {\n                            return (\n                                <div>\n                                    {values.floorplan_informations.length > 0 && values.floorplan_informations.map((room, index) => (\n                                        <>\n                                            <Fragment>\n                                                <div className='row' key={index}>\n                                                    <label htmlFor={`floorplan_informations.${index}.room`}>Room</label>\n                                                    <Field name={`floorplan_informations.${index}.room`} />\n\n                                                    <label htmlFor={`floorplan_informations.${index}.floor`}>Floor</label>\n                                                    <Field name={`floorplan_informations.${index}.floor`} />\n\n                                                    <label htmlFor={`floorplan_informations.${index}.area`}>Area</label>\n                                                    <Field name={`floorplan_informations.${index}.area`} />\n                                                </div>\n                                            </Fragment>\n\n                                            <div className='col'>\n                                                <button type='button' className='secondary' onClick={() => remove(index)} >X</button>\n                                            </div>\n                                        </>\n                                    ))}\n\n                                    <button onClick={() => push({room: '', floor: '', area: ''})}>Add room</button>\n                                    {/* {errors.users && typeof errors.users === 'string' && <p className={'error'}>{errors.users}</p>} */}\n                                </div>\n                            )\n                        }}\n                    </FieldArray>\n\n                    {/* <FieldArray name='friends'>\n                        {({ remove, push }) => (\n                        <div>\n                            {values.friends.length > 0 && values.friends.map((friend, index) => (\n                                <div className='row' key={index}>\n                                <div className='col'>\n                                    <label htmlFor={`friends.${index}.name`}>Name</label>\n                                    <Field name={`friends.${index}.name`} placeholder='Jane Doe' type='text' />\n                                    <ErrorMessage name={`friends.${index}.name`} component='div' className='field-error' />\n                                </div>\n                                <div className='col'>\n                                    <label htmlFor={`friends.${index}.email`}>Email</label>\n                                    <Field name={`friends.${index}.email`} placeholder='jane@acme.com' type='email' />\n                                    <ErrorMessage name={`friends.${index}.name`} component='div' className='field-error' />\n                                </div>\n                                <div className='col'>\n                                    <button type='button' className='secondary' onClick={() => remove(index)} >X</button>\n                                </div>\n                                  </div>\n                                ))}\n                              <button type='button' className='secondary' onClick={() => push({ name: '', email: '' })}>Add Friend</button>\n                            </div>\n                          )}\n                        </FieldArray> */}\n\n                    <button type='submit'>Submit</button>\n                </Form>\n            )}\n            </Formik>\n        </>\n    )\n}\n\nexport default FloorplanInformationsFormik\n"]},"metadata":{},"sourceType":"module"}